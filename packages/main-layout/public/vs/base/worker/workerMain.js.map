{"version":3,"sources":["fake","../tmp/tsc-out/vs/loader.js","../tmp/tsc-out/vs/base/common/arrays.js","../tmp/tsc-out/vs/base/common/diff/diffChange.js","../tmp/tsc-out/vs/base/common/diff/diff.js","../tmp/tsc-out/vs/base/common/errors.js","../tmp/tsc-out/vs/base/common/functional.js","../tmp/tsc-out/vs/base/common/iterator.js","../tmp/tsc-out/vs/base/common/keyCodes.js","../tmp/tsc-out/vs/base/common/lifecycle.js","../tmp/tsc-out/vs/base/common/linkedList.js","../tmp/tsc-out/vs/base/common/event.js","../tmp/tsc-out/vs/base/common/cancellation.js","../tmp/tsc-out/vs/base/common/platform.js","../tmp/tsc-out/vs/base/common/strings.js","../tmp/tsc-out/vs/base/common/types.js","../tmp/tsc-out/vs/base/common/uri.js","../tmp/tsc-out/vs/base/common/worker/simpleWorker.js","../tmp/tsc-out/vs/editor/common/core/position.js","../tmp/tsc-out/vs/editor/common/core/range.js","../tmp/tsc-out/vs/editor/common/core/selection.js","../tmp/tsc-out/vs/editor/common/core/token.js","../tmp/tsc-out/vs/editor/common/core/uint.js","../tmp/tsc-out/vs/editor/common/core/characterClassifier.js","../tmp/tsc-out/vs/editor/common/diff/diffComputer.js","../tmp/tsc-out/vs/editor/common/model/wordHelper.js","../tmp/tsc-out/vs/editor/common/modes/linkComputer.js","../tmp/tsc-out/vs/editor/common/modes/supports/inplaceReplaceSupport.js","../tmp/tsc-out/vs/editor/common/standalone/promise-polyfill/polyfill.js","../tmp/tsc-out/vs/editor/common/standalone/standaloneEnums.js","../tmp/tsc-out/vs/editor/common/standalone/standaloneBase.js","../tmp/tsc-out/vs/editor/common/viewModel/prefixSumComputer.js","../tmp/tsc-out/vs/editor/common/model/mirrorTextModel.js","../tmp/tsc-out/vs/editor/common/services/editorSimpleWorker.js","../tmp/tsc-out/vs/base/worker/workerMain.js"],"names":[],"mappingstxRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtxxxGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtvlsrteA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrpkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxhvJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxtHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACntoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxxhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AlCvCA","file":"workerMain.js","sourcesContent":["}).call(this);","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/*---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n * Please make sure to make edits in the .ts file at https://github.com/Microsoft/vscode-loader/\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *---------------------------------------------------------------------------------------------\n *--------------------------------------------------------------------------------------------*/\nvar _amdLoaderGlobal = this;\nvar _commonjsGlobal = typeof global === 'object' ? global : {};\nvar AMDLoader;\n(function (AMDLoader) {\n    AMDLoader.global = _amdLoaderGlobal;\n    var Environment = (function () {\n        function Environment() {\n            this._detected = false;\n            this._isWindows = false;\n            this._isNode = false;\n            this._isElectronRenderer = false;\n            this._isWebWorker = false;\n        }\n        Object.defineProperty(Environment.prototype, \"isWindows\", {\n            get: function () {\n                this._detect();\n                return this._isWindows;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Environment.prototype, \"isNode\", {\n            get: function () {\n                this._detect();\n                return this._isNode;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Environment.prototype, \"isElectronRenderer\", {\n            get: function () {\n                this._detect();\n                return this._isElectronRenderer;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Environment.prototype, \"isWebWorker\", {\n            get: function () {\n                this._detect();\n                return this._isWebWorker;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Environment.prototype._detect = function () {\n            if (this._detected) {\n                return;\n            }\n            this._detected = true;\n            this._isWindows = Environment._isWindows();\n            this._isNode = (typeof module !== 'undefined' && !!module.exports);\n            this._isElectronRenderer = (typeof process !== 'undefined' && typeof process.versions !== 'undefined' && typeof process.versions.electron !== 'undefined' && process.type === 'renderer');\n            this._isWebWorker = (typeof AMDLoader.global.importScripts === 'function');\n        };\n        Environment._isWindows = function () {\n            if (typeof navigator !== 'undefined') {\n                if (navigator.userAgent && navigator.userAgent.indexOf('Windows') >= 0) {\n                    return true;\n                }\n            }\n            if (typeof process !== 'undefined') {\n                return (process.platform === 'win32');\n            }\n            return false;\n        };\n        return Environment;\n    }());\n    AMDLoader.Environment = Environment;\n})(AMDLoader || (AMDLoader = {}));\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar AMDLoader;\n(function (AMDLoader) {\n    var LoaderEvent = (function () {\n        function LoaderEvent(type, detail, timestamp) {\n            this.type = type;\n            this.detail = detail;\n            this.timestamp = timestamp;\n        }\n        return LoaderEvent;\n    }());\n    AMDLoader.LoaderEvent = LoaderEvent;\n    var LoaderEventRecorder = (function () {\n        function LoaderEventRecorder(loaderAvailableTimestamp) {\n            this._events = [new LoaderEvent(1 /* LoaderAvailable */, '', loaderAvailableTimestamp)];\n        }\n        LoaderEventRecorder.prototype.record = function (type, detail) {\n            this._events.push(new LoaderEvent(type, detail, AMDLoader.Utilities.getHighPerformanceTimestamp()));\n        };\n        LoaderEventRecorder.prototype.getEvents = function () {\n            return this._events;\n        };\n        return LoaderEventRecorder;\n    }());\n    AMDLoader.LoaderEventRecorder = LoaderEventRecorder;\n    var NullLoaderEventRecorder = (function () {\n        function NullLoaderEventRecorder() {\n        }\n        NullLoaderEventRecorder.prototype.record = function (type, detail) {\n            // Nothing to do\n        };\n        NullLoaderEventRecorder.prototype.getEvents = function () {\n            return [];\n        };\n        return NullLoaderEventRecorder;\n    }());\n    NullLoaderEventRecorder.INSTANCE = new NullLoaderEventRecorder();\n    AMDLoader.NullLoaderEventRecorder = NullLoaderEventRecorder;\n})(AMDLoader || (AMDLoader = {}));\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar AMDLoader;\n(function (AMDLoader) {\n    var Utilities = (function () {\n        function Utilities() {\n        }\n        /**\n         * This method does not take care of / vs \\\n         */\n        Utilities.fileUriToFilePath = function (isWindows, uri) {\n            uri = decodeURI(uri).replace(/%23/g, '#');\n            if (isWindows) {\n                if (/^file:\\/\\/\\//.test(uri)) {\n                    // This is a URI without a hostname => return only the path segment\n                    return uri.substr(8);\n                }\n                if (/^file:\\/\\//.test(uri)) {\n                    return uri.substr(5);\n                }\n            }\n            else {\n                if (/^file:\\/\\//.test(uri)) {\n                    return uri.substr(7);\n                }\n            }\n            // Not sure...\n            return uri;\n        };\n        Utilities.startsWith = function (haystack, needle) {\n            return haystack.length >= needle.length && haystack.substr(0, needle.length) === needle;\n        };\n        Utilities.endsWith = function (haystack, needle) {\n            return haystack.length >= needle.length && haystack.substr(haystack.length - needle.length) === needle;\n        };\n        // only check for \"?\" before \"#\" to ensure that there is a real Query-String\n        Utilities.containsQueryString = function (url) {\n            return /^[^\\#]*\\?/gi.test(url);\n        };\n        /**\n         * Does `url` start with http:// or https:// or file:// or / ?\n         */\n        Utilities.isAbsolutePath = function (url) {\n            return /^((http:\\/\\/)|(https:\\/\\/)|(file:\\/\\/)|(\\/))/.test(url);\n        };\n        Utilities.forEachProperty = function (obj, callback) {\n            if (obj) {\n                var key = void 0;\n                for (key in obj) {\n                    if (obj.hasOwnProperty(key)) {\n                        callback(key, obj[key]);\n                    }\n                }\n            }\n        };\n        Utilities.isEmpty = function (obj) {\n            var isEmpty = true;\n            Utilities.forEachProperty(obj, function () {\n                isEmpty = false;\n            });\n            return isEmpty;\n        };\n        Utilities.recursiveClone = function (obj) {\n            if (!obj || typeof obj !== 'object') {\n                return obj;\n            }\n            var result = Array.isArray(obj) ? [] : {};\n            Utilities.forEachProperty(obj, function (key, value) {\n                if (value && typeof value === 'object') {\n                    result[key] = Utilities.recursiveClone(value);\n                }\n                else {\n                    result[key] = value;\n                }\n            });\n            return result;\n        };\n        Utilities.generateAnonymousModule = function () {\n            return '===anonymous' + (Utilities.NEXT_ANONYMOUS_ID++) + '===';\n        };\n        Utilities.isAnonymousModule = function (id) {\n            return Utilities.startsWith(id, '===anonymous');\n        };\n        Utilities.getHighPerformanceTimestamp = function () {\n            if (!this.PERFORMANCE_NOW_PROBED) {\n                this.PERFORMANCE_NOW_PROBED = true;\n                this.HAS_PERFORMANCE_NOW = (AMDLoader.global.performance && typeof AMDLoader.global.performance.now === 'function');\n            }\n            return (this.HAS_PERFORMANCE_NOW ? AMDLoader.global.performance.now() : Date.now());\n        };\n        return Utilities;\n    }());\n    Utilities.NEXT_ANONYMOUS_ID = 1;\n    Utilities.PERFORMANCE_NOW_PROBED = false;\n    Utilities.HAS_PERFORMANCE_NOW = false;\n    AMDLoader.Utilities = Utilities;\n})(AMDLoader || (AMDLoader = {}));\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar AMDLoader;\n(function (AMDLoader) {\n    var ConfigurationOptionsUtil = (function () {\n        function ConfigurationOptionsUtil() {\n        }\n        /**\n         * Ensure configuration options make sense\n         */\n        ConfigurationOptionsUtil.validateConfigurationOptions = function (options) {\n            function defaultOnError(err) {\n                if (err.errorCode === 'load') {\n                    console.error('Loading \"' + err.moduleId + '\" failed');\n                    console.error('Detail: ', err.detail);\n                    if (err.detail && err.detail.stack) {\n                        console.error(err.detail.stack);\n                    }\n                    console.error('Here are the modules that depend on it:');\n                    console.error(err.neededBy);\n                    return;\n                }\n                if (err.errorCode === 'factory') {\n                    console.error('The factory method of \"' + err.moduleId + '\" has thrown an exception');\n                    console.error(err.detail);\n                    if (err.detail && err.detail.stack) {\n                        console.error(err.detail.stack);\n                    }\n                    return;\n                }\n            }\n            options = options || {};\n            if (typeof options.baseUrl !== 'string') {\n                options.baseUrl = '';\n            }\n            if (typeof options.isBuild !== 'boolean') {\n                options.isBuild = false;\n            }\n            if (typeof options.paths !== 'object') {\n                options.paths = {};\n            }\n            if (typeof options.config !== 'object') {\n                options.config = {};\n            }\n            if (typeof options.catchError === 'undefined') {\n                options.catchError = false;\n            }\n            if (typeof options.urlArgs !== 'string') {\n                options.urlArgs = '';\n            }\n            if (typeof options.onError !== 'function') {\n                options.onError = defaultOnError;\n            }\n            if (typeof options.ignoreDuplicateModules !== 'object' || !Array.isArray(options.ignoreDuplicateModules)) {\n                options.ignoreDuplicateModules = [];\n            }\n            if (options.baseUrl.length > 0) {\n                if (!AMDLoader.Utilities.endsWith(options.baseUrl, '/')) {\n                    options.baseUrl += '/';\n                }\n            }\n            if (typeof options.cspNonce !== 'string') {\n                options.cspNonce = '';\n            }\n            if (!Array.isArray(options.nodeModules)) {\n                options.nodeModules = [];\n            }\n            if (typeof options.nodeCachedData === 'object') {\n                if (typeof options.nodeCachedData.seed !== 'string') {\n                    options.nodeCachedData.seed = 'seed';\n                }\n                if (typeof options.nodeCachedData.writeDelay !== 'number' || options.nodeCachedData.writeDelay < 0) {\n                    options.nodeCachedData.writeDelay = 1000 * 7;\n                }\n                if (typeof options.nodeCachedData.onData !== 'function') {\n                    options.nodeCachedData.onData = function (err) {\n                        if (err && err.errorCode === 'cachedDataRejected') {\n                            console.warn('Rejected cached data from file: ' + err.path);\n                        }\n                        else if (err && err.errorCode) {\n                            console.error('Problems handling cached data file: ' + err.path);\n                            console.error(err.detail);\n                        }\n                        else if (err) {\n                            console.error(err);\n                        }\n                    };\n                }\n                if (!options.nodeCachedData.path || typeof options.nodeCachedData.path !== 'string') {\n                    options.nodeCachedData.onData('INVALID cached data configuration, \\'path\\' MUST be set');\n                    options.nodeCachedData = undefined;\n                }\n            }\n            return options;\n        };\n        ConfigurationOptionsUtil.mergeConfigurationOptions = function (overwrite, base) {\n            if (overwrite === void 0) {\n                overwrite = null;\n            }\n            if (base === void 0) {\n                base = null;\n            }\n            var result = AMDLoader.Utilities.recursiveClone(base || {});\n            // Merge known properties and overwrite the unknown ones\n            AMDLoader.Utilities.forEachProperty(overwrite, function (key, value) {\n                if (key === 'ignoreDuplicateModules' && typeof result.ignoreDuplicateModules !== 'undefined') {\n                    result.ignoreDuplicateModules = result.ignoreDuplicateModules.concat(value);\n                }\n                else if (key === 'paths' && typeof result.paths !== 'undefined') {\n                    AMDLoader.Utilities.forEachProperty(value, function (key2, value2) { return result.paths[key2] = value2; });\n                }\n                else if (key === 'config' && typeof result.config !== 'undefined') {\n                    AMDLoader.Utilities.forEachProperty(value, function (key2, value2) { return result.config[key2] = value2; });\n                }\n                else {\n                    result[key] = AMDLoader.Utilities.recursiveClone(value);\n                }\n            });\n            return ConfigurationOptionsUtil.validateConfigurationOptions(result);\n        };\n        return ConfigurationOptionsUtil;\n    }());\n    AMDLoader.ConfigurationOptionsUtil = ConfigurationOptionsUtil;\n    var Configuration = (function () {\n        function Configuration(env, options) {\n            this._env = env;\n            this.options = ConfigurationOptionsUtil.mergeConfigurationOptions(options);\n            this._createIgnoreDuplicateModulesMap();\n            this._createNodeModulesMap();\n            this._createSortedPathsRules();\n            if (this.options.baseUrl === '') {\n                if (this.options.nodeRequire && this.options.nodeRequire.main && this.options.nodeRequire.main.filename && this._env.isNode) {\n                    var nodeMain = this.options.nodeRequire.main.filename;\n                    var dirnameIndex = Math.max(nodeMain.lastIndexOf('/'), nodeMain.lastIndexOf('\\\\'));\n                    this.options.baseUrl = nodeMain.substring(0, dirnameIndex + 1);\n                }\n                if (this.options.nodeMain && this._env.isNode) {\n                    var nodeMain = this.options.nodeMain;\n                    var dirnameIndex = Math.max(nodeMain.lastIndexOf('/'), nodeMain.lastIndexOf('\\\\'));\n                    this.options.baseUrl = nodeMain.substring(0, dirnameIndex + 1);\n                }\n            }\n        }\n        Configuration.prototype._createIgnoreDuplicateModulesMap = function () {\n            // Build a map out of the ignoreDuplicateModules array\n            this.ignoreDuplicateModulesMap = {};\n            for (var i = 0; i < this.options.ignoreDuplicateModules.length; i++) {\n                this.ignoreDuplicateModulesMap[this.options.ignoreDuplicateModules[i]] = true;\n            }\n        };\n        Configuration.prototype._createNodeModulesMap = function () {\n            // Build a map out of nodeModules array\n            this.nodeModulesMap = Object.create(null);\n            for (var _i = 0, _a = this.options.nodeModules; _i < _a.length; _i++) {\n                var nodeModule = _a[_i];\n                this.nodeModulesMap[nodeModule] = true;\n            }\n        };\n        Configuration.prototype._createSortedPathsRules = function () {\n            var _this = this;\n            // Create an array our of the paths rules, sorted descending by length to\n            // result in a more specific -> less specific order\n            this.sortedPathsRules = [];\n            AMDLoader.Utilities.forEachProperty(this.options.paths, function (from, to) {\n                if (!Array.isArray(to)) {\n                    _this.sortedPathsRules.push({\n                        from: from,\n                        to: [to]\n                    });\n                }\n                else {\n                    _this.sortedPathsRules.push({\n                        from: from,\n                        to: to\n                    });\n                }\n            });\n            this.sortedPathsRules.sort(function (a, b) {\n                return b.from.length - a.from.length;\n            });\n        };\n        /**\n         * Clone current configuration and overwrite options selectively.\n         * @param options The selective options to overwrite with.\n         * @result A new configuration\n         */\n        Configuration.prototype.cloneAndMerge = function (options) {\n            return new Configuration(this._env, ConfigurationOptionsUtil.mergeConfigurationOptions(options, this.options));\n        };\n        /**\n         * Get current options bag. Useful for passing it forward to plugins.\n         */\n        Configuration.prototype.getOptionsLiteral = function () {\n            return this.options;\n        };\n        Configuration.prototype._applyPaths = function (moduleId) {\n            var pathRule;\n            for (var i = 0, len = this.sortedPathsRules.length; i < len; i++) {\n                pathRule = this.sortedPathsRules[i];\n                if (AMDLoader.Utilities.startsWith(moduleId, pathRule.from)) {\n                    var result = [];\n                    for (var j = 0, lenJ = pathRule.to.length; j < lenJ; j++) {\n                        result.push(pathRule.to[j] + moduleId.substr(pathRule.from.length));\n                    }\n                    return result;\n                }\n            }\n            return [moduleId];\n        };\n        Configuration.prototype._addUrlArgsToUrl = function (url) {\n            if (AMDLoader.Utilities.containsQueryString(url)) {\n                return url + '&' + this.options.urlArgs;\n            }\n            else {\n                return url + '?' + this.options.urlArgs;\n            }\n        };\n        Configuration.prototype._addUrlArgsIfNecessaryToUrl = function (url) {\n            if (this.options.urlArgs) {\n                return this._addUrlArgsToUrl(url);\n            }\n            return url;\n        };\n        Configuration.prototype._addUrlArgsIfNecessaryToUrls = function (urls) {\n            if (this.options.urlArgs) {\n                for (var i = 0, len = urls.length; i < len; i++) {\n                    urls[i] = this._addUrlArgsToUrl(urls[i]);\n                }\n            }\n            return urls;\n        };\n        /**\n         * Transform a module id to a location. Appends .js to module ids\n         */\n        Configuration.prototype.moduleIdToPaths = function (moduleId) {\n            if (this.nodeModulesMap[moduleId] === true) {\n                // This is a node module...\n                if (this.isBuild()) {\n                    // ...and we are at build time, drop it\n                    return ['empty:'];\n                }\n                else {\n                    // ...and at runtime we create a `shortcut`-path\n                    return ['node|' + moduleId];\n                }\n            }\n            var result = moduleId;\n            var results;\n            if (!AMDLoader.Utilities.endsWith(result, '.js') && !AMDLoader.Utilities.isAbsolutePath(result)) {\n                results = this._applyPaths(result);\n                for (var i = 0, len = results.length; i < len; i++) {\n                    if (this.isBuild() && results[i] === 'empty:') {\n                        continue;\n                    }\n                    if (!AMDLoader.Utilities.isAbsolutePath(results[i])) {\n                        results[i] = this.options.baseUrl + results[i];\n                    }\n                    if (!AMDLoader.Utilities.endsWith(results[i], '.js') && !AMDLoader.Utilities.containsQueryString(results[i])) {\n                        results[i] = results[i] + '.js';\n                    }\n                }\n            }\n            else {\n                if (!AMDLoader.Utilities.endsWith(result, '.js') && !AMDLoader.Utilities.containsQueryString(result)) {\n                    result = result + '.js';\n                }\n                results = [result];\n            }\n            return this._addUrlArgsIfNecessaryToUrls(results);\n        };\n        /**\n         * Transform a module id or url to a location.\n         */\n        Configuration.prototype.requireToUrl = function (url) {\n            var result = url;\n            if (!AMDLoader.Utilities.isAbsolutePath(result)) {\n                result = this._applyPaths(result)[0];\n                if (!AMDLoader.Utilities.isAbsolutePath(result)) {\n                    result = this.options.baseUrl + result;\n                }\n            }\n            return this._addUrlArgsIfNecessaryToUrl(result);\n        };\n        /**\n         * Flag to indicate if current execution is as part of a build.\n         */\n        Configuration.prototype.isBuild = function () {\n            return this.options.isBuild;\n        };\n        /**\n         * Test if module `moduleId` is expected to be defined multiple times\n         */\n        Configuration.prototype.isDuplicateMessageIgnoredFor = function (moduleId) {\n            return this.ignoreDuplicateModulesMap.hasOwnProperty(moduleId);\n        };\n        /**\n         * Get the configuration settings for the provided module id\n         */\n        Configuration.prototype.getConfigForModule = function (moduleId) {\n            if (this.options.config) {\n                return this.options.config[moduleId];\n            }\n        };\n        /**\n         * Should errors be caught when executing module factories?\n         */\n        Configuration.prototype.shouldCatchError = function () {\n            return this.options.catchError;\n        };\n        /**\n         * Should statistics be recorded?\n         */\n        Configuration.prototype.shouldRecordStats = function () {\n            return this.options.recordStats;\n        };\n        /**\n         * Forward an error to the error handler.\n         */\n        Configuration.prototype.onError = function (err) {\n            this.options.onError(err);\n        };\n        return Configuration;\n    }());\n    AMDLoader.Configuration = Configuration;\n})(AMDLoader || (AMDLoader = {}));\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar AMDLoader;\n(function (AMDLoader) {\n    /**\n     * Load `scriptSrc` only once (avoid multiple <script> tags)\n     */\n    var OnlyOnceScriptLoader = (function () {\n        function OnlyOnceScriptLoader(env) {\n            this._env = env;\n            this._scriptLoader = null;\n            this._callbackMap = {};\n        }\n        OnlyOnceScriptLoader.prototype.load = function (moduleManager, scriptSrc, callback, errorback) {\n            var _this = this;\n            if (!this._scriptLoader) {\n                this._scriptLoader = (this._env.isWebWorker\n                    ? new WorkerScriptLoader()\n                    : this._env.isNode\n                        ? new NodeScriptLoader(this._env)\n                        : new BrowserScriptLoader());\n            }\n            var scriptCallbacks = {\n                callback: callback,\n                errorback: errorback\n            };\n            if (this._callbackMap.hasOwnProperty(scriptSrc)) {\n                this._callbackMap[scriptSrc].push(scriptCallbacks);\n                return;\n            }\n            this._callbackMap[scriptSrc] = [scriptCallbacks];\n            this._scriptLoader.load(moduleManager, scriptSrc, function () { return _this.triggerCallback(scriptSrc); }, function (err) { return _this.triggerErrorback(scriptSrc, err); });\n        };\n        OnlyOnceScriptLoader.prototype.triggerCallback = function (scriptSrc) {\n            var scriptCallbacks = this._callbackMap[scriptSrc];\n            delete this._callbackMap[scriptSrc];\n            for (var i = 0; i < scriptCallbacks.length; i++) {\n                scriptCallbacks[i].callback();\n            }\n        };\n        OnlyOnceScriptLoader.prototype.triggerErrorback = function (scriptSrc, err) {\n            var scriptCallbacks = this._callbackMap[scriptSrc];\n            delete this._callbackMap[scriptSrc];\n            for (var i = 0; i < scriptCallbacks.length; i++) {\n                scriptCallbacks[i].errorback(err);\n            }\n        };\n        return OnlyOnceScriptLoader;\n    }());\n    var BrowserScriptLoader = (function () {\n        function BrowserScriptLoader() {\n        }\n        /**\n         * Attach load / error listeners to a script element and remove them when either one has fired.\n         * Implemented for browssers supporting HTML5 standard 'load' and 'error' events.\n         */\n        BrowserScriptLoader.prototype.attachListeners = function (script, callback, errorback) {\n            var unbind = function () {\n                script.removeEventListener('load', loadEventListener);\n                script.removeEventListener('error', errorEventListener);\n            };\n            var loadEventListener = function (e) {\n                unbind();\n                callback();\n            };\n            var errorEventListener = function (e) {\n                unbind();\n                errorback(e);\n            };\n            script.addEventListener('load', loadEventListener);\n            script.addEventListener('error', errorEventListener);\n        };\n        BrowserScriptLoader.prototype.load = function (moduleManager, scriptSrc, callback, errorback) {\n            var script = document.createElement('script');\n            script.setAttribute('async', 'async');\n            script.setAttribute('type', 'text/javascript');\n            this.attachListeners(script, callback, errorback);\n            script.setAttribute('src', scriptSrc);\n            // Propagate CSP nonce to dynamically created script tag.\n            var cspNonce = moduleManager.getConfig().getOptionsLiteral().cspNonce;\n            if (cspNonce) {\n                script.setAttribute('nonce', cspNonce);\n            }\n            document.getElementsByTagName('head')[0].appendChild(script);\n        };\n        return BrowserScriptLoader;\n    }());\n    var WorkerScriptLoader = (function () {\n        function WorkerScriptLoader() {\n        }\n        WorkerScriptLoader.prototype.load = function (moduleManager, scriptSrc, callback, errorback) {\n            try {\n                importScripts(scriptSrc);\n                callback();\n            }\n            catch (e) {\n                errorback(e);\n            }\n        };\n        return WorkerScriptLoader;\n    }());\n    var NodeScriptLoader = (function () {\n        function NodeScriptLoader(env) {\n            this._env = env;\n            this._didInitialize = false;\n            this._didPatchNodeRequire = false;\n            this._hasCreateCachedData = false;\n        }\n        NodeScriptLoader.prototype._init = function (nodeRequire) {\n            if (this._didInitialize) {\n                return;\n            }\n            this._didInitialize = true;\n            // capture node modules\n            this._fs = nodeRequire('fs');\n            this._vm = nodeRequire('vm');\n            this._path = nodeRequire('path');\n            this._crypto = nodeRequire('crypto');\n            // check for `createCachedData`-api\n            this._hasCreateCachedData = typeof (new this._vm.Script('').createCachedData) === 'function';\n        };\n        // patch require-function of nodejs such that we can manually create a script\n        // from cached data. this is done by overriding the `Module._compile` function\n        NodeScriptLoader.prototype._initNodeRequire = function (nodeRequire, moduleManager) {\n            var nodeCachedData = moduleManager.getConfig().getOptionsLiteral().nodeCachedData;\n            if (!nodeCachedData || this._didPatchNodeRequire) {\n                return;\n            }\n            this._didPatchNodeRequire = true;\n            var that = this;\n            var Module = nodeRequire('module');\n            function makeRequireFunction(mod) {\n                var Module = mod.constructor;\n                var require = function require(path) {\n                    try {\n                        return mod.require(path);\n                    }\n                    finally {\n                        // nothing\n                    }\n                };\n                require.resolve = function resolve(request) {\n                    return Module._resolveFilename(request, mod);\n                };\n                require.main = process.mainModule;\n                require.extensions = Module._extensions;\n                require.cache = Module._cache;\n                return require;\n            }\n            Module.prototype._compile = function (content, filename) {\n                // remove shebang\n                content = content.replace(/^#!.*/, '');\n                // create wrapper function\n                var wrapper = Module.wrap(content);\n                var cachedDataPath = that._getCachedDataPath(nodeCachedData.seed, nodeCachedData.path, filename);\n                var options = { filename: filename };\n                try {\n                    options.cachedData = that._fs.readFileSync(cachedDataPath);\n                }\n                catch (e) {\n                    options.produceCachedData = !that._hasCreateCachedData;\n                }\n                var script = new that._vm.Script(wrapper, options);\n                var compileWrapper = script.runInThisContext(options);\n                var dirname = that._path.dirname(filename);\n                var require = makeRequireFunction(this);\n                var args = [this.exports, require, this, filename, dirname, process, _commonjsGlobal, Buffer];\n                var result = compileWrapper.apply(this.exports, args);\n                that._processCachedData(moduleManager, script, wrapper, cachedDataPath, !options.cachedData);\n                return result;\n            };\n        };\n        NodeScriptLoader.prototype.load = function (moduleManager, scriptSrc, callback, errorback) {\n            var _this = this;\n            var opts = moduleManager.getConfig().getOptionsLiteral();\n            var nodeRequire = (opts.nodeRequire || AMDLoader.global.nodeRequire);\n            var nodeInstrumenter = (opts.nodeInstrumenter || function (c) { return c; });\n            this._init(nodeRequire);\n            this._initNodeRequire(nodeRequire, moduleManager);\n            var recorder = moduleManager.getRecorder();\n            if (/^node\\|/.test(scriptSrc)) {\n                var pieces = scriptSrc.split('|');\n                var moduleExports_1 = null;\n                try {\n                    moduleExports_1 = nodeRequire(pieces[1]);\n                }\n                catch (err) {\n                    errorback(err);\n                    return;\n                }\n                moduleManager.enqueueDefineAnonymousModule([], function () { return moduleExports_1; });\n                callback();\n            }\n            else {\n                scriptSrc = AMDLoader.Utilities.fileUriToFilePath(this._env.isWindows, scriptSrc);\n                this._fs.readFile(scriptSrc, { encoding: 'utf8' }, function (err, data) {\n                    if (err) {\n                        errorback(err);\n                        return;\n                    }\n                    var normalizedScriptSrc = _this._path.normalize(scriptSrc);\n                    var vmScriptSrc = normalizedScriptSrc;\n                    // Make the script src friendly towards electron\n                    if (_this._env.isElectronRenderer) {\n                        var driveLetterMatch = vmScriptSrc.match(/^([a-z])\\:(.*)/i);\n                        if (driveLetterMatch) {\n                            // windows\n                            vmScriptSrc = \"file:///\" + (driveLetterMatch[1].toUpperCase() + ':' + driveLetterMatch[2]).replace(/\\\\/g, '/');\n                        }\n                        else {\n                            // nix\n                            vmScriptSrc = \"file://\" + vmScriptSrc;\n                        }\n                    }\n                    var contents, prefix = '(function (require, define, __filename, __dirname) { ', suffix = '\\n});';\n                    if (data.charCodeAt(0) === NodeScriptLoader._BOM) {\n                        contents = prefix + data.substring(1) + suffix;\n                    }\n                    else {\n                        contents = prefix + data + suffix;\n                    }\n                    contents = nodeInstrumenter(contents, normalizedScriptSrc);\n                    if (!opts.nodeCachedData) {\n                        _this._loadAndEvalScript(moduleManager, scriptSrc, vmScriptSrc, contents, { filename: vmScriptSrc }, recorder, callback, errorback);\n                    }\n                    else {\n                        var cachedDataPath_1 = _this._getCachedDataPath(opts.nodeCachedData.seed, opts.nodeCachedData.path, scriptSrc);\n                        _this._fs.readFile(cachedDataPath_1, function (_err, cachedData) {\n                            // create script options\n                            var options = {\n                                filename: vmScriptSrc,\n                                produceCachedData: !_this._hasCreateCachedData && typeof cachedData === 'undefined',\n                                cachedData: cachedData\n                            };\n                            var script = _this._loadAndEvalScript(moduleManager, scriptSrc, vmScriptSrc, contents, options, recorder, callback, errorback);\n                            _this._processCachedData(moduleManager, script, contents, cachedDataPath_1, !options.cachedData);\n                        });\n                    }\n                });\n            }\n        };\n        NodeScriptLoader.prototype._loadAndEvalScript = function (moduleManager, scriptSrc, vmScriptSrc, contents, options, recorder, callback, errorback) {\n            // create script, run script\n            recorder.record(31 /* NodeBeginEvaluatingScript */, scriptSrc);\n            var script = new this._vm.Script(contents, options);\n            var r = script.runInThisContext(options);\n            var globalDefineFunc = moduleManager.getGlobalAMDDefineFunc();\n            var receivedDefineCall = false;\n            var localDefineFunc = function () {\n                receivedDefineCall = true;\n                return globalDefineFunc.apply(null, arguments);\n            };\n            localDefineFunc.amd = globalDefineFunc.amd;\n            r.call(AMDLoader.global, moduleManager.getGlobalAMDRequireFunc(), localDefineFunc, vmScriptSrc, this._path.dirname(scriptSrc));\n            // signal done\n            recorder.record(32 /* NodeEndEvaluatingScript */, scriptSrc);\n            if (receivedDefineCall) {\n                callback();\n            }\n            else {\n                errorback(new Error(\"Didn't receive define call in \" + scriptSrc + \"!\"));\n            }\n            return script;\n        };\n        NodeScriptLoader.prototype._getCachedDataPath = function (seed, basedir, filename) {\n            var hash = this._crypto.createHash('md5').update(filename, 'utf8').update(seed, 'utf8').digest('hex');\n            var basename = this._path.basename(filename).replace(/\\.js$/, '');\n            return this._path.join(basedir, basename + \"-\" + hash + \".code\");\n        };\n        NodeScriptLoader.prototype._processCachedData = function (moduleManager, script, contents, cachedDataPath, createCachedData) {\n            var _this = this;\n            if (script.cachedDataRejected) {\n                // data rejected => delete cache file\n                moduleManager.getConfig().getOptionsLiteral().nodeCachedData.onData({\n                    errorCode: 'cachedDataRejected',\n                    path: cachedDataPath\n                });\n                NodeScriptLoader._runSoon(function () {\n                    return _this._fs.unlink(cachedDataPath, function (err) {\n                        if (err) {\n                            moduleManager.getConfig().getOptionsLiteral().nodeCachedData.onData({\n                                errorCode: 'unlink',\n                                path: cachedDataPath,\n                                detail: err\n                            });\n                        }\n                    });\n                }, moduleManager.getConfig().getOptionsLiteral().nodeCachedData.writeDelay / 2);\n            }\n            else if (script.cachedDataProduced) {\n                // data produced => tell outside world\n                moduleManager.getConfig().getOptionsLiteral().nodeCachedData.onData(undefined, {\n                    path: cachedDataPath\n                });\n                // data produced => write cache file\n                NodeScriptLoader._runSoon(function () {\n                    return _this._fs.writeFile(cachedDataPath, script.cachedData, function (err) {\n                        if (err) {\n                            moduleManager.getConfig().getOptionsLiteral().nodeCachedData.onData({\n                                errorCode: 'writeFile',\n                                path: cachedDataPath,\n                                detail: err\n                            });\n                        }\n                    });\n                }, moduleManager.getConfig().getOptionsLiteral().nodeCachedData.writeDelay);\n            }\n            else if (this._hasCreateCachedData && createCachedData) {\n                // NEW world\n                // data produced => tell outside world\n                moduleManager.getConfig().getOptionsLiteral().nodeCachedData.onData(undefined, {\n                    path: cachedDataPath\n                });\n                // soon'ish create and save cached data\n                NodeScriptLoader._runSoon(function () {\n                    var data = script.createCachedData(contents);\n                    _this._fs.writeFile(cachedDataPath, data, function (err) {\n                        if (!err) {\n                            return;\n                        }\n                        moduleManager.getConfig().getOptionsLiteral().nodeCachedData.onData({\n                            errorCode: 'writeFile',\n                            path: cachedDataPath,\n                            detail: err\n                        });\n                    });\n                }, moduleManager.getConfig().getOptionsLiteral().nodeCachedData.writeDelay);\n            }\n        };\n        NodeScriptLoader._runSoon = function (callback, minTimeout) {\n            var timeout = minTimeout + Math.ceil(Math.random() * minTimeout);\n            setTimeout(callback, timeout);\n        };\n        return NodeScriptLoader;\n    }());\n    NodeScriptLoader._BOM = 0xFEFF;\n    function createScriptLoader(env) {\n        return new OnlyOnceScriptLoader(env);\n    }\n    AMDLoader.createScriptLoader = createScriptLoader;\n})(AMDLoader || (AMDLoader = {}));\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar AMDLoader;\n(function (AMDLoader) {\n    // ------------------------------------------------------------------------\n    // ModuleIdResolver\n    var ModuleIdResolver = (function () {\n        function ModuleIdResolver(fromModuleId) {\n            var lastSlash = fromModuleId.lastIndexOf('/');\n            if (lastSlash !== -1) {\n                this.fromModulePath = fromModuleId.substr(0, lastSlash + 1);\n            }\n            else {\n                this.fromModulePath = '';\n            }\n        }\n        /**\n         * Normalize 'a/../name' to 'name', etc.\n         */\n        ModuleIdResolver._normalizeModuleId = function (moduleId) {\n            var r = moduleId, pattern;\n            // replace /./ => /\n            pattern = /\\/\\.\\//;\n            while (pattern.test(r)) {\n                r = r.replace(pattern, '/');\n            }\n            // replace ^./ => nothing\n            r = r.replace(/^\\.\\//g, '');\n            // replace /aa/../ => / (BUT IGNORE /../../)\n            pattern = /\\/(([^\\/])|([^\\/][^\\/\\.])|([^\\/\\.][^\\/])|([^\\/][^\\/][^\\/]+))\\/\\.\\.\\//;\n            while (pattern.test(r)) {\n                r = r.replace(pattern, '/');\n            }\n            // replace ^aa/../ => nothing (BUT IGNORE ../../)\n            r = r.replace(/^(([^\\/])|([^\\/][^\\/\\.])|([^\\/\\.][^\\/])|([^\\/][^\\/][^\\/]+))\\/\\.\\.\\//, '');\n            return r;\n        };\n        /**\n         * Resolve relative module ids\n         */\n        ModuleIdResolver.prototype.resolveModule = function (moduleId) {\n            var result = moduleId;\n            if (!AMDLoader.Utilities.isAbsolutePath(result)) {\n                if (AMDLoader.Utilities.startsWith(result, './') || AMDLoader.Utilities.startsWith(result, '../')) {\n                    result = ModuleIdResolver._normalizeModuleId(this.fromModulePath + result);\n                }\n            }\n            return result;\n        };\n        return ModuleIdResolver;\n    }());\n    ModuleIdResolver.ROOT = new ModuleIdResolver('');\n    AMDLoader.ModuleIdResolver = ModuleIdResolver;\n    // ------------------------------------------------------------------------\n    // Module\n    var Module = (function () {\n        function Module(id, strId, dependencies, callback, errorback, moduleIdResolver) {\n            this.id = id;\n            this.strId = strId;\n            this.dependencies = dependencies;\n            this._callback = callback;\n            this._errorback = errorback;\n            this.moduleIdResolver = moduleIdResolver;\n            this.exports = {};\n            this.exportsPassedIn = false;\n            this.unresolvedDependenciesCount = this.dependencies.length;\n            this._isComplete = false;\n        }\n        Module._safeInvokeFunction = function (callback, args) {\n            try {\n                return {\n                    returnedValue: callback.apply(AMDLoader.global, args),\n                    producedError: null\n                };\n            }\n            catch (e) {\n                return {\n                    returnedValue: null,\n                    producedError: e\n                };\n            }\n        };\n        Module._invokeFactory = function (config, strModuleId, callback, dependenciesValues) {\n            if (config.isBuild() && !AMDLoader.Utilities.isAnonymousModule(strModuleId)) {\n                return {\n                    returnedValue: null,\n                    producedError: null\n                };\n            }\n            if (config.shouldCatchError()) {\n                return this._safeInvokeFunction(callback, dependenciesValues);\n            }\n            return {\n                returnedValue: callback.apply(AMDLoader.global, dependenciesValues),\n                producedError: null\n            };\n        };\n        Module.prototype.complete = function (recorder, config, dependenciesValues) {\n            this._isComplete = true;\n            var producedError = null;\n            if (this._callback) {\n                if (typeof this._callback === 'function') {\n                    recorder.record(21 /* BeginInvokeFactory */, this.strId);\n                    var r = Module._invokeFactory(config, this.strId, this._callback, dependenciesValues);\n                    producedError = r.producedError;\n                    recorder.record(22 /* EndInvokeFactory */, this.strId);\n                    if (!producedError && typeof r.returnedValue !== 'undefined' && (!this.exportsPassedIn || AMDLoader.Utilities.isEmpty(this.exports))) {\n                        this.exports = r.returnedValue;\n                    }\n                }\n                else {\n                    this.exports = this._callback;\n                }\n            }\n            if (producedError) {\n                config.onError({\n                    errorCode: 'factory',\n                    moduleId: this.strId,\n                    detail: producedError\n                });\n            }\n            this.dependencies = null;\n            this._callback = null;\n            this._errorback = null;\n            this.moduleIdResolver = null;\n        };\n        /**\n         * One of the direct dependencies or a transitive dependency has failed to load.\n         */\n        Module.prototype.onDependencyError = function (err) {\n            if (this._errorback) {\n                this._errorback(err);\n                return true;\n            }\n            return false;\n        };\n        /**\n         * Is the current module complete?\n         */\n        Module.prototype.isComplete = function () {\n            return this._isComplete;\n        };\n        return Module;\n    }());\n    AMDLoader.Module = Module;\n    var ModuleIdProvider = (function () {\n        function ModuleIdProvider() {\n            this._nextId = 0;\n            this._strModuleIdToIntModuleId = new Map();\n            this._intModuleIdToStrModuleId = [];\n            // Ensure values 0, 1, 2 are assigned accordingly with ModuleId\n            this.getModuleId('exports');\n            this.getModuleId('module');\n            this.getModuleId('require');\n        }\n        ModuleIdProvider.prototype.getMaxModuleId = function () {\n            return this._nextId;\n        };\n        ModuleIdProvider.prototype.getModuleId = function (strModuleId) {\n            var id = this._strModuleIdToIntModuleId.get(strModuleId);\n            if (typeof id === 'undefined') {\n                id = this._nextId++;\n                this._strModuleIdToIntModuleId.set(strModuleId, id);\n                this._intModuleIdToStrModuleId[id] = strModuleId;\n            }\n            return id;\n        };\n        ModuleIdProvider.prototype.getStrModuleId = function (moduleId) {\n            return this._intModuleIdToStrModuleId[moduleId];\n        };\n        return ModuleIdProvider;\n    }());\n    var RegularDependency = (function () {\n        function RegularDependency(id) {\n            this.id = id;\n        }\n        return RegularDependency;\n    }());\n    RegularDependency.EXPORTS = new RegularDependency(0 /* EXPORTS */);\n    RegularDependency.MODULE = new RegularDependency(1 /* MODULE */);\n    RegularDependency.REQUIRE = new RegularDependency(2 /* REQUIRE */);\n    AMDLoader.RegularDependency = RegularDependency;\n    var PluginDependency = (function () {\n        function PluginDependency(id, pluginId, pluginParam) {\n            this.id = id;\n            this.pluginId = pluginId;\n            this.pluginParam = pluginParam;\n        }\n        return PluginDependency;\n    }());\n    AMDLoader.PluginDependency = PluginDependency;\n    var ModuleManager = (function () {\n        function ModuleManager(env, scriptLoader, defineFunc, requireFunc, loaderAvailableTimestamp) {\n            if (loaderAvailableTimestamp === void 0) {\n                loaderAvailableTimestamp = 0;\n            }\n            this._env = env;\n            this._scriptLoader = scriptLoader;\n            this._loaderAvailableTimestamp = loaderAvailableTimestamp;\n            this._defineFunc = defineFunc;\n            this._requireFunc = requireFunc;\n            this._moduleIdProvider = new ModuleIdProvider();\n            this._config = new AMDLoader.Configuration(this._env);\n            this._modules2 = [];\n            this._knownModules2 = [];\n            this._inverseDependencies2 = [];\n            this._inversePluginDependencies2 = new Map();\n            this._currentAnnonymousDefineCall = null;\n            this._recorder = null;\n            this._buildInfoPath = [];\n            this._buildInfoDefineStack = [];\n            this._buildInfoDependencies = [];\n        }\n        ModuleManager.prototype.reset = function () {\n            return new ModuleManager(this._env, this._scriptLoader, this._defineFunc, this._requireFunc, this._loaderAvailableTimestamp);\n        };\n        ModuleManager.prototype.getGlobalAMDDefineFunc = function () {\n            return this._defineFunc;\n        };\n        ModuleManager.prototype.getGlobalAMDRequireFunc = function () {\n            return this._requireFunc;\n        };\n        ModuleManager._findRelevantLocationInStack = function (needle, stack) {\n            var normalize = function (str) { return str.replace(/\\\\/g, '/'); };\n            var normalizedPath = normalize(needle);\n            var stackPieces = stack.split(/\\n/);\n            for (var i = 0; i < stackPieces.length; i++) {\n                var m = stackPieces[i].match(/(.*):(\\d+):(\\d+)\\)?$/);\n                if (m) {\n                    var stackPath = m[1];\n                    var stackLine = m[2];\n                    var stackColumn = m[3];\n                    var trimPathOffset = Math.max(stackPath.lastIndexOf(' ') + 1, stackPath.lastIndexOf('(') + 1);\n                    stackPath = stackPath.substr(trimPathOffset);\n                    stackPath = normalize(stackPath);\n                    if (stackPath === normalizedPath) {\n                        var r = {\n                            line: parseInt(stackLine, 10),\n                            col: parseInt(stackColumn, 10)\n                        };\n                        if (r.line === 1) {\n                            r.col -= '(function (require, define, __filename, __dirname) { '.length;\n                        }\n                        return r;\n                    }\n                }\n            }\n            throw new Error('Could not correlate define call site for needle ' + needle);\n        };\n        ModuleManager.prototype.getBuildInfo = function () {\n            if (!this._config.isBuild()) {\n                return null;\n            }\n            var result = [], resultLen = 0;\n            for (var i = 0, len = this._modules2.length; i < len; i++) {\n                var m = this._modules2[i];\n                if (!m) {\n                    continue;\n                }\n                var location_1 = this._buildInfoPath[m.id] || null;\n                var defineStack = this._buildInfoDefineStack[m.id] || null;\n                var dependencies = this._buildInfoDependencies[m.id];\n                result[resultLen++] = {\n                    id: m.strId,\n                    path: location_1,\n                    defineLocation: (location_1 && defineStack ? ModuleManager._findRelevantLocationInStack(location_1, defineStack) : null),\n                    dependencies: dependencies,\n                    shim: null,\n                    exports: m.exports\n                };\n            }\n            return result;\n        };\n        ModuleManager.prototype.getRecorder = function () {\n            if (!this._recorder) {\n                if (this._config.shouldRecordStats()) {\n                    this._recorder = new AMDLoader.LoaderEventRecorder(this._loaderAvailableTimestamp);\n                }\n                else {\n                    this._recorder = AMDLoader.NullLoaderEventRecorder.INSTANCE;\n                }\n            }\n            return this._recorder;\n        };\n        ModuleManager.prototype.getLoaderEvents = function () {\n            return this.getRecorder().getEvents();\n        };\n        /**\n         * Defines an anonymous module (without an id). Its name will be resolved as we receive a callback from the scriptLoader.\n         * @param dependecies @see defineModule\n         * @param callback @see defineModule\n         */\n        ModuleManager.prototype.enqueueDefineAnonymousModule = function (dependencies, callback) {\n            if (this._currentAnnonymousDefineCall !== null) {\n                throw new Error('Can only have one anonymous define call per script file');\n            }\n            var stack = null;\n            if (this._config.isBuild()) {\n                stack = new Error('StackLocation').stack;\n            }\n            this._currentAnnonymousDefineCall = {\n                stack: stack,\n                dependencies: dependencies,\n                callback: callback\n            };\n        };\n        /**\n         * Creates a module and stores it in _modules. The manager will immediately begin resolving its dependencies.\n         * @param strModuleId An unique and absolute id of the module. This must not collide with another module's id\n         * @param dependencies An array with the dependencies of the module. Special keys are: \"require\", \"exports\" and \"module\"\n         * @param callback if callback is a function, it will be called with the resolved dependencies. if callback is an object, it will be considered as the exports of the module.\n         */\n        ModuleManager.prototype.defineModule = function (strModuleId, dependencies, callback, errorback, stack, moduleIdResolver) {\n            var _this = this;\n            if (moduleIdResolver === void 0) {\n                moduleIdResolver = new ModuleIdResolver(strModuleId);\n            }\n            var moduleId = this._moduleIdProvider.getModuleId(strModuleId);\n            if (this._modules2[moduleId]) {\n                if (!this._config.isDuplicateMessageIgnoredFor(strModuleId)) {\n                    console.warn('Duplicate definition of module \\'' + strModuleId + '\\'');\n                }\n                // Super important! Completely ignore duplicate module definition\n                return;\n            }\n            var m = new Module(moduleId, strModuleId, this._normalizeDependencies(dependencies, moduleIdResolver), callback, errorback, moduleIdResolver);\n            this._modules2[moduleId] = m;\n            if (this._config.isBuild()) {\n                this._buildInfoDefineStack[moduleId] = stack;\n                this._buildInfoDependencies[moduleId] = m.dependencies.map(function (dep) { return _this._moduleIdProvider.getStrModuleId(dep.id); });\n            }\n            // Resolving of dependencies is immediate (not in a timeout). If there's a need to support a packer that concatenates in an\n            // unordered manner, in order to finish processing the file, execute the following method in a timeout\n            this._resolve(m);\n        };\n        ModuleManager.prototype._normalizeDependency = function (dependency, moduleIdResolver) {\n            if (dependency === 'exports') {\n                return RegularDependency.EXPORTS;\n            }\n            if (dependency === 'module') {\n                return RegularDependency.MODULE;\n            }\n            if (dependency === 'require') {\n                return RegularDependency.REQUIRE;\n            }\n            // Normalize dependency and then request it from the manager\n            var bangIndex = dependency.indexOf('!');\n            if (bangIndex >= 0) {\n                var strPluginId = moduleIdResolver.resolveModule(dependency.substr(0, bangIndex));\n                var pluginParam = moduleIdResolver.resolveModule(dependency.substr(bangIndex + 1));\n                var dependencyId = this._moduleIdProvider.getModuleId(strPluginId + '!' + pluginParam);\n                var pluginId = this._moduleIdProvider.getModuleId(strPluginId);\n                return new PluginDependency(dependencyId, pluginId, pluginParam);\n            }\n            return new RegularDependency(this._moduleIdProvider.getModuleId(moduleIdResolver.resolveModule(dependency)));\n        };\n        ModuleManager.prototype._normalizeDependencies = function (dependencies, moduleIdResolver) {\n            var result = [], resultLen = 0;\n            for (var i = 0, len = dependencies.length; i < len; i++) {\n                result[resultLen++] = this._normalizeDependency(dependencies[i], moduleIdResolver);\n            }\n            return result;\n        };\n        ModuleManager.prototype._relativeRequire = function (moduleIdResolver, dependencies, callback, errorback) {\n            if (typeof dependencies === 'string') {\n                return this.synchronousRequire(dependencies, moduleIdResolver);\n            }\n            this.defineModule(AMDLoader.Utilities.generateAnonymousModule(), dependencies, callback, errorback, null, moduleIdResolver);\n        };\n        /**\n         * Require synchronously a module by its absolute id. If the module is not loaded, an exception will be thrown.\n         * @param id The unique and absolute id of the required module\n         * @return The exports of module 'id'\n         */\n        ModuleManager.prototype.synchronousRequire = function (_strModuleId, moduleIdResolver) {\n            if (moduleIdResolver === void 0) {\n                moduleIdResolver = new ModuleIdResolver(_strModuleId);\n            }\n            var dependency = this._normalizeDependency(_strModuleId, moduleIdResolver);\n            var m = this._modules2[dependency.id];\n            if (!m) {\n                throw new Error('Check dependency list! Synchronous require cannot resolve module \\'' + _strModuleId + '\\'. This is the first mention of this module!');\n            }\n            if (!m.isComplete()) {\n                throw new Error('Check dependency list! Synchronous require cannot resolve module \\'' + _strModuleId + '\\'. This module has not been resolved completely yet.');\n            }\n            return m.exports;\n        };\n        ModuleManager.prototype.configure = function (params, shouldOverwrite) {\n            var oldShouldRecordStats = this._config.shouldRecordStats();\n            if (shouldOverwrite) {\n                this._config = new AMDLoader.Configuration(this._env, params);\n            }\n            else {\n                this._config = this._config.cloneAndMerge(params);\n            }\n            if (this._config.shouldRecordStats() && !oldShouldRecordStats) {\n                this._recorder = null;\n            }\n        };\n        ModuleManager.prototype.getConfig = function () {\n            return this._config;\n        };\n        /**\n         * Callback from the scriptLoader when a module has been loaded.\n         * This means its code is available and has been executed.\n         */\n        ModuleManager.prototype._onLoad = function (moduleId) {\n            if (this._currentAnnonymousDefineCall !== null) {\n                var defineCall = this._currentAnnonymousDefineCall;\n                this._currentAnnonymousDefineCall = null;\n                // Hit an anonymous define call\n                this.defineModule(this._moduleIdProvider.getStrModuleId(moduleId), defineCall.dependencies, defineCall.callback, null, defineCall.stack);\n            }\n        };\n        ModuleManager.prototype._createLoadError = function (moduleId, err) {\n            var _this = this;\n            var strModuleId = this._moduleIdProvider.getStrModuleId(moduleId);\n            var neededBy = (this._inverseDependencies2[moduleId] || []).map(function (intModuleId) { return _this._moduleIdProvider.getStrModuleId(intModuleId); });\n            return {\n                errorCode: 'load',\n                moduleId: strModuleId,\n                neededBy: neededBy,\n                detail: err\n            };\n        };\n        /**\n         * Callback from the scriptLoader when a module hasn't been loaded.\n         * This means that the script was not found (e.g. 404) or there was an error in the script.\n         */\n        ModuleManager.prototype._onLoadError = function (moduleId, err) {\n            var error = this._createLoadError(moduleId, err);\n            // Find any 'local' error handlers, walk the entire chain of inverse dependencies if necessary.\n            var seenModuleId = [];\n            for (var i = 0, len = this._moduleIdProvider.getMaxModuleId(); i < len; i++) {\n                seenModuleId[i] = false;\n            }\n            var someoneNotified = false;\n            var queue = [];\n            queue.push(moduleId);\n            seenModuleId[moduleId] = true;\n            while (queue.length > 0) {\n                var queueElement = queue.shift();\n                var m = this._modules2[queueElement];\n                if (m) {\n                    someoneNotified = m.onDependencyError(error) || someoneNotified;\n                }\n                var inverseDeps = this._inverseDependencies2[queueElement];\n                if (inverseDeps) {\n                    for (var i = 0, len = inverseDeps.length; i < len; i++) {\n                        var inverseDep = inverseDeps[i];\n                        if (!seenModuleId[inverseDep]) {\n                            queue.push(inverseDep);\n                            seenModuleId[inverseDep] = true;\n                        }\n                    }\n                }\n            }\n            if (!someoneNotified) {\n                this._config.onError(error);\n            }\n        };\n        /**\n         * Walks (recursively) the dependencies of 'from' in search of 'to'.\n         * Returns true if there is such a path or false otherwise.\n         * @param from Module id to start at\n         * @param to Module id to look for\n         */\n        ModuleManager.prototype._hasDependencyPath = function (fromId, toId) {\n            var from = this._modules2[fromId];\n            if (!from) {\n                return false;\n            }\n            var inQueue = [];\n            for (var i = 0, len = this._moduleIdProvider.getMaxModuleId(); i < len; i++) {\n                inQueue[i] = false;\n            }\n            var queue = [];\n            // Insert 'from' in queue\n            queue.push(from);\n            inQueue[fromId] = true;\n            while (queue.length > 0) {\n                // Pop first inserted element of queue\n                var element = queue.shift();\n                var dependencies = element.dependencies;\n                if (dependencies) {\n                    // Walk the element's dependencies\n                    for (var i = 0, len = dependencies.length; i < len; i++) {\n                        var dependency = dependencies[i];\n                        if (dependency.id === toId) {\n                            // There is a path to 'to'\n                            return true;\n                        }\n                        var dependencyModule = this._modules2[dependency.id];\n                        if (dependencyModule && !inQueue[dependency.id]) {\n                            // Insert 'dependency' in queue\n                            inQueue[dependency.id] = true;\n                            queue.push(dependencyModule);\n                        }\n                    }\n                }\n            }\n            // There is no path to 'to'\n            return false;\n        };\n        /**\n         * Walks (recursively) the dependencies of 'from' in search of 'to'.\n         * Returns cycle as array.\n         * @param from Module id to start at\n         * @param to Module id to look for\n         */\n        ModuleManager.prototype._findCyclePath = function (fromId, toId, depth) {\n            if (fromId === toId || depth === 50) {\n                return [fromId];\n            }\n            var from = this._modules2[fromId];\n            if (!from) {\n                return null;\n            }\n            // Walk the element's dependencies\n            var dependencies = from.dependencies;\n            for (var i = 0, len = dependencies.length; i < len; i++) {\n                var path = this._findCyclePath(dependencies[i].id, toId, depth + 1);\n                if (path !== null) {\n                    path.push(fromId);\n                    return path;\n                }\n            }\n            return null;\n        };\n        /**\n         * Create the local 'require' that is passed into modules\n         */\n        ModuleManager.prototype._createRequire = function (moduleIdResolver) {\n            var _this = this;\n            var result = (function (dependencies, callback, errorback) {\n                return _this._relativeRequire(moduleIdResolver, dependencies, callback, errorback);\n            });\n            result.toUrl = function (id) {\n                return _this._config.requireToUrl(moduleIdResolver.resolveModule(id));\n            };\n            result.getStats = function () {\n                return _this.getLoaderEvents();\n            };\n            result.__$__nodeRequire = AMDLoader.global.nodeRequire;\n            return result;\n        };\n        ModuleManager.prototype._loadModule = function (moduleId) {\n            var _this = this;\n            if (this._modules2[moduleId] || this._knownModules2[moduleId]) {\n                // known module\n                return;\n            }\n            this._knownModules2[moduleId] = true;\n            var strModuleId = this._moduleIdProvider.getStrModuleId(moduleId);\n            var paths = this._config.moduleIdToPaths(strModuleId);\n            var scopedPackageRegex = /^@[^\\/]+\\/[^\\/]+$/; // matches @scope/package-name\n            if (this._env.isNode && (strModuleId.indexOf('/') === -1 || scopedPackageRegex.test(strModuleId))) {\n                paths.push('node|' + strModuleId);\n            }\n            var lastPathIndex = -1;\n            var loadNextPath = function (err) {\n                lastPathIndex++;\n                if (lastPathIndex >= paths.length) {\n                    // No more paths to try\n                    _this._onLoadError(moduleId, err);\n                }\n                else {\n                    var currentPath_1 = paths[lastPathIndex];\n                    var recorder_1 = _this.getRecorder();\n                    if (_this._config.isBuild() && currentPath_1 === 'empty:') {\n                        _this._buildInfoPath[moduleId] = currentPath_1;\n                        _this.defineModule(_this._moduleIdProvider.getStrModuleId(moduleId), [], null, null, null);\n                        _this._onLoad(moduleId);\n                        return;\n                    }\n                    recorder_1.record(10 /* BeginLoadingScript */, currentPath_1);\n                    _this._scriptLoader.load(_this, currentPath_1, function () {\n                        if (_this._config.isBuild()) {\n                            _this._buildInfoPath[moduleId] = currentPath_1;\n                        }\n                        recorder_1.record(11 /* EndLoadingScriptOK */, currentPath_1);\n                        _this._onLoad(moduleId);\n                    }, function (err) {\n                        recorder_1.record(12 /* EndLoadingScriptError */, currentPath_1);\n                        loadNextPath(err);\n                    });\n                }\n            };\n            loadNextPath(null);\n        };\n        /**\n         * Resolve a plugin dependency with the plugin loaded & complete\n         * @param module The module that has this dependency\n         * @param pluginDependency The semi-normalized dependency that appears in the module. e.g. 'vs/css!./mycssfile'. Only the plugin part (before !) is normalized\n         * @param plugin The plugin (what the plugin exports)\n         */\n        ModuleManager.prototype._loadPluginDependency = function (plugin, pluginDependency) {\n            var _this = this;\n            if (this._modules2[pluginDependency.id] || this._knownModules2[pluginDependency.id]) {\n                // known module\n                return;\n            }\n            this._knownModules2[pluginDependency.id] = true;\n            // Delegate the loading of the resource to the plugin\n            var load = (function (value) {\n                _this.defineModule(_this._moduleIdProvider.getStrModuleId(pluginDependency.id), [], value, null, null);\n            });\n            load.error = function (err) {\n                _this._config.onError(_this._createLoadError(pluginDependency.id, err));\n            };\n            plugin.load(pluginDependency.pluginParam, this._createRequire(ModuleIdResolver.ROOT), load, this._config.getOptionsLiteral());\n        };\n        /**\n         * Examine the dependencies of module 'module' and resolve them as needed.\n         */\n        ModuleManager.prototype._resolve = function (module) {\n            var _this = this;\n            var dependencies = module.dependencies;\n            for (var i = 0, len = dependencies.length; i < len; i++) {\n                var dependency = dependencies[i];\n                if (dependency === RegularDependency.EXPORTS) {\n                    module.exportsPassedIn = true;\n                    module.unresolvedDependenciesCount--;\n                    continue;\n                }\n                if (dependency === RegularDependency.MODULE) {\n                    module.unresolvedDependenciesCount--;\n                    continue;\n                }\n                if (dependency === RegularDependency.REQUIRE) {\n                    module.unresolvedDependenciesCount--;\n                    continue;\n                }\n                var dependencyModule = this._modules2[dependency.id];\n                if (dependencyModule && dependencyModule.isComplete()) {\n                    module.unresolvedDependenciesCount--;\n                    continue;\n                }\n                if (this._hasDependencyPath(dependency.id, module.id)) {\n                    console.warn('There is a dependency cycle between \\'' + this._moduleIdProvider.getStrModuleId(dependency.id) + '\\' and \\'' + this._moduleIdProvider.getStrModuleId(module.id) + '\\'. The cyclic path follows:');\n                    var cyclePath = this._findCyclePath(dependency.id, module.id, 0);\n                    cyclePath.reverse();\n                    cyclePath.push(dependency.id);\n                    console.warn(cyclePath.map(function (id) { return _this._moduleIdProvider.getStrModuleId(id); }).join(' => \\n'));\n                    // Break the cycle\n                    module.unresolvedDependenciesCount--;\n                    continue;\n                }\n                // record inverse dependency\n                this._inverseDependencies2[dependency.id] = this._inverseDependencies2[dependency.id] || [];\n                this._inverseDependencies2[dependency.id].push(module.id);\n                if (dependency instanceof PluginDependency) {\n                    var plugin = this._modules2[dependency.pluginId];\n                    if (plugin && plugin.isComplete()) {\n                        this._loadPluginDependency(plugin.exports, dependency);\n                        continue;\n                    }\n                    // Record dependency for when the plugin gets loaded\n                    var inversePluginDeps = this._inversePluginDependencies2.get(dependency.pluginId);\n                    if (!inversePluginDeps) {\n                        inversePluginDeps = [];\n                        this._inversePluginDependencies2.set(dependency.pluginId, inversePluginDeps);\n                    }\n                    inversePluginDeps.push(dependency);\n                    this._loadModule(dependency.pluginId);\n                    continue;\n                }\n                this._loadModule(dependency.id);\n            }\n            if (module.unresolvedDependenciesCount === 0) {\n                this._onModuleComplete(module);\n            }\n        };\n        ModuleManager.prototype._onModuleComplete = function (module) {\n            var _this = this;\n            var recorder = this.getRecorder();\n            if (module.isComplete()) {\n                // already done\n                return;\n            }\n            var dependencies = module.dependencies;\n            var dependenciesValues = [];\n            for (var i = 0, len = dependencies.length; i < len; i++) {\n                var dependency = dependencies[i];\n                if (dependency === RegularDependency.EXPORTS) {\n                    dependenciesValues[i] = module.exports;\n                    continue;\n                }\n                if (dependency === RegularDependency.MODULE) {\n                    dependenciesValues[i] = {\n                        id: module.strId,\n                        config: function () {\n                            return _this._config.getConfigForModule(module.strId);\n                        }\n                    };\n                    continue;\n                }\n                if (dependency === RegularDependency.REQUIRE) {\n                    dependenciesValues[i] = this._createRequire(module.moduleIdResolver);\n                    continue;\n                }\n                var dependencyModule = this._modules2[dependency.id];\n                if (dependencyModule) {\n                    dependenciesValues[i] = dependencyModule.exports;\n                    continue;\n                }\n                dependenciesValues[i] = null;\n            }\n            module.complete(recorder, this._config, dependenciesValues);\n            // Fetch and clear inverse dependencies\n            var inverseDeps = this._inverseDependencies2[module.id];\n            this._inverseDependencies2[module.id] = null;\n            if (inverseDeps) {\n                // Resolve one inverse dependency at a time, always\n                // on the lookout for a completed module.\n                for (var i = 0, len = inverseDeps.length; i < len; i++) {\n                    var inverseDependencyId = inverseDeps[i];\n                    var inverseDependency = this._modules2[inverseDependencyId];\n                    inverseDependency.unresolvedDependenciesCount--;\n                    if (inverseDependency.unresolvedDependenciesCount === 0) {\n                        this._onModuleComplete(inverseDependency);\n                    }\n                }\n            }\n            var inversePluginDeps = this._inversePluginDependencies2.get(module.id);\n            if (inversePluginDeps) {\n                // This module is used as a plugin at least once\n                // Fetch and clear these inverse plugin dependencies\n                this._inversePluginDependencies2.delete(module.id);\n                // Resolve plugin dependencies one at a time\n                for (var i = 0, len = inversePluginDeps.length; i < len; i++) {\n                    this._loadPluginDependency(module.exports, inversePluginDeps[i]);\n                }\n            }\n        };\n        return ModuleManager;\n    }());\n    AMDLoader.ModuleManager = ModuleManager;\n})(AMDLoader || (AMDLoader = {}));\nvar define;\nvar AMDLoader;\n(function (AMDLoader) {\n    var env = new AMDLoader.Environment();\n    var moduleManager = null;\n    var DefineFunc = function (id, dependencies, callback) {\n        if (typeof id !== 'string') {\n            callback = dependencies;\n            dependencies = id;\n            id = null;\n        }\n        if (typeof dependencies !== 'object' || !Array.isArray(dependencies)) {\n            callback = dependencies;\n            dependencies = null;\n        }\n        if (!dependencies) {\n            dependencies = ['require', 'exports', 'module'];\n        }\n        if (id) {\n            moduleManager.defineModule(id, dependencies, callback, null, null);\n        }\n        else {\n            moduleManager.enqueueDefineAnonymousModule(dependencies, callback);\n        }\n    };\n    DefineFunc.amd = {\n        jQuery: true\n    };\n    var _requireFunc_config = function (params, shouldOverwrite) {\n        if (shouldOverwrite === void 0) {\n            shouldOverwrite = false;\n        }\n        moduleManager.configure(params, shouldOverwrite);\n    };\n    var RequireFunc = function () {\n        if (arguments.length === 1) {\n            if ((arguments[0] instanceof Object) && !Array.isArray(arguments[0])) {\n                _requireFunc_config(arguments[0]);\n                return;\n            }\n            if (typeof arguments[0] === 'string') {\n                return moduleManager.synchronousRequire(arguments[0]);\n            }\n        }\n        if (arguments.length === 2 || arguments.length === 3) {\n            if (Array.isArray(arguments[0])) {\n                moduleManager.defineModule(AMDLoader.Utilities.generateAnonymousModule(), arguments[0], arguments[1], arguments[2], null);\n                return;\n            }\n        }\n        throw new Error('Unrecognized require call');\n    };\n    RequireFunc.config = _requireFunc_config;\n    RequireFunc.getConfig = function () {\n        return moduleManager.getConfig().getOptionsLiteral();\n    };\n    RequireFunc.reset = function () {\n        moduleManager = moduleManager.reset();\n    };\n    RequireFunc.getBuildInfo = function () {\n        return moduleManager.getBuildInfo();\n    };\n    RequireFunc.getStats = function () {\n        return moduleManager.getLoaderEvents();\n    };\n    RequireFunc.define = function () {\n        return DefineFunc.apply(null, arguments);\n    };\n    function init() {\n        if (typeof AMDLoader.global.require !== 'undefined' || typeof require !== 'undefined') {\n            var _nodeRequire_1 = (AMDLoader.global.require || require);\n            if (typeof _nodeRequire_1 === 'function' && typeof _nodeRequire_1.resolve === 'function') {\n                // re-expose node's require function\n                var nodeRequire = function (what) {\n                    moduleManager.getRecorder().record(33 /* NodeBeginNativeRequire */, what);\n                    try {\n                        return _nodeRequire_1(what);\n                    }\n                    finally {\n                        moduleManager.getRecorder().record(34 /* NodeEndNativeRequire */, what);\n                    }\n                };\n                AMDLoader.global.nodeRequire = nodeRequire;\n                RequireFunc.nodeRequire = nodeRequire;\n                RequireFunc.__$__nodeRequire = nodeRequire;\n            }\n        }\n        if (env.isNode && !env.isElectronRenderer) {\n            module.exports = RequireFunc;\n            require = RequireFunc;\n        }\n        else {\n            if (!env.isElectronRenderer) {\n                AMDLoader.global.define = DefineFunc;\n            }\n            AMDLoader.global.require = RequireFunc;\n        }\n    }\n    AMDLoader.init = init;\n    if (typeof AMDLoader.global.define !== 'function' || !AMDLoader.global.define.amd) {\n        moduleManager = new AMDLoader.ModuleManager(env, AMDLoader.createScriptLoader(env), DefineFunc, RequireFunc, AMDLoader.Utilities.getHighPerformanceTimestamp());\n        // The global variable require can configure the loader\n        if (typeof AMDLoader.global.require !== 'undefined' && typeof AMDLoader.global.require !== 'function') {\n            RequireFunc.config(AMDLoader.global.require);\n        }\n        // This define is for the local closure defined in node in the case that the loader is concatenated\n        define = function () {\n            return DefineFunc.apply(null, arguments);\n        };\n        define.amd = DefineFunc.amd;\n        if (typeof doNotInitLoader === 'undefined') {\n            init();\n        }\n    }\n})(AMDLoader || (AMDLoader = {}));\n","define(__m[21/*vs/base/common/arrays*/], __M([0/*require*/,1/*exports*/]), function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    /**\n     * Returns the last element of an array.\n     * @param array The array.\n     * @param n Which element from the end (default is zero).\n     */\n    function tail(array, n) {\n        if (n === void 0) { n = 0; }\n        return array[array.length - (1 + n)];\n    }\n    exports.tail = tail;\n    function tail2(arr) {\n        if (arr.length === 0) {\n            throw new Error('Invalid tail call');\n        }\n        return [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n    }\n    exports.tail2 = tail2;\n    function equals(one, other, itemEquals) {\n        if (itemEquals === void 0) { itemEquals = function (a, b) { return a === b; }; }\n        if (one === other) {\n            return true;\n        }\n        if (!one || !other) {\n            return false;\n        }\n        if (one.length !== other.length) {\n            return false;\n        }\n        for (var i = 0, len = one.length; i < len; i++) {\n            if (!itemEquals(one[i], other[i])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    exports.equals = equals;\n    function binarySearch(array, key, comparator) {\n        var low = 0, high = array.length - 1;\n        while (low <= high) {\n            var mid = ((low + high) / 2) | 0;\n            var comp = comparator(array[mid], key);\n            if (comp < 0) {\n                low = mid + 1;\n            }\n            else if (comp > 0) {\n                high = mid - 1;\n            }\n            else {\n                return mid;\n            }\n        }\n        return -(low + 1);\n    }\n    exports.binarySearch = binarySearch;\n    /**\n     * Takes a sorted array and a function p. The array is sorted in such a way that all elements where p(x) is false\n     * are located before all elements where p(x) is true.\n     * @returns the least x for which p(x) is true or array.length if no element fullfills the given function.\n     */\n    function findFirstInSorted(array, p) {\n        var low = 0, high = array.length;\n        if (high === 0) {\n            return 0; // no children\n        }\n        while (low < high) {\n            var mid = Math.floor((low + high) / 2);\n            if (p(array[mid])) {\n                high = mid;\n            }\n            else {\n                low = mid + 1;\n            }\n        }\n        return low;\n    }\n    exports.findFirstInSorted = findFirstInSorted;\n    /**\n     * Like `Array#sort` but always stable. Usually runs a little slower `than Array#sort`\n     * so only use this when actually needing stable sort.\n     */\n    function mergeSort(data, compare) {\n        _sort(data, compare, 0, data.length - 1, []);\n        return data;\n    }\n    exports.mergeSort = mergeSort;\n    function _merge(a, compare, lo, mid, hi, aux) {\n        var leftIdx = lo, rightIdx = mid + 1;\n        for (var i = lo; i <= hi; i++) {\n            aux[i] = a[i];\n        }\n        for (var i = lo; i <= hi; i++) {\n            if (leftIdx > mid) {\n                // left side consumed\n                a[i] = aux[rightIdx++];\n            }\n            else if (rightIdx > hi) {\n                // right side consumed\n                a[i] = aux[leftIdx++];\n            }\n            else if (compare(aux[rightIdx], aux[leftIdx]) < 0) {\n                // right element is less -> comes first\n                a[i] = aux[rightIdx++];\n            }\n            else {\n                // left element comes first (less or equal)\n                a[i] = aux[leftIdx++];\n            }\n        }\n    }\n    function _sort(a, compare, lo, hi, aux) {\n        if (hi <= lo) {\n            return;\n        }\n        var mid = lo + ((hi - lo) / 2) | 0;\n        _sort(a, compare, lo, mid, aux);\n        _sort(a, compare, mid + 1, hi, aux);\n        if (compare(a[mid], a[mid + 1]) <= 0) {\n            // left and right are sorted and if the last-left element is less\n            // or equals than the first-right element there is nothing else\n            // to do\n            return;\n        }\n        _merge(a, compare, lo, mid, hi, aux);\n    }\n    function groupBy(data, compare) {\n        var result = [];\n        var currentGroup = undefined;\n        for (var _i = 0, _a = mergeSort(data.slice(0), compare); _i < _a.length; _i++) {\n            var element = _a[_i];\n            if (!currentGroup || compare(currentGroup[0], element) !== 0) {\n                currentGroup = [element];\n                result.push(currentGroup);\n            }\n            else {\n                currentGroup.push(element);\n            }\n        }\n        return result;\n    }\n    exports.groupBy = groupBy;\n    /**\n     * @returns a new array with all falsy values removed. The original array IS NOT modified.\n     */\n    function coalesce(array) {\n        if (!array) {\n            return array;\n        }\n        return array.filter(function (e) { return !!e; });\n    }\n    exports.coalesce = coalesce;\n    /**\n     * @returns false if the provided object is an array and not empty.\n     */\n    function isFalsyOrEmpty(obj) {\n        return !Array.isArray(obj) || obj.length === 0;\n    }\n    exports.isFalsyOrEmpty = isFalsyOrEmpty;\n    /**\n     * @returns True if the provided object is an array and has at least one element.\n     */\n    function isNonEmptyArray(obj) {\n        return Array.isArray(obj) && obj.length > 0;\n    }\n    exports.isNonEmptyArray = isNonEmptyArray;\n    /**\n     * Removes duplicates from the given array. The optional keyFn allows to specify\n     * how elements are checked for equalness by returning a unique string for each.\n     */\n    function distinct(array, keyFn) {\n        if (!keyFn) {\n            return array.filter(function (element, position) {\n                return array.indexOf(element) === position;\n            });\n        }\n        var seen = Object.create(null);\n        return array.filter(function (elem) {\n            var key = keyFn(elem);\n            if (seen[key]) {\n                return false;\n            }\n            seen[key] = true;\n            return true;\n        });\n    }\n    exports.distinct = distinct;\n    function distinctES6(array) {\n        var seen = new Set();\n        return array.filter(function (element) {\n            if (seen.has(element)) {\n                return false;\n            }\n            seen.add(element);\n            return true;\n        });\n    }\n    exports.distinctES6 = distinctES6;\n    function firstIndex(array, fn) {\n        for (var i = 0; i < array.length; i++) {\n            var element = array[i];\n            if (fn(element)) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    exports.firstIndex = firstIndex;\n    function first(array, fn, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = undefined; }\n        var index = firstIndex(array, fn);\n        return index < 0 ? notFoundValue : array[index];\n    }\n    exports.first = first;\n    function flatten(arr) {\n        var _a;\n        return (_a = []).concat.apply(_a, arr);\n    }\n    exports.flatten = flatten;\n    function range(arg, to) {\n        var from = typeof to === 'number' ? arg : 0;\n        if (typeof to === 'number') {\n            from = arg;\n        }\n        else {\n            from = 0;\n            to = arg;\n        }\n        var result = [];\n        if (from <= to) {\n            for (var i = from; i < to; i++) {\n                result.push(i);\n            }\n        }\n        else {\n            for (var i = from; i > to; i--) {\n                result.push(i);\n            }\n        }\n        return result;\n    }\n    exports.range = range;\n    /**\n     * Insert `insertArr` inside `target` at `insertIndex`.\n     * Please don't touch unless you understand https://jsperf.com/inserting-an-array-within-an-array\n     */\n    function arrayInsert(target, insertIndex, insertArr) {\n        var before = target.slice(0, insertIndex);\n        var after = target.slice(insertIndex);\n        return before.concat(insertArr, after);\n    }\n    exports.arrayInsert = arrayInsert;\n    /**\n     * Pushes an element to the start of the array, if found.\n     */\n    function pushToStart(arr, value) {\n        var index = arr.indexOf(value);\n        if (index > -1) {\n            arr.splice(index, 1);\n            arr.unshift(value);\n        }\n    }\n    exports.pushToStart = pushToStart;\n    /**\n     * Pushes an element to the end of the array, if found.\n     */\n    function pushToEnd(arr, value) {\n        var index = arr.indexOf(value);\n        if (index > -1) {\n            arr.splice(index, 1);\n            arr.push(value);\n        }\n    }\n    exports.pushToEnd = pushToEnd;\n    function asArray(x) {\n        return Array.isArray(x) ? x : [x];\n    }\n    exports.asArray = asArray;\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine(__m[15/*vs/base/common/diff/diffChange*/], __M([0/*require*/,1/*exports*/]), function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    /**\n     * Represents information about a specific difference between two sequences.\n     */\n    var DiffChange = /** @class */ (function () {\n        /**\n         * Constructs a new DiffChange with the given sequence information\n         * and content.\n         */\n        function DiffChange(originalStart, originalLength, modifiedStart, modifiedLength) {\n            //Debug.Assert(originalLength > 0 || modifiedLength > 0, \"originalLength and modifiedLength cannot both be <= 0\");\n            this.originalStart = originalStart;\n            this.originalLength = originalLength;\n            this.modifiedStart = modifiedStart;\n            this.modifiedLength = modifiedLength;\n        }\n        /**\n         * The end point (exclusive) of the change in the original sequence.\n         */\n        DiffChange.prototype.getOriginalEnd = function () {\n            return this.originalStart + this.originalLength;\n        };\n        /**\n         * The end point (exclusive) of the change in the modified sequence.\n         */\n        DiffChange.prototype.getModifiedEnd = function () {\n            return this.modifiedStart + this.modifiedLength;\n        };\n        return DiffChange;\n    }());\n    exports.DiffChange = DiffChange;\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine(__m[8/*vs/base/common/diff/diff*/], __M([0/*require*/,1/*exports*/,15/*vs/base/common/diff/diffChange*/]), function (require, exports, diffChange_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    function createStringSequence(a) {\n        return {\n            getLength: function () { return a.length; },\n            getElementAtIndex: function (pos) { return a.charCodeAt(pos); }\n        };\n    }\n    function stringDiff(original, modified, pretty) {\n        return new LcsDiff(createStringSequence(original), createStringSequence(modified)).ComputeDiff(pretty);\n    }\n    exports.stringDiff = stringDiff;\n    //\n    // The code below has been ported from a C# implementation in VS\n    //\n    var Debug = /** @class */ (function () {\n        function Debug() {\n        }\n        Debug.Assert = function (condition, message) {\n            if (!condition) {\n                throw new Error(message);\n            }\n        };\n        return Debug;\n    }());\n    exports.Debug = Debug;\n    var MyArray = /** @class */ (function () {\n        function MyArray() {\n        }\n        /**\n         * Copies a range of elements from an Array starting at the specified source index and pastes\n         * them to another Array starting at the specified destination index. The length and the indexes\n         * are specified as 64-bit integers.\n         * sourceArray:\n         *\t\tThe Array that contains the data to copy.\n         * sourceIndex:\n         *\t\tA 64-bit integer that represents the index in the sourceArray at which copying begins.\n         * destinationArray:\n         *\t\tThe Array that receives the data.\n         * destinationIndex:\n         *\t\tA 64-bit integer that represents the index in the destinationArray at which storing begins.\n         * length:\n         *\t\tA 64-bit integer that represents the number of elements to copy.\n         */\n        MyArray.Copy = function (sourceArray, sourceIndex, destinationArray, destinationIndex, length) {\n            for (var i = 0; i < length; i++) {\n                destinationArray[destinationIndex + i] = sourceArray[sourceIndex + i];\n            }\n        };\n        return MyArray;\n    }());\n    exports.MyArray = MyArray;\n    //*****************************************************************************\n    // LcsDiff.cs\n    //\n    // An implementation of the difference algorithm described in\n    // \"An O(ND) Difference Algorithm and its variations\" by Eugene W. Myers\n    //\n    // Copyright (C) 2008 Microsoft Corporation @minifier_do_not_preserve\n    //*****************************************************************************\n    // Our total memory usage for storing history is (worst-case):\n    // 2 * [(MaxDifferencesHistory + 1) * (MaxDifferencesHistory + 1) - 1] * sizeof(int)\n    // 2 * [1448*1448 - 1] * 4 = 16773624 = 16MB\n    var MaxDifferencesHistory = 1447;\n    //let MaxDifferencesHistory = 100;\n    /**\n     * A utility class which helps to create the set of DiffChanges from\n     * a difference operation. This class accepts original DiffElements and\n     * modified DiffElements that are involved in a particular change. The\n     * MarktNextChange() method can be called to mark the separation between\n     * distinct changes. At the end, the Changes property can be called to retrieve\n     * the constructed changes.\n     */\n    var DiffChangeHelper = /** @class */ (function () {\n        /**\n         * Constructs a new DiffChangeHelper for the given DiffSequences.\n         */\n        function DiffChangeHelper() {\n            this.m_changes = [];\n            this.m_originalStart = Number.MAX_VALUE;\n            this.m_modifiedStart = Number.MAX_VALUE;\n            this.m_originalCount = 0;\n            this.m_modifiedCount = 0;\n        }\n        /**\n         * Marks the beginning of the next change in the set of differences.\n         */\n        DiffChangeHelper.prototype.MarkNextChange = function () {\n            // Only add to the list if there is something to add\n            if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n                // Add the new change to our list\n                this.m_changes.push(new diffChange_1.DiffChange(this.m_originalStart, this.m_originalCount, this.m_modifiedStart, this.m_modifiedCount));\n            }\n            // Reset for the next change\n            this.m_originalCount = 0;\n            this.m_modifiedCount = 0;\n            this.m_originalStart = Number.MAX_VALUE;\n            this.m_modifiedStart = Number.MAX_VALUE;\n        };\n        /**\n         * Adds the original element at the given position to the elements\n         * affected by the current change. The modified index gives context\n         * to the change position with respect to the original sequence.\n         * @param originalIndex The index of the original element to add.\n         * @param modifiedIndex The index of the modified element that provides corresponding position in the modified sequence.\n         */\n        DiffChangeHelper.prototype.AddOriginalElement = function (originalIndex, modifiedIndex) {\n            // The 'true' start index is the smallest of the ones we've seen\n            this.m_originalStart = Math.min(this.m_originalStart, originalIndex);\n            this.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\n            this.m_originalCount++;\n        };\n        /**\n         * Adds the modified element at the given position to the elements\n         * affected by the current change. The original index gives context\n         * to the change position with respect to the modified sequence.\n         * @param originalIndex The index of the original element that provides corresponding position in the original sequence.\n         * @param modifiedIndex The index of the modified element to add.\n         */\n        DiffChangeHelper.prototype.AddModifiedElement = function (originalIndex, modifiedIndex) {\n            // The 'true' start index is the smallest of the ones we've seen\n            this.m_originalStart = Math.min(this.m_originalStart, originalIndex);\n            this.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\n            this.m_modifiedCount++;\n        };\n        /**\n         * Retrieves all of the changes marked by the class.\n         */\n        DiffChangeHelper.prototype.getChanges = function () {\n            if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n                // Finish up on whatever is left\n                this.MarkNextChange();\n            }\n            return this.m_changes;\n        };\n        /**\n         * Retrieves all of the changes marked by the class in the reverse order\n         */\n        DiffChangeHelper.prototype.getReverseChanges = function () {\n            if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n                // Finish up on whatever is left\n                this.MarkNextChange();\n            }\n            this.m_changes.reverse();\n            return this.m_changes;\n        };\n        return DiffChangeHelper;\n    }());\n    /**\n     * An implementation of the difference algorithm described in\n     * \"An O(ND) Difference Algorithm and its variations\" by Eugene W. Myers\n     */\n    var LcsDiff = /** @class */ (function () {\n        /**\n         * Constructs the DiffFinder\n         */\n        function LcsDiff(originalSequence, newSequence, continueProcessingPredicate) {\n            if (continueProcessingPredicate === void 0) { continueProcessingPredicate = null; }\n            this.OriginalSequence = originalSequence;\n            this.ModifiedSequence = newSequence;\n            this.ContinueProcessingPredicate = continueProcessingPredicate;\n            this.m_forwardHistory = [];\n            this.m_reverseHistory = [];\n        }\n        LcsDiff.prototype.ElementsAreEqual = function (originalIndex, newIndex) {\n            return (this.OriginalSequence.getElementAtIndex(originalIndex) === this.ModifiedSequence.getElementAtIndex(newIndex));\n        };\n        LcsDiff.prototype.OriginalElementsAreEqual = function (index1, index2) {\n            return (this.OriginalSequence.getElementAtIndex(index1) === this.OriginalSequence.getElementAtIndex(index2));\n        };\n        LcsDiff.prototype.ModifiedElementsAreEqual = function (index1, index2) {\n            return (this.ModifiedSequence.getElementAtIndex(index1) === this.ModifiedSequence.getElementAtIndex(index2));\n        };\n        LcsDiff.prototype.ComputeDiff = function (pretty) {\n            return this._ComputeDiff(0, this.OriginalSequence.getLength() - 1, 0, this.ModifiedSequence.getLength() - 1, pretty);\n        };\n        /**\n         * Computes the differences between the original and modified input\n         * sequences on the bounded range.\n         * @returns An array of the differences between the two input sequences.\n         */\n        LcsDiff.prototype._ComputeDiff = function (originalStart, originalEnd, modifiedStart, modifiedEnd, pretty) {\n            var quitEarlyArr = [false];\n            var changes = this.ComputeDiffRecursive(originalStart, originalEnd, modifiedStart, modifiedEnd, quitEarlyArr);\n            if (pretty) {\n                // We have to clean up the computed diff to be more intuitive\n                // but it turns out this cannot be done correctly until the entire set\n                // of diffs have been computed\n                return this.PrettifyChanges(changes);\n            }\n            return changes;\n        };\n        /**\n         * Private helper method which computes the differences on the bounded range\n         * recursively.\n         * @returns An array of the differences between the two input sequences.\n         */\n        LcsDiff.prototype.ComputeDiffRecursive = function (originalStart, originalEnd, modifiedStart, modifiedEnd, quitEarlyArr) {\n            quitEarlyArr[0] = false;\n            // Find the start of the differences\n            while (originalStart <= originalEnd && modifiedStart <= modifiedEnd && this.ElementsAreEqual(originalStart, modifiedStart)) {\n                originalStart++;\n                modifiedStart++;\n            }\n            // Find the end of the differences\n            while (originalEnd >= originalStart && modifiedEnd >= modifiedStart && this.ElementsAreEqual(originalEnd, modifiedEnd)) {\n                originalEnd--;\n                modifiedEnd--;\n            }\n            // In the special case where we either have all insertions or all deletions or the sequences are identical\n            if (originalStart > originalEnd || modifiedStart > modifiedEnd) {\n                var changes = void 0;\n                if (modifiedStart <= modifiedEnd) {\n                    Debug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\n                    // All insertions\n                    changes = [\n                        new diffChange_1.DiffChange(originalStart, 0, modifiedStart, modifiedEnd - modifiedStart + 1)\n                    ];\n                }\n                else if (originalStart <= originalEnd) {\n                    Debug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\n                    // All deletions\n                    changes = [\n                        new diffChange_1.DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, 0)\n                    ];\n                }\n                else {\n                    Debug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\n                    Debug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\n                    // Identical sequences - No differences\n                    changes = [];\n                }\n                return changes;\n            }\n            // This problem can be solved using the Divide-And-Conquer technique.\n            var midOriginalArr = [0], midModifiedArr = [0];\n            var result = this.ComputeRecursionPoint(originalStart, originalEnd, modifiedStart, modifiedEnd, midOriginalArr, midModifiedArr, quitEarlyArr);\n            var midOriginal = midOriginalArr[0];\n            var midModified = midModifiedArr[0];\n            if (result !== null) {\n                // Result is not-null when there was enough memory to compute the changes while\n                // searching for the recursion point\n                return result;\n            }\n            else if (!quitEarlyArr[0]) {\n                // We can break the problem down recursively by finding the changes in the\n                // First Half:   (originalStart, modifiedStart) to (midOriginal, midModified)\n                // Second Half:  (midOriginal + 1, minModified + 1) to (originalEnd, modifiedEnd)\n                // NOTE: ComputeDiff() is inclusive, therefore the second range starts on the next point\n                var leftChanges = this.ComputeDiffRecursive(originalStart, midOriginal, modifiedStart, midModified, quitEarlyArr);\n                var rightChanges = [];\n                if (!quitEarlyArr[0]) {\n                    rightChanges = this.ComputeDiffRecursive(midOriginal + 1, originalEnd, midModified + 1, modifiedEnd, quitEarlyArr);\n                }\n                else {\n                    // We did't have time to finish the first half, so we don't have time to compute this half.\n                    // Consider the entire rest of the sequence different.\n                    rightChanges = [\n                        new diffChange_1.DiffChange(midOriginal + 1, originalEnd - (midOriginal + 1) + 1, midModified + 1, modifiedEnd - (midModified + 1) + 1)\n                    ];\n                }\n                return this.ConcatenateChanges(leftChanges, rightChanges);\n            }\n            // If we hit here, we quit early, and so can't return anything meaningful\n            return [\n                new diffChange_1.DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, modifiedEnd - modifiedStart + 1)\n            ];\n        };\n        LcsDiff.prototype.WALKTRACE = function (diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr) {\n            var forwardChanges = null, reverseChanges = null;\n            // First, walk backward through the forward diagonals history\n            var changeHelper = new DiffChangeHelper();\n            var diagonalMin = diagonalForwardStart;\n            var diagonalMax = diagonalForwardEnd;\n            var diagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalForwardOffset;\n            var lastOriginalIndex = Number.MIN_VALUE;\n            var historyIndex = this.m_forwardHistory.length - 1;\n            var diagonal;\n            do {\n                // Get the diagonal index from the relative diagonal number\n                diagonal = diagonalRelative + diagonalForwardBase;\n                // Figure out where we came from\n                if (diagonal === diagonalMin || (diagonal < diagonalMax && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\n                    // Vertical line (the element is an insert)\n                    originalIndex = forwardPoints[diagonal + 1];\n                    modifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\n                    if (originalIndex < lastOriginalIndex) {\n                        changeHelper.MarkNextChange();\n                    }\n                    lastOriginalIndex = originalIndex;\n                    changeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex);\n                    diagonalRelative = (diagonal + 1) - diagonalForwardBase; //Setup for the next iteration\n                }\n                else {\n                    // Horizontal line (the element is a deletion)\n                    originalIndex = forwardPoints[diagonal - 1] + 1;\n                    modifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\n                    if (originalIndex < lastOriginalIndex) {\n                        changeHelper.MarkNextChange();\n                    }\n                    lastOriginalIndex = originalIndex - 1;\n                    changeHelper.AddOriginalElement(originalIndex, modifiedIndex + 1);\n                    diagonalRelative = (diagonal - 1) - diagonalForwardBase; //Setup for the next iteration\n                }\n                if (historyIndex >= 0) {\n                    forwardPoints = this.m_forwardHistory[historyIndex];\n                    diagonalForwardBase = forwardPoints[0]; //We stored this in the first spot\n                    diagonalMin = 1;\n                    diagonalMax = forwardPoints.length - 1;\n                }\n            } while (--historyIndex >= -1);\n            // Ironically, we get the forward changes as the reverse of the\n            // order we added them since we technically added them backwards\n            forwardChanges = changeHelper.getReverseChanges();\n            if (quitEarlyArr[0]) {\n                // TODO: Calculate a partial from the reverse diagonals.\n                //       For now, just assume everything after the midOriginal/midModified point is a diff\n                var originalStartPoint = midOriginalArr[0] + 1;\n                var modifiedStartPoint = midModifiedArr[0] + 1;\n                if (forwardChanges !== null && forwardChanges.length > 0) {\n                    var lastForwardChange = forwardChanges[forwardChanges.length - 1];\n                    originalStartPoint = Math.max(originalStartPoint, lastForwardChange.getOriginalEnd());\n                    modifiedStartPoint = Math.max(modifiedStartPoint, lastForwardChange.getModifiedEnd());\n                }\n                reverseChanges = [\n                    new diffChange_1.DiffChange(originalStartPoint, originalEnd - originalStartPoint + 1, modifiedStartPoint, modifiedEnd - modifiedStartPoint + 1)\n                ];\n            }\n            else {\n                // Now walk backward through the reverse diagonals history\n                changeHelper = new DiffChangeHelper();\n                diagonalMin = diagonalReverseStart;\n                diagonalMax = diagonalReverseEnd;\n                diagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalReverseOffset;\n                lastOriginalIndex = Number.MAX_VALUE;\n                historyIndex = (deltaIsEven) ? this.m_reverseHistory.length - 1 : this.m_reverseHistory.length - 2;\n                do {\n                    // Get the diagonal index from the relative diagonal number\n                    diagonal = diagonalRelative + diagonalReverseBase;\n                    // Figure out where we came from\n                    if (diagonal === diagonalMin || (diagonal < diagonalMax && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\n                        // Horizontal line (the element is a deletion))\n                        originalIndex = reversePoints[diagonal + 1] - 1;\n                        modifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\n                        if (originalIndex > lastOriginalIndex) {\n                            changeHelper.MarkNextChange();\n                        }\n                        lastOriginalIndex = originalIndex + 1;\n                        changeHelper.AddOriginalElement(originalIndex + 1, modifiedIndex + 1);\n                        diagonalRelative = (diagonal + 1) - diagonalReverseBase; //Setup for the next iteration\n                    }\n                    else {\n                        // Vertical line (the element is an insertion)\n                        originalIndex = reversePoints[diagonal - 1];\n                        modifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\n                        if (originalIndex > lastOriginalIndex) {\n                            changeHelper.MarkNextChange();\n                        }\n                        lastOriginalIndex = originalIndex;\n                        changeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex + 1);\n                        diagonalRelative = (diagonal - 1) - diagonalReverseBase; //Setup for the next iteration\n                    }\n                    if (historyIndex >= 0) {\n                        reversePoints = this.m_reverseHistory[historyIndex];\n                        diagonalReverseBase = reversePoints[0]; //We stored this in the first spot\n                        diagonalMin = 1;\n                        diagonalMax = reversePoints.length - 1;\n                    }\n                } while (--historyIndex >= -1);\n                // There are cases where the reverse history will find diffs that\n                // are correct, but not intuitive, so we need shift them.\n                reverseChanges = changeHelper.getChanges();\n            }\n            return this.ConcatenateChanges(forwardChanges, reverseChanges);\n        };\n        /**\n         * Given the range to compute the diff on, this method finds the point:\n         * (midOriginal, midModified)\n         * that exists in the middle of the LCS of the two sequences and\n         * is the point at which the LCS problem may be broken down recursively.\n         * This method will try to keep the LCS trace in memory. If the LCS recursion\n         * point is calculated and the full trace is available in memory, then this method\n         * will return the change list.\n         * @param originalStart The start bound of the original sequence range\n         * @param originalEnd The end bound of the original sequence range\n         * @param modifiedStart The start bound of the modified sequence range\n         * @param modifiedEnd The end bound of the modified sequence range\n         * @param midOriginal The middle point of the original sequence range\n         * @param midModified The middle point of the modified sequence range\n         * @returns The diff changes, if available, otherwise null\n         */\n        LcsDiff.prototype.ComputeRecursionPoint = function (originalStart, originalEnd, modifiedStart, modifiedEnd, midOriginalArr, midModifiedArr, quitEarlyArr) {\n            var originalIndex = 0, modifiedIndex = 0;\n            var diagonalForwardStart = 0, diagonalForwardEnd = 0;\n            var diagonalReverseStart = 0, diagonalReverseEnd = 0;\n            var numDifferences;\n            // To traverse the edit graph and produce the proper LCS, our actual\n            // start position is just outside the given boundary\n            originalStart--;\n            modifiedStart--;\n            // We set these up to make the compiler happy, but they will\n            // be replaced before we return with the actual recursion point\n            midOriginalArr[0] = 0;\n            midModifiedArr[0] = 0;\n            // Clear out the history\n            this.m_forwardHistory = [];\n            this.m_reverseHistory = [];\n            // Each cell in the two arrays corresponds to a diagonal in the edit graph.\n            // The integer value in the cell represents the originalIndex of the furthest\n            // reaching point found so far that ends in that diagonal.\n            // The modifiedIndex can be computed mathematically from the originalIndex and the diagonal number.\n            var maxDifferences = (originalEnd - originalStart) + (modifiedEnd - modifiedStart);\n            var numDiagonals = maxDifferences + 1;\n            var forwardPoints = new Array(numDiagonals);\n            var reversePoints = new Array(numDiagonals);\n            // diagonalForwardBase: Index into forwardPoints of the diagonal which passes through (originalStart, modifiedStart)\n            // diagonalReverseBase: Index into reversePoints of the diagonal which passes through (originalEnd, modifiedEnd)\n            var diagonalForwardBase = (modifiedEnd - modifiedStart);\n            var diagonalReverseBase = (originalEnd - originalStart);\n            // diagonalForwardOffset: Geometric offset which allows modifiedIndex to be computed from originalIndex and the\n            //    diagonal number (relative to diagonalForwardBase)\n            // diagonalReverseOffset: Geometric offset which allows modifiedIndex to be computed from originalIndex and the\n            //    diagonal number (relative to diagonalReverseBase)\n            var diagonalForwardOffset = (originalStart - modifiedStart);\n            var diagonalReverseOffset = (originalEnd - modifiedEnd);\n            // delta: The difference between the end diagonal and the start diagonal. This is used to relate diagonal numbers\n            //   relative to the start diagonal with diagonal numbers relative to the end diagonal.\n            // The Even/Oddn-ness of this delta is important for determining when we should check for overlap\n            var delta = diagonalReverseBase - diagonalForwardBase;\n            var deltaIsEven = (delta % 2 === 0);\n            // Here we set up the start and end points as the furthest points found so far\n            // in both the forward and reverse directions, respectively\n            forwardPoints[diagonalForwardBase] = originalStart;\n            reversePoints[diagonalReverseBase] = originalEnd;\n            // Remember if we quit early, and thus need to do a best-effort result instead of a real result.\n            quitEarlyArr[0] = false;\n            // A couple of points:\n            // --With this method, we iterate on the number of differences between the two sequences.\n            //   The more differences there actually are, the longer this will take.\n            // --Also, as the number of differences increases, we have to search on diagonals further\n            //   away from the reference diagonal (which is diagonalForwardBase for forward, diagonalReverseBase for reverse).\n            // --We extend on even diagonals (relative to the reference diagonal) only when numDifferences\n            //   is even and odd diagonals only when numDifferences is odd.\n            var diagonal, tempOriginalIndex;\n            for (numDifferences = 1; numDifferences <= (maxDifferences / 2) + 1; numDifferences++) {\n                var furthestOriginalIndex = 0;\n                var furthestModifiedIndex = 0;\n                // Run the algorithm in the forward direction\n                diagonalForwardStart = this.ClipDiagonalBound(diagonalForwardBase - numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\n                diagonalForwardEnd = this.ClipDiagonalBound(diagonalForwardBase + numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\n                for (diagonal = diagonalForwardStart; diagonal <= diagonalForwardEnd; diagonal += 2) {\n                    // STEP 1: We extend the furthest reaching point in the present diagonal\n                    // by looking at the diagonals above and below and picking the one whose point\n                    // is further away from the start point (originalStart, modifiedStart)\n                    if (diagonal === diagonalForwardStart || (diagonal < diagonalForwardEnd && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\n                        originalIndex = forwardPoints[diagonal + 1];\n                    }\n                    else {\n                        originalIndex = forwardPoints[diagonal - 1] + 1;\n                    }\n                    modifiedIndex = originalIndex - (diagonal - diagonalForwardBase) - diagonalForwardOffset;\n                    // Save the current originalIndex so we can test for false overlap in step 3\n                    tempOriginalIndex = originalIndex;\n                    // STEP 2: We can continue to extend the furthest reaching point in the present diagonal\n                    // so long as the elements are equal.\n                    while (originalIndex < originalEnd && modifiedIndex < modifiedEnd && this.ElementsAreEqual(originalIndex + 1, modifiedIndex + 1)) {\n                        originalIndex++;\n                        modifiedIndex++;\n                    }\n                    forwardPoints[diagonal] = originalIndex;\n                    if (originalIndex + modifiedIndex > furthestOriginalIndex + furthestModifiedIndex) {\n                        furthestOriginalIndex = originalIndex;\n                        furthestModifiedIndex = modifiedIndex;\n                    }\n                    // STEP 3: If delta is odd (overlap first happens on forward when delta is odd)\n                    // and diagonal is in the range of reverse diagonals computed for numDifferences-1\n                    // (the previous iteration; we haven't computed reverse diagonals for numDifferences yet)\n                    // then check for overlap.\n                    if (!deltaIsEven && Math.abs(diagonal - diagonalReverseBase) <= (numDifferences - 1)) {\n                        if (originalIndex >= reversePoints[diagonal]) {\n                            midOriginalArr[0] = originalIndex;\n                            midModifiedArr[0] = modifiedIndex;\n                            if (tempOriginalIndex <= reversePoints[diagonal] && MaxDifferencesHistory > 0 && numDifferences <= (MaxDifferencesHistory + 1)) {\n                                // BINGO! We overlapped, and we have the full trace in memory!\n                                return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                            }\n                            else {\n                                // Either false overlap, or we didn't have enough memory for the full trace\n                                // Just return the recursion point\n                                return null;\n                            }\n                        }\n                    }\n                }\n                // Check to see if we should be quitting early, before moving on to the next iteration.\n                var matchLengthOfLongest = ((furthestOriginalIndex - originalStart) + (furthestModifiedIndex - modifiedStart) - numDifferences) / 2;\n                if (this.ContinueProcessingPredicate !== null && !this.ContinueProcessingPredicate(furthestOriginalIndex, this.OriginalSequence, matchLengthOfLongest)) {\n                    // We can't finish, so skip ahead to generating a result from what we have.\n                    quitEarlyArr[0] = true;\n                    // Use the furthest distance we got in the forward direction.\n                    midOriginalArr[0] = furthestOriginalIndex;\n                    midModifiedArr[0] = furthestModifiedIndex;\n                    if (matchLengthOfLongest > 0 && MaxDifferencesHistory > 0 && numDifferences <= (MaxDifferencesHistory + 1)) {\n                        // Enough of the history is in memory to walk it backwards\n                        return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                    }\n                    else {\n                        // We didn't actually remember enough of the history.\n                        //Since we are quiting the diff early, we need to shift back the originalStart and modified start\n                        //back into the boundary limits since we decremented their value above beyond the boundary limit.\n                        originalStart++;\n                        modifiedStart++;\n                        return [\n                            new diffChange_1.DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, modifiedEnd - modifiedStart + 1)\n                        ];\n                    }\n                }\n                // Run the algorithm in the reverse direction\n                diagonalReverseStart = this.ClipDiagonalBound(diagonalReverseBase - numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\n                diagonalReverseEnd = this.ClipDiagonalBound(diagonalReverseBase + numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\n                for (diagonal = diagonalReverseStart; diagonal <= diagonalReverseEnd; diagonal += 2) {\n                    // STEP 1: We extend the furthest reaching point in the present diagonal\n                    // by looking at the diagonals above and below and picking the one whose point\n                    // is further away from the start point (originalEnd, modifiedEnd)\n                    if (diagonal === diagonalReverseStart || (diagonal < diagonalReverseEnd && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\n                        originalIndex = reversePoints[diagonal + 1] - 1;\n                    }\n                    else {\n                        originalIndex = reversePoints[diagonal - 1];\n                    }\n                    modifiedIndex = originalIndex - (diagonal - diagonalReverseBase) - diagonalReverseOffset;\n                    // Save the current originalIndex so we can test for false overlap\n                    tempOriginalIndex = originalIndex;\n                    // STEP 2: We can continue to extend the furthest reaching point in the present diagonal\n                    // as long as the elements are equal.\n                    while (originalIndex > originalStart && modifiedIndex > modifiedStart && this.ElementsAreEqual(originalIndex, modifiedIndex)) {\n                        originalIndex--;\n                        modifiedIndex--;\n                    }\n                    reversePoints[diagonal] = originalIndex;\n                    // STEP 4: If delta is even (overlap first happens on reverse when delta is even)\n                    // and diagonal is in the range of forward diagonals computed for numDifferences\n                    // then check for overlap.\n                    if (deltaIsEven && Math.abs(diagonal - diagonalForwardBase) <= numDifferences) {\n                        if (originalIndex <= forwardPoints[diagonal]) {\n                            midOriginalArr[0] = originalIndex;\n                            midModifiedArr[0] = modifiedIndex;\n                            if (tempOriginalIndex >= forwardPoints[diagonal] && MaxDifferencesHistory > 0 && numDifferences <= (MaxDifferencesHistory + 1)) {\n                                // BINGO! We overlapped, and we have the full trace in memory!\n                                return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                            }\n                            else {\n                                // Either false overlap, or we didn't have enough memory for the full trace\n                                // Just return the recursion point\n                                return null;\n                            }\n                        }\n                    }\n                }\n                // Save current vectors to history before the next iteration\n                if (numDifferences <= MaxDifferencesHistory) {\n                    // We are allocating space for one extra int, which we fill with\n                    // the index of the diagonal base index\n                    var temp = new Array(diagonalForwardEnd - diagonalForwardStart + 2);\n                    temp[0] = diagonalForwardBase - diagonalForwardStart + 1;\n                    MyArray.Copy(forwardPoints, diagonalForwardStart, temp, 1, diagonalForwardEnd - diagonalForwardStart + 1);\n                    this.m_forwardHistory.push(temp);\n                    temp = new Array(diagonalReverseEnd - diagonalReverseStart + 2);\n                    temp[0] = diagonalReverseBase - diagonalReverseStart + 1;\n                    MyArray.Copy(reversePoints, diagonalReverseStart, temp, 1, diagonalReverseEnd - diagonalReverseStart + 1);\n                    this.m_reverseHistory.push(temp);\n                }\n            }\n            // If we got here, then we have the full trace in history. We just have to convert it to a change list\n            // NOTE: This part is a bit messy\n            return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n        };\n        /**\n         * Shifts the given changes to provide a more intuitive diff.\n         * While the first element in a diff matches the first element after the diff,\n         * we shift the diff down.\n         *\n         * @param changes The list of changes to shift\n         * @returns The shifted changes\n         */\n        LcsDiff.prototype.PrettifyChanges = function (changes) {\n            // Shift all the changes down first\n            for (var i = 0; i < changes.length; i++) {\n                var change = changes[i];\n                var originalStop = (i < changes.length - 1) ? changes[i + 1].originalStart : this.OriginalSequence.getLength();\n                var modifiedStop = (i < changes.length - 1) ? changes[i + 1].modifiedStart : this.ModifiedSequence.getLength();\n                var checkOriginal = change.originalLength > 0;\n                var checkModified = change.modifiedLength > 0;\n                while (change.originalStart + change.originalLength < originalStop &&\n                    change.modifiedStart + change.modifiedLength < modifiedStop &&\n                    (!checkOriginal || this.OriginalElementsAreEqual(change.originalStart, change.originalStart + change.originalLength)) &&\n                    (!checkModified || this.ModifiedElementsAreEqual(change.modifiedStart, change.modifiedStart + change.modifiedLength))) {\n                    change.originalStart++;\n                    change.modifiedStart++;\n                }\n                var mergedChangeArr = [null];\n                if (i < changes.length - 1 && this.ChangesOverlap(changes[i], changes[i + 1], mergedChangeArr)) {\n                    changes[i] = mergedChangeArr[0];\n                    changes.splice(i + 1, 1);\n                    i--;\n                    continue;\n                }\n            }\n            // Shift changes back up until we hit empty or whitespace-only lines\n            for (var i = changes.length - 1; i >= 0; i--) {\n                var change = changes[i];\n                var originalStop = 0;\n                var modifiedStop = 0;\n                if (i > 0) {\n                    var prevChange = changes[i - 1];\n                    if (prevChange.originalLength > 0) {\n                        originalStop = prevChange.originalStart + prevChange.originalLength;\n                    }\n                    if (prevChange.modifiedLength > 0) {\n                        modifiedStop = prevChange.modifiedStart + prevChange.modifiedLength;\n                    }\n                }\n                var checkOriginal = change.originalLength > 0;\n                var checkModified = change.modifiedLength > 0;\n                var bestDelta = 0;\n                var bestScore = this._boundaryScore(change.originalStart, change.originalLength, change.modifiedStart, change.modifiedLength);\n                for (var delta = 1;; delta++) {\n                    var originalStart = change.originalStart - delta;\n                    var modifiedStart = change.modifiedStart - delta;\n                    if (originalStart < originalStop || modifiedStart < modifiedStop) {\n                        break;\n                    }\n                    if (checkOriginal && !this.OriginalElementsAreEqual(originalStart, originalStart + change.originalLength)) {\n                        break;\n                    }\n                    if (checkModified && !this.ModifiedElementsAreEqual(modifiedStart, modifiedStart + change.modifiedLength)) {\n                        break;\n                    }\n                    var score = this._boundaryScore(originalStart, change.originalLength, modifiedStart, change.modifiedLength);\n                    if (score > bestScore) {\n                        bestScore = score;\n                        bestDelta = delta;\n                    }\n                }\n                change.originalStart -= bestDelta;\n                change.modifiedStart -= bestDelta;\n            }\n            return changes;\n        };\n        LcsDiff.prototype._OriginalIsBoundary = function (index) {\n            if (index <= 0 || index >= this.OriginalSequence.getLength() - 1) {\n                return true;\n            }\n            var element = this.OriginalSequence.getElementAtIndex(index);\n            return (typeof element === 'string' && /^\\s*$/.test(element));\n        };\n        LcsDiff.prototype._OriginalRegionIsBoundary = function (originalStart, originalLength) {\n            if (this._OriginalIsBoundary(originalStart) || this._OriginalIsBoundary(originalStart - 1)) {\n                return true;\n            }\n            if (originalLength > 0) {\n                var originalEnd = originalStart + originalLength;\n                if (this._OriginalIsBoundary(originalEnd - 1) || this._OriginalIsBoundary(originalEnd)) {\n                    return true;\n                }\n            }\n            return false;\n        };\n        LcsDiff.prototype._ModifiedIsBoundary = function (index) {\n            if (index <= 0 || index >= this.ModifiedSequence.getLength() - 1) {\n                return true;\n            }\n            var element = this.ModifiedSequence.getElementAtIndex(index);\n            return (typeof element === 'string' && /^\\s*$/.test(element));\n        };\n        LcsDiff.prototype._ModifiedRegionIsBoundary = function (modifiedStart, modifiedLength) {\n            if (this._ModifiedIsBoundary(modifiedStart) || this._ModifiedIsBoundary(modifiedStart - 1)) {\n                return true;\n            }\n            if (modifiedLength > 0) {\n                var modifiedEnd = modifiedStart + modifiedLength;\n                if (this._ModifiedIsBoundary(modifiedEnd - 1) || this._ModifiedIsBoundary(modifiedEnd)) {\n                    return true;\n                }\n            }\n            return false;\n        };\n        LcsDiff.prototype._boundaryScore = function (originalStart, originalLength, modifiedStart, modifiedLength) {\n            var originalScore = (this._OriginalRegionIsBoundary(originalStart, originalLength) ? 1 : 0);\n            var modifiedScore = (this._ModifiedRegionIsBoundary(modifiedStart, modifiedLength) ? 1 : 0);\n            return (originalScore + modifiedScore);\n        };\n        /**\n         * Concatenates the two input DiffChange lists and returns the resulting\n         * list.\n         * @param The left changes\n         * @param The right changes\n         * @returns The concatenated list\n         */\n        LcsDiff.prototype.ConcatenateChanges = function (left, right) {\n            var mergedChangeArr = [];\n            if (left.length === 0 || right.length === 0) {\n                return (right.length > 0) ? right : left;\n            }\n            else if (this.ChangesOverlap(left[left.length - 1], right[0], mergedChangeArr)) {\n                // Since we break the problem down recursively, it is possible that we\n                // might recurse in the middle of a change thereby splitting it into\n                // two changes. Here in the combining stage, we detect and fuse those\n                // changes back together\n                var result = new Array(left.length + right.length - 1);\n                MyArray.Copy(left, 0, result, 0, left.length - 1);\n                result[left.length - 1] = mergedChangeArr[0];\n                MyArray.Copy(right, 1, result, left.length, right.length - 1);\n                return result;\n            }\n            else {\n                var result = new Array(left.length + right.length);\n                MyArray.Copy(left, 0, result, 0, left.length);\n                MyArray.Copy(right, 0, result, left.length, right.length);\n                return result;\n            }\n        };\n        /**\n         * Returns true if the two changes overlap and can be merged into a single\n         * change\n         * @param left The left change\n         * @param right The right change\n         * @param mergedChange The merged change if the two overlap, null otherwise\n         * @returns True if the two changes overlap\n         */\n        LcsDiff.prototype.ChangesOverlap = function (left, right, mergedChangeArr) {\n            Debug.Assert(left.originalStart <= right.originalStart, 'Left change is not less than or equal to right change');\n            Debug.Assert(left.modifiedStart <= right.modifiedStart, 'Left change is not less than or equal to right change');\n            if (left.originalStart + left.originalLength >= right.originalStart || left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\n                var originalStart = left.originalStart;\n                var originalLength = left.originalLength;\n                var modifiedStart = left.modifiedStart;\n                var modifiedLength = left.modifiedLength;\n                if (left.originalStart + left.originalLength >= right.originalStart) {\n                    originalLength = right.originalStart + right.originalLength - left.originalStart;\n                }\n                if (left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\n                    modifiedLength = right.modifiedStart + right.modifiedLength - left.modifiedStart;\n                }\n                mergedChangeArr[0] = new diffChange_1.DiffChange(originalStart, originalLength, modifiedStart, modifiedLength);\n                return true;\n            }\n            else {\n                mergedChangeArr[0] = null;\n                return false;\n            }\n        };\n        /**\n         * Helper method used to clip a diagonal index to the range of valid\n         * diagonals. This also decides whether or not the diagonal index,\n         * if it exceeds the boundary, should be clipped to the boundary or clipped\n         * one inside the boundary depending on the Even/Odd status of the boundary\n         * and numDifferences.\n         * @param diagonal The index of the diagonal to clip.\n         * @param numDifferences The current number of differences being iterated upon.\n         * @param diagonalBaseIndex The base reference diagonal.\n         * @param numDiagonals The total number of diagonals.\n         * @returns The clipped diagonal index.\n         */\n        LcsDiff.prototype.ClipDiagonalBound = function (diagonal, numDifferences, diagonalBaseIndex, numDiagonals) {\n            if (diagonal >= 0 && diagonal < numDiagonals) {\n                // Nothing to clip, its in range\n                return diagonal;\n            }\n            // diagonalsBelow: The number of diagonals below the reference diagonal\n            // diagonalsAbove: The number of diagonals above the reference diagonal\n            var diagonalsBelow = diagonalBaseIndex;\n            var diagonalsAbove = numDiagonals - diagonalBaseIndex - 1;\n            var diffEven = (numDifferences % 2 === 0);\n            if (diagonal < 0) {\n                var lowerBoundEven = (diagonalsBelow % 2 === 0);\n                return (diffEven === lowerBoundEven) ? 0 : 1;\n            }\n            else {\n                var upperBoundEven = (diagonalsAbove % 2 === 0);\n                return (diffEven === upperBoundEven) ? numDiagonals - 1 : numDiagonals - 2;\n            }\n        };\n        return LcsDiff;\n    }());\n    exports.LcsDiff = LcsDiff;\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine(__m[5/*vs/base/common/errors*/], __M([0/*require*/,1/*exports*/]), function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    // Avoid circular dependency on EventEmitter by implementing a subset of the interface.\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            this.listeners = [];\n            this.unexpectedErrorHandler = function (e) {\n                setTimeout(function () {\n                    if (e.stack) {\n                        throw new Error(e.message + '\\n\\n' + e.stack);\n                    }\n                    throw e;\n                }, 0);\n            };\n        }\n        ErrorHandler.prototype.emit = function (e) {\n            this.listeners.forEach(function (listener) {\n                listener(e);\n            });\n        };\n        ErrorHandler.prototype.onUnexpectedError = function (e) {\n            this.unexpectedErrorHandler(e);\n            this.emit(e);\n        };\n        // For external errors, we don't want the listeners to be called\n        ErrorHandler.prototype.onUnexpectedExternalError = function (e) {\n            this.unexpectedErrorHandler(e);\n        };\n        return ErrorHandler;\n    }());\n    exports.ErrorHandler = ErrorHandler;\n    exports.errorHandler = new ErrorHandler();\n    function onUnexpectedError(e) {\n        // ignore errors from cancelled promises\n        if (!isPromiseCanceledError(e)) {\n            exports.errorHandler.onUnexpectedError(e);\n        }\n        return undefined;\n    }\n    exports.onUnexpectedError = onUnexpectedError;\n    function onUnexpectedExternalError(e) {\n        // ignore errors from cancelled promises\n        if (!isPromiseCanceledError(e)) {\n            exports.errorHandler.onUnexpectedExternalError(e);\n        }\n        return undefined;\n    }\n    exports.onUnexpectedExternalError = onUnexpectedExternalError;\n    function transformErrorForSerialization(error) {\n        if (error instanceof Error) {\n            var name_1 = error.name, message = error.message;\n            var stack = error.stacktrace || error.stack;\n            return {\n                $isError: true,\n                name: name_1,\n                message: message,\n                stack: stack\n            };\n        }\n        // return as is\n        return error;\n    }\n    exports.transformErrorForSerialization = transformErrorForSerialization;\n    var canceledName = 'Canceled';\n    /**\n     * Checks if the given error is a promise in canceled state\n     */\n    function isPromiseCanceledError(error) {\n        return error instanceof Error && error.name === canceledName && error.message === canceledName;\n    }\n    exports.isPromiseCanceledError = isPromiseCanceledError;\n    /**\n     * Returns an error that signals cancellation.\n     */\n    function canceled() {\n        var error = new Error(canceledName);\n        error.name = error.message;\n        return error;\n    }\n    exports.canceled = canceled;\n    function illegalArgument(name) {\n        if (name) {\n            return new Error(\"Illegal argument: \" + name);\n        }\n        else {\n            return new Error('Illegal argument');\n        }\n    }\n    exports.illegalArgument = illegalArgument;\n    function illegalState(name) {\n        if (name) {\n            return new Error(\"Illegal state: \" + name);\n        }\n        else {\n            return new Error('Illegal state');\n        }\n    }\n    exports.illegalState = illegalState;\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine(__m[17/*vs/base/common/functional*/], __M([0/*require*/,1/*exports*/]), function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    function once(fn) {\n        var _this = this;\n        var didCall = false;\n        var result;\n        return function () {\n            if (didCall) {\n                return result;\n            }\n            didCall = true;\n            result = fn.apply(_this, arguments);\n            return result;\n        };\n    }\n    exports.once = once;\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\ndefine(__m[11/*vs/base/common/iterator*/], __M([0/*require*/,1/*exports*/]), function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.FIN = { done: true, value: undefined };\n    var Iterator;\n    (function (Iterator) {\n        var _empty = {\n            next: function () {\n                return exports.FIN;\n            }\n        };\n        function empty() {\n            return _empty;\n        }\n        Iterator.empty = empty;\n        function fromArray(array, index, length) {\n            if (index === void 0) { index = 0; }\n            if (length === void 0) { length = array.length; }\n            return {\n                next: function () {\n                    if (index >= length) {\n                        return exports.FIN;\n                    }\n                    return { done: false, value: array[index++] };\n                }\n            };\n        }\n        Iterator.fromArray = fromArray;\n        function from(elements) {\n            if (!elements) {\n                return Iterator.empty();\n            }\n            else if (Array.isArray(elements)) {\n                return Iterator.fromArray(elements);\n            }\n            else {\n                return elements;\n            }\n        }\n        Iterator.from = from;\n        function map(iterator, fn) {\n            return {\n                next: function () {\n                    var element = iterator.next();\n                    if (element.done) {\n                        return exports.FIN;\n                    }\n                    else {\n                        return { done: false, value: fn(element.value) };\n                    }\n                }\n            };\n        }\n        Iterator.map = map;\n        function filter(iterator, fn) {\n            return {\n                next: function () {\n                    while (true) {\n                        var element = iterator.next();\n                        if (element.done) {\n                            return exports.FIN;\n                        }\n                        if (fn(element.value)) {\n                            return { done: false, value: element.value };\n                        }\n                    }\n                }\n            };\n        }\n        Iterator.filter = filter;\n        function forEach(iterator, fn) {\n            for (var next = iterator.next(); !next.done; next = iterator.next()) {\n                fn(next.value);\n            }\n        }\n        Iterator.forEach = forEach;\n        function collect(iterator) {\n            var result = [];\n            forEach(iterator, function (value) { return result.push(value); });\n            return result;\n        }\n        Iterator.collect = collect;\n    })(Iterator = exports.Iterator || (exports.Iterator = {}));\n    function getSequenceIterator(arg) {\n        if (Array.isArray(arg)) {\n            return Iterator.fromArray(arg);\n        }\n        else {\n            return arg;\n        }\n    }\n    exports.getSequenceIterator = getSequenceIterator;\n    var ArrayIterator = /** @class */ (function () {\n        function ArrayIterator(items, start, end, index) {\n            if (start === void 0) { start = 0; }\n            if (end === void 0) { end = items.length; }\n            if (index === void 0) { index = start - 1; }\n            this.items = items;\n            this.start = start;\n            this.end = end;\n            this.index = index;\n        }\n        ArrayIterator.prototype.next = function () {\n            this.index = Math.min(this.index + 1, this.end);\n            return this.current();\n        };\n        ArrayIterator.prototype.current = function () {\n            if (this.index === this.start - 1 || this.index === this.end) {\n                return null;\n            }\n            return this.items[this.index];\n        };\n        return ArrayIterator;\n    }());\n    exports.ArrayIterator = ArrayIterator;\n    var ArrayNavigator = /** @class */ (function (_super) {\n        __extends(ArrayNavigator, _super);\n        function ArrayNavigator(items, start, end, index) {\n            if (start === void 0) { start = 0; }\n            if (end === void 0) { end = items.length; }\n            if (index === void 0) { index = start - 1; }\n            return _super.call(this, items, start, end, index) || this;\n        }\n        ArrayNavigator.prototype.current = function () {\n            return _super.prototype.current.call(this);\n        };\n        ArrayNavigator.prototype.previous = function () {\n            this.index = Math.max(this.index - 1, this.start - 1);\n            return this.current();\n        };\n        ArrayNavigator.prototype.first = function () {\n            this.index = this.start;\n            return this.current();\n        };\n        ArrayNavigator.prototype.last = function () {\n            this.index = this.end - 1;\n            return this.current();\n        };\n        ArrayNavigator.prototype.parent = function () {\n            return null;\n        };\n        return ArrayNavigator;\n    }(ArrayIterator));\n    exports.ArrayNavigator = ArrayNavigator;\n    var MappedIterator = /** @class */ (function () {\n        function MappedIterator(iterator, fn) {\n            this.iterator = iterator;\n            this.fn = fn;\n            // noop\n        }\n        MappedIterator.prototype.next = function () { return this.fn(this.iterator.next()); };\n        return MappedIterator;\n    }());\n    exports.MappedIterator = MappedIterator;\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine(__m[14/*vs/base/common/keyCodes*/], __M([0/*require*/,1/*exports*/,5/*vs/base/common/errors*/]), function (require, exports, errors_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    var KeyCodeStrMap = /** @class */ (function () {\n        function KeyCodeStrMap() {\n            this._keyCodeToStr = [];\n            this._strToKeyCode = Object.create(null);\n        }\n        KeyCodeStrMap.prototype.define = function (keyCode, str) {\n            this._keyCodeToStr[keyCode] = str;\n            this._strToKeyCode[str.toLowerCase()] = keyCode;\n        };\n        KeyCodeStrMap.prototype.keyCodeToStr = function (keyCode) {\n            return this._keyCodeToStr[keyCode];\n        };\n        KeyCodeStrMap.prototype.strToKeyCode = function (str) {\n            return this._strToKeyCode[str.toLowerCase()] || 0 /* Unknown */;\n        };\n        return KeyCodeStrMap;\n    }());\n    var uiMap = new KeyCodeStrMap();\n    var userSettingsUSMap = new KeyCodeStrMap();\n    var userSettingsGeneralMap = new KeyCodeStrMap();\n    (function () {\n        function define(keyCode, uiLabel, usUserSettingsLabel, generalUserSettingsLabel) {\n            if (usUserSettingsLabel === void 0) { usUserSettingsLabel = uiLabel; }\n            if (generalUserSettingsLabel === void 0) { generalUserSettingsLabel = usUserSettingsLabel; }\n            uiMap.define(keyCode, uiLabel);\n            userSettingsUSMap.define(keyCode, usUserSettingsLabel);\n            userSettingsGeneralMap.define(keyCode, generalUserSettingsLabel);\n        }\n        define(0 /* Unknown */, 'unknown');\n        define(1 /* Backspace */, 'Backspace');\n        define(2 /* Tab */, 'Tab');\n        define(3 /* Enter */, 'Enter');\n        define(4 /* Shift */, 'Shift');\n        define(5 /* Ctrl */, 'Ctrl');\n        define(6 /* Alt */, 'Alt');\n        define(7 /* PauseBreak */, 'PauseBreak');\n        define(8 /* CapsLock */, 'CapsLock');\n        define(9 /* Escape */, 'Escape');\n        define(10 /* Space */, 'Space');\n        define(11 /* PageUp */, 'PageUp');\n        define(12 /* PageDown */, 'PageDown');\n        define(13 /* End */, 'End');\n        define(14 /* Home */, 'Home');\n        define(15 /* LeftArrow */, 'LeftArrow', 'Left');\n        define(16 /* UpArrow */, 'UpArrow', 'Up');\n        define(17 /* RightArrow */, 'RightArrow', 'Right');\n        define(18 /* DownArrow */, 'DownArrow', 'Down');\n        define(19 /* Insert */, 'Insert');\n        define(20 /* Delete */, 'Delete');\n        define(21 /* KEY_0 */, '0');\n        define(22 /* KEY_1 */, '1');\n        define(23 /* KEY_2 */, '2');\n        define(24 /* KEY_3 */, '3');\n        define(25 /* KEY_4 */, '4');\n        define(26 /* KEY_5 */, '5');\n        define(27 /* KEY_6 */, '6');\n        define(28 /* KEY_7 */, '7');\n        define(29 /* KEY_8 */, '8');\n        define(30 /* KEY_9 */, '9');\n        define(31 /* KEY_A */, 'A');\n        define(32 /* KEY_B */, 'B');\n        define(33 /* KEY_C */, 'C');\n        define(34 /* KEY_D */, 'D');\n        define(35 /* KEY_E */, 'E');\n        define(36 /* KEY_F */, 'F');\n        define(37 /* KEY_G */, 'G');\n        define(38 /* KEY_H */, 'H');\n        define(39 /* KEY_I */, 'I');\n        define(40 /* KEY_J */, 'J');\n        define(41 /* KEY_K */, 'K');\n        define(42 /* KEY_L */, 'L');\n        define(43 /* KEY_M */, 'M');\n        define(44 /* KEY_N */, 'N');\n        define(45 /* KEY_O */, 'O');\n        define(46 /* KEY_P */, 'P');\n        define(47 /* KEY_Q */, 'Q');\n        define(48 /* KEY_R */, 'R');\n        define(49 /* KEY_S */, 'S');\n        define(50 /* KEY_T */, 'T');\n        define(51 /* KEY_U */, 'U');\n        define(52 /* KEY_V */, 'V');\n        define(53 /* KEY_W */, 'W');\n        define(54 /* KEY_X */, 'X');\n        define(55 /* KEY_Y */, 'Y');\n        define(56 /* KEY_Z */, 'Z');\n        define(57 /* Meta */, 'Meta');\n        define(58 /* ContextMenu */, 'ContextMenu');\n        define(59 /* F1 */, 'F1');\n        define(60 /* F2 */, 'F2');\n        define(61 /* F3 */, 'F3');\n        define(62 /* F4 */, 'F4');\n        define(63 /* F5 */, 'F5');\n        define(64 /* F6 */, 'F6');\n        define(65 /* F7 */, 'F7');\n        define(66 /* F8 */, 'F8');\n        define(67 /* F9 */, 'F9');\n        define(68 /* F10 */, 'F10');\n        define(69 /* F11 */, 'F11');\n        define(70 /* F12 */, 'F12');\n        define(71 /* F13 */, 'F13');\n        define(72 /* F14 */, 'F14');\n        define(73 /* F15 */, 'F15');\n        define(74 /* F16 */, 'F16');\n        define(75 /* F17 */, 'F17');\n        define(76 /* F18 */, 'F18');\n        define(77 /* F19 */, 'F19');\n        define(78 /* NumLock */, 'NumLock');\n        define(79 /* ScrollLock */, 'ScrollLock');\n        define(80 /* US_SEMICOLON */, ';', ';', 'OEM_1');\n        define(81 /* US_EQUAL */, '=', '=', 'OEM_PLUS');\n        define(82 /* US_COMMA */, ',', ',', 'OEM_COMMA');\n        define(83 /* US_MINUS */, '-', '-', 'OEM_MINUS');\n        define(84 /* US_DOT */, '.', '.', 'OEM_PERIOD');\n        define(85 /* US_SLASH */, '/', '/', 'OEM_2');\n        define(86 /* US_BACKTICK */, '`', '`', 'OEM_3');\n        define(110 /* ABNT_C1 */, 'ABNT_C1');\n        define(111 /* ABNT_C2 */, 'ABNT_C2');\n        define(87 /* US_OPEN_SQUARE_BRACKET */, '[', '[', 'OEM_4');\n        define(88 /* US_BACKSLASH */, '\\\\', '\\\\', 'OEM_5');\n        define(89 /* US_CLOSE_SQUARE_BRACKET */, ']', ']', 'OEM_6');\n        define(90 /* US_QUOTE */, '\\'', '\\'', 'OEM_7');\n        define(91 /* OEM_8 */, 'OEM_8');\n        define(92 /* OEM_102 */, 'OEM_102');\n        define(93 /* NUMPAD_0 */, 'NumPad0');\n        define(94 /* NUMPAD_1 */, 'NumPad1');\n        define(95 /* NUMPAD_2 */, 'NumPad2');\n        define(96 /* NUMPAD_3 */, 'NumPad3');\n        define(97 /* NUMPAD_4 */, 'NumPad4');\n        define(98 /* NUMPAD_5 */, 'NumPad5');\n        define(99 /* NUMPAD_6 */, 'NumPad6');\n        define(100 /* NUMPAD_7 */, 'NumPad7');\n        define(101 /* NUMPAD_8 */, 'NumPad8');\n        define(102 /* NUMPAD_9 */, 'NumPad9');\n        define(103 /* NUMPAD_MULTIPLY */, 'NumPad_Multiply');\n        define(104 /* NUMPAD_ADD */, 'NumPad_Add');\n        define(105 /* NUMPAD_SEPARATOR */, 'NumPad_Separator');\n        define(106 /* NUMPAD_SUBTRACT */, 'NumPad_Subtract');\n        define(107 /* NUMPAD_DECIMAL */, 'NumPad_Decimal');\n        define(108 /* NUMPAD_DIVIDE */, 'NumPad_Divide');\n    })();\n    var KeyCodeUtils;\n    (function (KeyCodeUtils) {\n        function toString(keyCode) {\n            return uiMap.keyCodeToStr(keyCode);\n        }\n        KeyCodeUtils.toString = toString;\n        function fromString(key) {\n            return uiMap.strToKeyCode(key);\n        }\n        KeyCodeUtils.fromString = fromString;\n        function toUserSettingsUS(keyCode) {\n            return userSettingsUSMap.keyCodeToStr(keyCode);\n        }\n        KeyCodeUtils.toUserSettingsUS = toUserSettingsUS;\n        function toUserSettingsGeneral(keyCode) {\n            return userSettingsGeneralMap.keyCodeToStr(keyCode);\n        }\n        KeyCodeUtils.toUserSettingsGeneral = toUserSettingsGeneral;\n        function fromUserSettings(key) {\n            return userSettingsUSMap.strToKeyCode(key) || userSettingsGeneralMap.strToKeyCode(key);\n        }\n        KeyCodeUtils.fromUserSettings = fromUserSettings;\n    })(KeyCodeUtils = exports.KeyCodeUtils || (exports.KeyCodeUtils = {}));\n    function KeyChord(firstPart, secondPart) {\n        var chordPart = ((secondPart & 0x0000FFFF) << 16) >>> 0;\n        return (firstPart | chordPart) >>> 0;\n    }\n    exports.KeyChord = KeyChord;\n    function createKeybinding(keybinding, OS) {\n        if (keybinding === 0) {\n            return null;\n        }\n        var firstPart = (keybinding & 0x0000FFFF) >>> 0;\n        var chordPart = (keybinding & 0xFFFF0000) >>> 16;\n        if (chordPart !== 0) {\n            return new ChordKeybinding([\n                createSimpleKeybinding(firstPart, OS),\n                createSimpleKeybinding(chordPart, OS)\n            ]);\n        }\n        return new ChordKeybinding([createSimpleKeybinding(firstPart, OS)]);\n    }\n    exports.createKeybinding = createKeybinding;\n    function createSimpleKeybinding(keybinding, OS) {\n        var ctrlCmd = (keybinding & 2048 /* CtrlCmd */ ? true : false);\n        var winCtrl = (keybinding & 256 /* WinCtrl */ ? true : false);\n        var ctrlKey = (OS === 2 /* Macintosh */ ? winCtrl : ctrlCmd);\n        var shiftKey = (keybinding & 1024 /* Shift */ ? true : false);\n        var altKey = (keybinding & 512 /* Alt */ ? true : false);\n        var metaKey = (OS === 2 /* Macintosh */ ? ctrlCmd : winCtrl);\n        var keyCode = (keybinding & 255 /* KeyCode */);\n        return new SimpleKeybinding(ctrlKey, shiftKey, altKey, metaKey, keyCode);\n    }\n    exports.createSimpleKeybinding = createSimpleKeybinding;\n    var SimpleKeybinding = /** @class */ (function () {\n        function SimpleKeybinding(ctrlKey, shiftKey, altKey, metaKey, keyCode) {\n            this.ctrlKey = ctrlKey;\n            this.shiftKey = shiftKey;\n            this.altKey = altKey;\n            this.metaKey = metaKey;\n            this.keyCode = keyCode;\n        }\n        SimpleKeybinding.prototype.equals = function (other) {\n            return (this.ctrlKey === other.ctrlKey\n                && this.shiftKey === other.shiftKey\n                && this.altKey === other.altKey\n                && this.metaKey === other.metaKey\n                && this.keyCode === other.keyCode);\n        };\n        SimpleKeybinding.prototype.isModifierKey = function () {\n            return (this.keyCode === 0 /* Unknown */\n                || this.keyCode === 5 /* Ctrl */\n                || this.keyCode === 57 /* Meta */\n                || this.keyCode === 6 /* Alt */\n                || this.keyCode === 4 /* Shift */);\n        };\n        SimpleKeybinding.prototype.toChord = function () {\n            return new ChordKeybinding([this]);\n        };\n        /**\n         * Does this keybinding refer to the key code of a modifier and it also has the modifier flag?\n         */\n        SimpleKeybinding.prototype.isDuplicateModifierCase = function () {\n            return ((this.ctrlKey && this.keyCode === 5 /* Ctrl */)\n                || (this.shiftKey && this.keyCode === 4 /* Shift */)\n                || (this.altKey && this.keyCode === 6 /* Alt */)\n                || (this.metaKey && this.keyCode === 57 /* Meta */));\n        };\n        return SimpleKeybinding;\n    }());\n    exports.SimpleKeybinding = SimpleKeybinding;\n    var ChordKeybinding = /** @class */ (function () {\n        function ChordKeybinding(parts) {\n            if (parts.length === 0) {\n                throw errors_1.illegalArgument(\"parts\");\n            }\n            this.parts = parts;\n        }\n        ChordKeybinding.prototype.equals = function (other) {\n            if (other === null) {\n                return false;\n            }\n            if (this.parts.length !== other.parts.length) {\n                return false;\n            }\n            for (var i = 0; i < this.parts.length; i++) {\n                if (!this.parts[i].equals(other.parts[i])) {\n                    return false;\n                }\n            }\n            return true;\n        };\n        return ChordKeybinding;\n    }());\n    exports.ChordKeybinding = ChordKeybinding;\n    var ResolvedKeybindingPart = /** @class */ (function () {\n        function ResolvedKeybindingPart(ctrlKey, shiftKey, altKey, metaKey, kbLabel, kbAriaLabel) {\n            this.ctrlKey = ctrlKey;\n            this.shiftKey = shiftKey;\n            this.altKey = altKey;\n            this.metaKey = metaKey;\n            this.keyLabel = kbLabel;\n            this.keyAriaLabel = kbAriaLabel;\n        }\n        return ResolvedKeybindingPart;\n    }());\n    exports.ResolvedKeybindingPart = ResolvedKeybindingPart;\n    /**\n     * A resolved keybinding. Can be a simple keybinding or a chord keybinding.\n     */\n    var ResolvedKeybinding = /** @class */ (function () {\n        function ResolvedKeybinding() {\n        }\n        return ResolvedKeybinding;\n    }());\n    exports.ResolvedKeybinding = ResolvedKeybinding;\n});\n","define(__m[10/*vs/base/common/lifecycle*/], __M([0/*require*/,1/*exports*/]), function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    function isDisposable(thing) {\n        return typeof thing.dispose === 'function'\n            && thing.dispose.length === 0;\n    }\n    exports.isDisposable = isDisposable;\n    function dispose(first) {\n        var rest = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            rest[_i - 1] = arguments[_i];\n        }\n        if (Array.isArray(first)) {\n            first.forEach(function (d) { return d && d.dispose(); });\n            return [];\n        }\n        else if (rest.length === 0) {\n            if (first) {\n                first.dispose();\n                return first;\n            }\n            return undefined;\n        }\n        else {\n            dispose(first);\n            dispose(rest);\n            return [];\n        }\n    }\n    exports.dispose = dispose;\n    function combinedDisposable(disposables) {\n        return { dispose: function () { return dispose(disposables); } };\n    }\n    exports.combinedDisposable = combinedDisposable;\n    function toDisposable(fn) {\n        return { dispose: function () { fn(); } };\n    }\n    exports.toDisposable = toDisposable;\n    var Disposable = /** @class */ (function () {\n        function Disposable() {\n            this._toDispose = [];\n            this._lifecycle_disposable_isDisposed = false;\n        }\n        Disposable.prototype.dispose = function () {\n            this._lifecycle_disposable_isDisposed = true;\n            this._toDispose = dispose(this._toDispose);\n        };\n        Disposable.prototype._register = function (t) {\n            if (this._lifecycle_disposable_isDisposed) {\n                console.warn('Registering disposable on object that has already been disposed.');\n                t.dispose();\n            }\n            else {\n                this._toDispose.push(t);\n            }\n            return t;\n        };\n        Disposable.None = Object.freeze({ dispose: function () { } });\n        return Disposable;\n    }());\n    exports.Disposable = Disposable;\n    var ImmortalReference = /** @class */ (function () {\n        function ImmortalReference(object) {\n            this.object = object;\n        }\n        ImmortalReference.prototype.dispose = function () { };\n        return ImmortalReference;\n    }());\n    exports.ImmortalReference = ImmortalReference;\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine(__m[16/*vs/base/common/linkedList*/], __M([0/*require*/,1/*exports*/,11/*vs/base/common/iterator*/]), function (require, exports, iterator_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    var Node = /** @class */ (function () {\n        function Node(element) {\n            this.element = element;\n            this.next = Node.Undefined;\n            this.prev = Node.Undefined;\n        }\n        Node.Undefined = new Node(undefined);\n        return Node;\n    }());\n    var LinkedList = /** @class */ (function () {\n        function LinkedList() {\n            this._first = Node.Undefined;\n            this._last = Node.Undefined;\n            this._size = 0;\n        }\n        Object.defineProperty(LinkedList.prototype, \"size\", {\n            get: function () {\n                return this._size;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        LinkedList.prototype.isEmpty = function () {\n            return this._first === Node.Undefined;\n        };\n        LinkedList.prototype.clear = function () {\n            this._first = Node.Undefined;\n            this._last = Node.Undefined;\n            this._size = 0;\n        };\n        LinkedList.prototype.unshift = function (element) {\n            return this._insert(element, false);\n        };\n        LinkedList.prototype.push = function (element) {\n            return this._insert(element, true);\n        };\n        LinkedList.prototype._insert = function (element, atTheEnd) {\n            var _this = this;\n            var newNode = new Node(element);\n            if (this._first === Node.Undefined) {\n                this._first = newNode;\n                this._last = newNode;\n            }\n            else if (atTheEnd) {\n                // push\n                var oldLast = this._last;\n                this._last = newNode;\n                newNode.prev = oldLast;\n                oldLast.next = newNode;\n            }\n            else {\n                // unshift\n                var oldFirst = this._first;\n                this._first = newNode;\n                newNode.next = oldFirst;\n                oldFirst.prev = newNode;\n            }\n            this._size += 1;\n            var didRemove = false;\n            return function () {\n                if (!didRemove) {\n                    didRemove = true;\n                    _this._remove(newNode);\n                }\n            };\n        };\n        LinkedList.prototype.shift = function () {\n            if (this._first === Node.Undefined) {\n                return undefined;\n            }\n            else {\n                var res = this._first.element;\n                this._remove(this._first);\n                return res;\n            }\n        };\n        LinkedList.prototype._remove = function (node) {\n            if (node.prev !== Node.Undefined && node.next !== Node.Undefined) {\n                // middle\n                var anchor = node.prev;\n                anchor.next = node.next;\n                node.next.prev = anchor;\n            }\n            else if (node.prev === Node.Undefined && node.next === Node.Undefined) {\n                // only node\n                this._first = Node.Undefined;\n                this._last = Node.Undefined;\n            }\n            else if (node.next === Node.Undefined) {\n                // last\n                this._last = this._last.prev;\n                this._last.next = Node.Undefined;\n            }\n            else if (node.prev === Node.Undefined) {\n                // first\n                this._first = this._first.next;\n                this._first.prev = Node.Undefined;\n            }\n            // done\n            this._size -= 1;\n        };\n        LinkedList.prototype.iterator = function () {\n            var element;\n            var node = this._first;\n            return {\n                next: function () {\n                    if (node === Node.Undefined) {\n                        return iterator_1.FIN;\n                    }\n                    if (!element) {\n                        element = { done: false, value: node.element };\n                    }\n                    else {\n                        element.value = node.element;\n                    }\n                    node = node.next;\n                    return element;\n                }\n            };\n        };\n        LinkedList.prototype.toArray = function () {\n            var result = [];\n            for (var node = this._first; node !== Node.Undefined; node = node.next) {\n                result.push(node.element);\n            }\n            return result;\n        };\n        return LinkedList;\n    }());\n    exports.LinkedList = LinkedList;\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n\n\n\n\n\n\n\n\n\n\n\ndefine(__m[9/*vs/base/common/event*/], __M([0/*require*/,1/*exports*/,5/*vs/base/common/errors*/,17/*vs/base/common/functional*/,10/*vs/base/common/lifecycle*/,16/*vs/base/common/linkedList*/]), function (require, exports, errors_1, functional_1, lifecycle_1, linkedList_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    var Event;\n    (function (Event) {\n        var _disposable = { dispose: function () { } };\n        Event.None = function () { return _disposable; };\n        /**\n         * Given an event, returns another event which only fires once.\n         */\n        function once(event) {\n            return function (listener, thisArgs, disposables) {\n                if (thisArgs === void 0) { thisArgs = null; }\n                // we need this, in case the event fires during the listener call\n                var didFire = false;\n                var result;\n                result = event(function (e) {\n                    if (didFire) {\n                        return;\n                    }\n                    else if (result) {\n                        result.dispose();\n                    }\n                    else {\n                        didFire = true;\n                    }\n                    return listener.call(thisArgs, e);\n                }, null, disposables);\n                if (didFire) {\n                    result.dispose();\n                }\n                return result;\n            };\n        }\n        Event.once = once;\n        /**\n         * Given an event and a `map` function, returns another event which maps each element\n         * throught the mapping function.\n         */\n        function map(event, map) {\n            return snapshot(function (listener, thisArgs, disposables) {\n                if (thisArgs === void 0) { thisArgs = null; }\n                return event(function (i) { return listener.call(thisArgs, map(i)); }, null, disposables);\n            });\n        }\n        Event.map = map;\n        /**\n         * Given an event and an `each` function, returns another identical event and calls\n         * the `each` function per each element.\n         */\n        function forEach(event, each) {\n            return snapshot(function (listener, thisArgs, disposables) {\n                if (thisArgs === void 0) { thisArgs = null; }\n                return event(function (i) { each(i); listener.call(thisArgs, i); }, null, disposables);\n            });\n        }\n        Event.forEach = forEach;\n        function filter(event, filter) {\n            return snapshot(function (listener, thisArgs, disposables) {\n                if (thisArgs === void 0) { thisArgs = null; }\n                return event(function (e) { return filter(e) && listener.call(thisArgs, e); }, null, disposables);\n            });\n        }\n        Event.filter = filter;\n        /**\n         * Given an event, returns the same event but typed as `Event<void>`.\n         */\n        function signal(event) {\n            return event;\n        }\n        Event.signal = signal;\n        /**\n         * Given a collection of events, returns a single event which emits\n         * whenever any of the provided events emit.\n         */\n        function any() {\n            var events = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                events[_i] = arguments[_i];\n            }\n            return function (listener, thisArgs, disposables) {\n                if (thisArgs === void 0) { thisArgs = null; }\n                return lifecycle_1.combinedDisposable(events.map(function (event) { return event(function (e) { return listener.call(thisArgs, e); }, null, disposables); }));\n            };\n        }\n        Event.any = any;\n        /**\n         * Given an event and a `merge` function, returns another event which maps each element\n         * and the cummulative result throught the `merge` function. Similar to `map`, but with memory.\n         */\n        function reduce(event, merge, initial) {\n            var output = initial;\n            return map(event, function (e) {\n                output = merge(output, e);\n                return output;\n            });\n        }\n        Event.reduce = reduce;\n        /**\n         * Given a chain of event processing functions (filter, map, etc), each\n         * function will be invoked per event & per listener. Snapshotting an event\n         * chain allows each function to be invoked just once per event.\n         */\n        function snapshot(event) {\n            var listener;\n            var emitter = new Emitter({\n                onFirstListenerAdd: function () {\n                    listener = event(emitter.fire, emitter);\n                },\n                onLastListenerRemove: function () {\n                    listener.dispose();\n                }\n            });\n            return emitter.event;\n        }\n        Event.snapshot = snapshot;\n        function debounce(event, merge, delay, leading, leakWarningThreshold) {\n            if (delay === void 0) { delay = 100; }\n            if (leading === void 0) { leading = false; }\n            var subscription;\n            var output = undefined;\n            var handle = undefined;\n            var numDebouncedCalls = 0;\n            var emitter = new Emitter({\n                leakWarningThreshold: leakWarningThreshold,\n                onFirstListenerAdd: function () {\n                    subscription = event(function (cur) {\n                        numDebouncedCalls++;\n                        output = merge(output, cur);\n                        if (leading && !handle) {\n                            emitter.fire(output);\n                        }\n                        clearTimeout(handle);\n                        handle = setTimeout(function () {\n                            var _output = output;\n                            output = undefined;\n                            handle = undefined;\n                            if (!leading || numDebouncedCalls > 1) {\n                                emitter.fire(_output);\n                            }\n                            numDebouncedCalls = 0;\n                        }, delay);\n                    });\n                },\n                onLastListenerRemove: function () {\n                    subscription.dispose();\n                }\n            });\n            return emitter.event;\n        }\n        Event.debounce = debounce;\n        /**\n         * Given an event, it returns another event which fires only once and as soon as\n         * the input event emits. The event data is the number of millis it took for the\n         * event to fire.\n         */\n        function stopwatch(event) {\n            var start = new Date().getTime();\n            return map(once(event), function (_) { return new Date().getTime() - start; });\n        }\n        Event.stopwatch = stopwatch;\n        /**\n         * Given an event, it returns another event which fires only when the event\n         * element changes.\n         */\n        function latch(event) {\n            var firstCall = true;\n            var cache;\n            return filter(event, function (value) {\n                var shouldEmit = firstCall || value !== cache;\n                firstCall = false;\n                cache = value;\n                return shouldEmit;\n            });\n        }\n        Event.latch = latch;\n        /**\n         * Buffers the provided event until a first listener comes\n         * along, at which point fire all the events at once and\n         * pipe the event from then on.\n         *\n         * ```typescript\n         * const emitter = new Emitter<number>();\n         * const event = emitter.event;\n         * const bufferedEvent = buffer(event);\n         *\n         * emitter.fire(1);\n         * emitter.fire(2);\n         * emitter.fire(3);\n         * // nothing...\n         *\n         * const listener = bufferedEvent(num => console.log(num));\n         * // 1, 2, 3\n         *\n         * emitter.fire(4);\n         * // 4\n         * ```\n         */\n        function buffer(event, nextTick, _buffer) {\n            if (nextTick === void 0) { nextTick = false; }\n            if (_buffer === void 0) { _buffer = []; }\n            var buffer = _buffer.slice();\n            var listener = event(function (e) {\n                if (buffer) {\n                    buffer.push(e);\n                }\n                else {\n                    emitter.fire(e);\n                }\n            });\n            var flush = function () {\n                if (buffer) {\n                    buffer.forEach(function (e) { return emitter.fire(e); });\n                }\n                buffer = null;\n            };\n            var emitter = new Emitter({\n                onFirstListenerAdd: function () {\n                    if (!listener) {\n                        listener = event(function (e) { return emitter.fire(e); });\n                    }\n                },\n                onFirstListenerDidAdd: function () {\n                    if (buffer) {\n                        if (nextTick) {\n                            setTimeout(flush);\n                        }\n                        else {\n                            flush();\n                        }\n                    }\n                },\n                onLastListenerRemove: function () {\n                    if (listener) {\n                        listener.dispose();\n                    }\n                    listener = null;\n                }\n            });\n            return emitter.event;\n        }\n        Event.buffer = buffer;\n        var ChainableEvent = /** @class */ (function () {\n            function ChainableEvent(event) {\n                this.event = event;\n            }\n            ChainableEvent.prototype.map = function (fn) {\n                return new ChainableEvent(map(this.event, fn));\n            };\n            ChainableEvent.prototype.forEach = function (fn) {\n                return new ChainableEvent(forEach(this.event, fn));\n            };\n            ChainableEvent.prototype.filter = function (fn) {\n                return new ChainableEvent(filter(this.event, fn));\n            };\n            ChainableEvent.prototype.reduce = function (merge, initial) {\n                return new ChainableEvent(reduce(this.event, merge, initial));\n            };\n            ChainableEvent.prototype.latch = function () {\n                return new ChainableEvent(latch(this.event));\n            };\n            ChainableEvent.prototype.on = function (listener, thisArgs, disposables) {\n                return this.event(listener, thisArgs, disposables);\n            };\n            ChainableEvent.prototype.once = function (listener, thisArgs, disposables) {\n                return once(this.event)(listener, thisArgs, disposables);\n            };\n            return ChainableEvent;\n        }());\n        function chain(event) {\n            return new ChainableEvent(event);\n        }\n        Event.chain = chain;\n        function fromNodeEventEmitter(emitter, eventName, map) {\n            if (map === void 0) { map = function (id) { return id; }; }\n            var fn = function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                return result.fire(map.apply(void 0, args));\n            };\n            var onFirstListenerAdd = function () { return emitter.on(eventName, fn); };\n            var onLastListenerRemove = function () { return emitter.removeListener(eventName, fn); };\n            var result = new Emitter({ onFirstListenerAdd: onFirstListenerAdd, onLastListenerRemove: onLastListenerRemove });\n            return result.event;\n        }\n        Event.fromNodeEventEmitter = fromNodeEventEmitter;\n        function fromPromise(promise) {\n            var emitter = new Emitter();\n            var shouldEmit = false;\n            promise\n                .then(undefined, function () { return null; })\n                .then(function () {\n                if (!shouldEmit) {\n                    setTimeout(function () { return emitter.fire(undefined); }, 0);\n                }\n                else {\n                    emitter.fire(undefined);\n                }\n            });\n            shouldEmit = true;\n            return emitter.event;\n        }\n        Event.fromPromise = fromPromise;\n        function toPromise(event) {\n            return new Promise(function (c) { return once(event)(c); });\n        }\n        Event.toPromise = toPromise;\n    })(Event = exports.Event || (exports.Event = {}));\n    var _globalLeakWarningThreshold = -1;\n    var LeakageMonitor = /** @class */ (function () {\n        function LeakageMonitor(customThreshold, name) {\n            if (name === void 0) { name = Math.random().toString(18).slice(2, 5); }\n            this.customThreshold = customThreshold;\n            this.name = name;\n            this._warnCountdown = 0;\n        }\n        LeakageMonitor.prototype.dispose = function () {\n            if (this._stacks) {\n                this._stacks.clear();\n            }\n        };\n        LeakageMonitor.prototype.check = function (listenerCount) {\n            var _this = this;\n            var threshold = _globalLeakWarningThreshold;\n            if (typeof this.customThreshold === 'number') {\n                threshold = this.customThreshold;\n            }\n            if (threshold <= 0 || listenerCount < threshold) {\n                return undefined;\n            }\n            if (!this._stacks) {\n                this._stacks = new Map();\n            }\n            var stack = new Error().stack.split('\\n').slice(3).join('\\n');\n            var count = (this._stacks.get(stack) || 0);\n            this._stacks.set(stack, count + 1);\n            this._warnCountdown -= 1;\n            if (this._warnCountdown <= 0) {\n                // only warn on first exceed and then every time the limit\n                // is exceeded by 50% again\n                this._warnCountdown = threshold * 0.5;\n                // find most frequent listener and print warning\n                var topStack_1;\n                var topCount_1 = 0;\n                this._stacks.forEach(function (count, stack) {\n                    if (!topStack_1 || topCount_1 < count) {\n                        topStack_1 = stack;\n                        topCount_1 = count;\n                    }\n                });\n                console.warn(\"[\" + this.name + \"] potential listener LEAK detected, having \" + listenerCount + \" listeners already. MOST frequent listener (\" + topCount_1 + \"):\");\n                console.warn(topStack_1);\n            }\n            return function () {\n                var count = (_this._stacks.get(stack) || 0);\n                _this._stacks.set(stack, count - 1);\n            };\n        };\n        return LeakageMonitor;\n    }());\n    /**\n     * The Emitter can be used to expose an Event to the public\n     * to fire it from the insides.\n     * Sample:\n        class Document {\n    \n            private _onDidChange = new Emitter<(value:string)=>any>();\n    \n            public onDidChange = this._onDidChange.event;\n    \n            // getter-style\n            // get onDidChange(): Event<(value:string)=>any> {\n            // \treturn this._onDidChange.event;\n            // }\n    \n            private _doIt() {\n                //...\n                this._onDidChange.fire(value);\n            }\n        }\n     */\n    var Emitter = /** @class */ (function () {\n        function Emitter(options) {\n            this._disposed = false;\n            this._options = options;\n            this._leakageMon = _globalLeakWarningThreshold > 0\n                ? new LeakageMonitor(this._options && this._options.leakWarningThreshold)\n                : undefined;\n        }\n        Object.defineProperty(Emitter.prototype, \"event\", {\n            /**\n             * For the public to allow to subscribe\n             * to events from this Emitter\n             */\n            get: function () {\n                var _this = this;\n                if (!this._event) {\n                    this._event = function (listener, thisArgs, disposables) {\n                        if (!_this._listeners) {\n                            _this._listeners = new linkedList_1.LinkedList();\n                        }\n                        var firstListener = _this._listeners.isEmpty();\n                        if (firstListener && _this._options && _this._options.onFirstListenerAdd) {\n                            _this._options.onFirstListenerAdd(_this);\n                        }\n                        var remove = _this._listeners.push(!thisArgs ? listener : [listener, thisArgs]);\n                        if (firstListener && _this._options && _this._options.onFirstListenerDidAdd) {\n                            _this._options.onFirstListenerDidAdd(_this);\n                        }\n                        if (_this._options && _this._options.onListenerDidAdd) {\n                            _this._options.onListenerDidAdd(_this, listener, thisArgs);\n                        }\n                        // check and record this emitter for potential leakage\n                        var removeMonitor;\n                        if (_this._leakageMon) {\n                            removeMonitor = _this._leakageMon.check(_this._listeners.size);\n                        }\n                        var result;\n                        result = {\n                            dispose: function () {\n                                if (removeMonitor) {\n                                    removeMonitor();\n                                }\n                                result.dispose = Emitter._noop;\n                                if (!_this._disposed) {\n                                    remove();\n                                    if (_this._options && _this._options.onLastListenerRemove) {\n                                        var hasListeners = (_this._listeners && !_this._listeners.isEmpty());\n                                        if (!hasListeners) {\n                                            _this._options.onLastListenerRemove(_this);\n                                        }\n                                    }\n                                }\n                            }\n                        };\n                        if (Array.isArray(disposables)) {\n                            disposables.push(result);\n                        }\n                        return result;\n                    };\n                }\n                return this._event;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * To be kept private to fire an event to\n         * subscribers\n         */\n        Emitter.prototype.fire = function (event) {\n            if (this._listeners) {\n                // put all [listener,event]-pairs into delivery queue\n                // then emit all event. an inner/nested event might be\n                // the driver of this\n                if (!this._deliveryQueue) {\n                    this._deliveryQueue = new linkedList_1.LinkedList();\n                }\n                for (var iter = this._listeners.iterator(), e = iter.next(); !e.done; e = iter.next()) {\n                    this._deliveryQueue.push([e.value, event]);\n                }\n                while (this._deliveryQueue.size > 0) {\n                    var _a = this._deliveryQueue.shift(), listener = _a[0], event_1 = _a[1];\n                    try {\n                        if (typeof listener === 'function') {\n                            listener.call(undefined, event_1);\n                        }\n                        else {\n                            listener[0].call(listener[1], event_1);\n                        }\n                    }\n                    catch (e) {\n                        errors_1.onUnexpectedError(e);\n                    }\n                }\n            }\n        };\n        Emitter.prototype.dispose = function () {\n            if (this._listeners) {\n                this._listeners.clear();\n            }\n            if (this._deliveryQueue) {\n                this._deliveryQueue.clear();\n            }\n            if (this._leakageMon) {\n                this._leakageMon.dispose();\n            }\n            this._disposed = true;\n        };\n        Emitter._noop = function () { };\n        return Emitter;\n    }());\n    exports.Emitter = Emitter;\n    var PauseableEmitter = /** @class */ (function (_super) {\n        __extends(PauseableEmitter, _super);\n        function PauseableEmitter(options) {\n            var _this = _super.call(this, options) || this;\n            _this._isPaused = 0;\n            _this._eventQueue = new linkedList_1.LinkedList();\n            _this._mergeFn = options && options.merge;\n            return _this;\n        }\n        PauseableEmitter.prototype.pause = function () {\n            this._isPaused++;\n        };\n        PauseableEmitter.prototype.resume = function () {\n            if (this._isPaused !== 0 && --this._isPaused === 0) {\n                if (this._mergeFn) {\n                    // use the merge function to create a single composite\n                    // event. make a copy in case firing pauses this emitter\n                    var events = this._eventQueue.toArray();\n                    this._eventQueue.clear();\n                    _super.prototype.fire.call(this, this._mergeFn(events));\n                }\n                else {\n                    // no merging, fire each event individually and test\n                    // that this emitter isn't paused halfway through\n                    while (!this._isPaused && this._eventQueue.size !== 0) {\n                        _super.prototype.fire.call(this, this._eventQueue.shift());\n                    }\n                }\n            }\n        };\n        PauseableEmitter.prototype.fire = function (event) {\n            if (this._listeners) {\n                if (this._isPaused !== 0) {\n                    this._eventQueue.push(event);\n                }\n                else {\n                    _super.prototype.fire.call(this, event);\n                }\n            }\n        };\n        return PauseableEmitter;\n    }(Emitter));\n    exports.PauseableEmitter = PauseableEmitter;\n    var EventMultiplexer = /** @class */ (function () {\n        function EventMultiplexer() {\n            var _this = this;\n            this.hasListeners = false;\n            this.events = [];\n            this.emitter = new Emitter({\n                onFirstListenerAdd: function () { return _this.onFirstListenerAdd(); },\n                onLastListenerRemove: function () { return _this.onLastListenerRemove(); }\n            });\n        }\n        Object.defineProperty(EventMultiplexer.prototype, \"event\", {\n            get: function () {\n                return this.emitter.event;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        EventMultiplexer.prototype.add = function (event) {\n            var _this = this;\n            var e = { event: event, listener: null };\n            this.events.push(e);\n            if (this.hasListeners) {\n                this.hook(e);\n            }\n            var dispose = function () {\n                if (_this.hasListeners) {\n                    _this.unhook(e);\n                }\n                var idx = _this.events.indexOf(e);\n                _this.events.splice(idx, 1);\n            };\n            return lifecycle_1.toDisposable(functional_1.once(dispose));\n        };\n        EventMultiplexer.prototype.onFirstListenerAdd = function () {\n            var _this = this;\n            this.hasListeners = true;\n            this.events.forEach(function (e) { return _this.hook(e); });\n        };\n        EventMultiplexer.prototype.onLastListenerRemove = function () {\n            var _this = this;\n            this.hasListeners = false;\n            this.events.forEach(function (e) { return _this.unhook(e); });\n        };\n        EventMultiplexer.prototype.hook = function (e) {\n            var _this = this;\n            e.listener = e.event(function (r) { return _this.emitter.fire(r); });\n        };\n        EventMultiplexer.prototype.unhook = function (e) {\n            if (e.listener) {\n                e.listener.dispose();\n            }\n            e.listener = null;\n        };\n        EventMultiplexer.prototype.dispose = function () {\n            this.emitter.dispose();\n        };\n        return EventMultiplexer;\n    }());\n    exports.EventMultiplexer = EventMultiplexer;\n    /**\n     * The EventBufferer is useful in situations in which you want\n     * to delay firing your events during some code.\n     * You can wrap that code and be sure that the event will not\n     * be fired during that wrap.\n     *\n     * ```\n     * const emitter: Emitter;\n     * const delayer = new EventDelayer();\n     * const delayedEvent = delayer.wrapEvent(emitter.event);\n     *\n     * delayedEvent(console.log);\n     *\n     * delayer.bufferEvents(() => {\n     *   emitter.fire(); // event will not be fired yet\n     * });\n     *\n     * // event will only be fired at this point\n     * ```\n     */\n    var EventBufferer = /** @class */ (function () {\n        function EventBufferer() {\n            this.buffers = [];\n        }\n        EventBufferer.prototype.wrapEvent = function (event) {\n            var _this = this;\n            return function (listener, thisArgs, disposables) {\n                return event(function (i) {\n                    var buffer = _this.buffers[_this.buffers.length - 1];\n                    if (buffer) {\n                        buffer.push(function () { return listener.call(thisArgs, i); });\n                    }\n                    else {\n                        listener.call(thisArgs, i);\n                    }\n                }, undefined, disposables);\n            };\n        };\n        EventBufferer.prototype.bufferEvents = function (fn) {\n            var buffer = [];\n            this.buffers.push(buffer);\n            var r = fn();\n            this.buffers.pop();\n            buffer.forEach(function (flush) { return flush(); });\n            return r;\n        };\n        return EventBufferer;\n    }());\n    exports.EventBufferer = EventBufferer;\n    /**\n     * A Relay is an event forwarder which functions as a replugabble event pipe.\n     * Once created, you can connect an input event to it and it will simply forward\n     * events from that input event through its own `event` property. The `input`\n     * can be changed at any point in time.\n     */\n    var Relay = /** @class */ (function () {\n        function Relay() {\n            var _this = this;\n            this.listening = false;\n            this.inputEvent = Event.None;\n            this.inputEventListener = lifecycle_1.Disposable.None;\n            this.emitter = new Emitter({\n                onFirstListenerDidAdd: function () {\n                    _this.listening = true;\n                    _this.inputEventListener = _this.inputEvent(_this.emitter.fire, _this.emitter);\n                },\n                onLastListenerRemove: function () {\n                    _this.listening = false;\n                    _this.inputEventListener.dispose();\n                }\n            });\n            this.event = this.emitter.event;\n        }\n        Object.defineProperty(Relay.prototype, \"input\", {\n            set: function (event) {\n                this.inputEvent = event;\n                if (this.listening) {\n                    this.inputEventListener.dispose();\n                    this.inputEventListener = event(this.emitter.fire, this.emitter);\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Relay.prototype.dispose = function () {\n            this.inputEventListener.dispose();\n            this.emitter.dispose();\n        };\n        return Relay;\n    }());\n    exports.Relay = Relay;\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine(__m[18/*vs/base/common/cancellation*/], __M([0/*require*/,1/*exports*/,9/*vs/base/common/event*/]), function (require, exports, event_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    var shortcutEvent = Object.freeze(function (callback, context) {\n        var handle = setTimeout(callback.bind(context), 0);\n        return { dispose: function () { clearTimeout(handle); } };\n    });\n    var CancellationToken;\n    (function (CancellationToken) {\n        function isCancellationToken(thing) {\n            if (thing === CancellationToken.None || thing === CancellationToken.Cancelled) {\n                return true;\n            }\n            if (thing instanceof MutableToken) {\n                return true;\n            }\n            if (!thing || typeof thing !== 'object') {\n                return false;\n            }\n            return typeof thing.isCancellationRequested === 'boolean'\n                && typeof thing.onCancellationRequested === 'function';\n        }\n        CancellationToken.isCancellationToken = isCancellationToken;\n        CancellationToken.None = Object.freeze({\n            isCancellationRequested: false,\n            onCancellationRequested: event_1.Event.None\n        });\n        CancellationToken.Cancelled = Object.freeze({\n            isCancellationRequested: true,\n            onCancellationRequested: shortcutEvent\n        });\n    })(CancellationToken = exports.CancellationToken || (exports.CancellationToken = {}));\n    var MutableToken = /** @class */ (function () {\n        function MutableToken() {\n            this._isCancelled = false;\n            this._emitter = null;\n        }\n        MutableToken.prototype.cancel = function () {\n            if (!this._isCancelled) {\n                this._isCancelled = true;\n                if (this._emitter) {\n                    this._emitter.fire(undefined);\n                    this.dispose();\n                }\n            }\n        };\n        Object.defineProperty(MutableToken.prototype, \"isCancellationRequested\", {\n            get: function () {\n                return this._isCancelled;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(MutableToken.prototype, \"onCancellationRequested\", {\n            get: function () {\n                if (this._isCancelled) {\n                    return shortcutEvent;\n                }\n                if (!this._emitter) {\n                    this._emitter = new event_1.Emitter();\n                }\n                return this._emitter.event;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        MutableToken.prototype.dispose = function () {\n            if (this._emitter) {\n                this._emitter.dispose();\n                this._emitter = null;\n            }\n        };\n        return MutableToken;\n    }());\n    var CancellationTokenSource = /** @class */ (function () {\n        function CancellationTokenSource(parent) {\n            this._token = undefined;\n            this._parentListener = undefined;\n            this._parentListener = parent && parent.onCancellationRequested(this.cancel, this);\n        }\n        Object.defineProperty(CancellationTokenSource.prototype, \"token\", {\n            get: function () {\n                if (!this._token) {\n                    // be lazy and create the token only when\n                    // actually needed\n                    this._token = new MutableToken();\n                }\n                return this._token;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        CancellationTokenSource.prototype.cancel = function () {\n            if (!this._token) {\n                // save an object by returning the default\n                // cancelled token when cancellation happens\n                // before someone asks for the token\n                this._token = CancellationToken.Cancelled;\n            }\n            else if (this._token instanceof MutableToken) {\n                // actually cancel\n                this._token.cancel();\n            }\n        };\n        CancellationTokenSource.prototype.dispose = function () {\n            if (this._parentListener) {\n                this._parentListener.dispose();\n            }\n            if (!this._token) {\n                // ensure to initialize with an empty token if we had none\n                this._token = CancellationToken.None;\n            }\n            else if (this._token instanceof MutableToken) {\n                // actually dispose\n                this._token.dispose();\n            }\n        };\n        return CancellationTokenSource;\n    }());\n    exports.CancellationTokenSource = CancellationTokenSource;\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine(__m[3/*vs/base/common/platform*/], __M([0/*require*/,1/*exports*/]), function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    var LANGUAGE_DEFAULT = 'en';\n    var _isWindows = false;\n    var _isMacintosh = false;\n    var _isLinux = false;\n    var _isNative = false;\n    var _isWeb = false;\n    var _locale = undefined;\n    var _language = LANGUAGE_DEFAULT;\n    var _translationsConfigFile = undefined;\n    var isElectronRenderer = (typeof process !== 'undefined' && typeof process.versions !== 'undefined' && typeof process.versions.electron !== 'undefined' && process.type === 'renderer');\n    // OS detection\n    if (typeof navigator === 'object' && !isElectronRenderer) {\n        var userAgent = navigator.userAgent;\n        _isWindows = userAgent.indexOf('Windows') >= 0;\n        _isMacintosh = userAgent.indexOf('Macintosh') >= 0;\n        _isLinux = userAgent.indexOf('Linux') >= 0;\n        _isWeb = true;\n        _locale = navigator.language;\n        _language = _locale;\n    }\n    else if (typeof process === 'object') {\n        _isWindows = (process.platform === 'win32');\n        _isMacintosh = (process.platform === 'darwin');\n        _isLinux = (process.platform === 'linux');\n        _locale = LANGUAGE_DEFAULT;\n        _language = LANGUAGE_DEFAULT;\n        var rawNlsConfig = process.env['VSCODE_NLS_CONFIG'];\n        if (rawNlsConfig) {\n            try {\n                var nlsConfig = JSON.parse(rawNlsConfig);\n                var resolved = nlsConfig.availableLanguages['*'];\n                _locale = nlsConfig.locale;\n                // VSCode's default language is 'en'\n                _language = resolved ? resolved : LANGUAGE_DEFAULT;\n                _translationsConfigFile = nlsConfig._translationsConfigFile;\n            }\n            catch (e) {\n            }\n        }\n        _isNative = true;\n    }\n    var _platform = 0 /* Web */;\n    if (_isNative) {\n        if (_isMacintosh) {\n            _platform = 1 /* Mac */;\n        }\n        else if (_isWindows) {\n            _platform = 3 /* Windows */;\n        }\n        else if (_isLinux) {\n            _platform = 2 /* Linux */;\n        }\n    }\n    exports.isWindows = _isWindows;\n    exports.isMacintosh = _isMacintosh;\n    exports.isLinux = _isLinux;\n    exports.isNative = _isNative;\n    exports.isWeb = _isWeb;\n    var _globals = (typeof self === 'object' ? self : typeof global === 'object' ? global : {});\n    exports.globals = _globals;\n    var _setImmediate = null;\n    function setImmediate(callback) {\n        if (_setImmediate === null) {\n            if (exports.globals.setImmediate) {\n                _setImmediate = exports.globals.setImmediate.bind(exports.globals);\n            }\n            else if (typeof process !== 'undefined' && typeof process.nextTick === 'function') {\n                _setImmediate = process.nextTick.bind(process);\n            }\n            else {\n                _setImmediate = exports.globals.setTimeout.bind(exports.globals);\n            }\n        }\n        return _setImmediate(callback);\n    }\n    exports.setImmediate = setImmediate;\n    exports.OS = (_isMacintosh ? 2 /* Macintosh */ : (_isWindows ? 1 /* Windows */ : 3 /* Linux */));\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine(__m[13/*vs/base/common/strings*/], __M([0/*require*/,1/*exports*/]), function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    /**\n     * The empty string.\n     */\n    exports.empty = '';\n    function isFalsyOrWhitespace(str) {\n        if (!str || typeof str !== 'string') {\n            return true;\n        }\n        return str.trim().length === 0;\n    }\n    exports.isFalsyOrWhitespace = isFalsyOrWhitespace;\n    /**\n     * @returns the provided number with the given number of preceding zeros.\n     */\n    function pad(n, l, char) {\n        if (char === void 0) { char = '0'; }\n        var str = '' + n;\n        var r = [str];\n        for (var i = str.length; i < l; i++) {\n            r.push(char);\n        }\n        return r.reverse().join('');\n    }\n    exports.pad = pad;\n    var _formatRegexp = /{(\\d+)}/g;\n    /**\n     * Helper to produce a string with a variable number of arguments. Insert variable segments\n     * into the string using the {n} notation where N is the index of the argument following the string.\n     * @param value string to which formatting is applied\n     * @param args replacements for {n}-entries\n     */\n    function format(value) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        if (args.length === 0) {\n            return value;\n        }\n        return value.replace(_formatRegexp, function (match, group) {\n            var idx = parseInt(group, 10);\n            return isNaN(idx) || idx < 0 || idx >= args.length ?\n                match :\n                args[idx];\n        });\n    }\n    exports.format = format;\n    /**\n     * Converts HTML characters inside the string to use entities instead. Makes the string safe from\n     * being used e.g. in HTMLElement.innerHTML.\n     */\n    function escape(html) {\n        return html.replace(/[<>&]/g, function (match) {\n            switch (match) {\n                case '<': return '&lt;';\n                case '>': return '&gt;';\n                case '&': return '&amp;';\n                default: return match;\n            }\n        });\n    }\n    exports.escape = escape;\n    /**\n     * Escapes regular expression characters in a given string\n     */\n    function escapeRegExpCharacters(value) {\n        return value.replace(/[\\-\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)\\#]/g, '\\\\$&');\n    }\n    exports.escapeRegExpCharacters = escapeRegExpCharacters;\n    /**\n     * Removes all occurrences of needle from the beginning and end of haystack.\n     * @param haystack string to trim\n     * @param needle the thing to trim (default is a blank)\n     */\n    function trim(haystack, needle) {\n        if (needle === void 0) { needle = ' '; }\n        var trimmed = ltrim(haystack, needle);\n        return rtrim(trimmed, needle);\n    }\n    exports.trim = trim;\n    /**\n     * Removes all occurrences of needle from the beginning of haystack.\n     * @param haystack string to trim\n     * @param needle the thing to trim\n     */\n    function ltrim(haystack, needle) {\n        if (!haystack || !needle) {\n            return haystack;\n        }\n        var needleLen = needle.length;\n        if (needleLen === 0 || haystack.length === 0) {\n            return haystack;\n        }\n        var offset = 0;\n        while (haystack.indexOf(needle, offset) === offset) {\n            offset = offset + needleLen;\n        }\n        return haystack.substring(offset);\n    }\n    exports.ltrim = ltrim;\n    /**\n     * Removes all occurrences of needle from the end of haystack.\n     * @param haystack string to trim\n     * @param needle the thing to trim\n     */\n    function rtrim(haystack, needle) {\n        if (!haystack || !needle) {\n            return haystack;\n        }\n        var needleLen = needle.length, haystackLen = haystack.length;\n        if (needleLen === 0 || haystackLen === 0) {\n            return haystack;\n        }\n        var offset = haystackLen, idx = -1;\n        while (true) {\n            idx = haystack.lastIndexOf(needle, offset - 1);\n            if (idx === -1 || idx + needleLen !== offset) {\n                break;\n            }\n            if (idx === 0) {\n                return '';\n            }\n            offset = idx;\n        }\n        return haystack.substring(0, offset);\n    }\n    exports.rtrim = rtrim;\n    function convertSimple2RegExpPattern(pattern) {\n        return pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n    }\n    exports.convertSimple2RegExpPattern = convertSimple2RegExpPattern;\n    /**\n     * Determines if haystack starts with needle.\n     */\n    function startsWith(haystack, needle) {\n        if (haystack.length < needle.length) {\n            return false;\n        }\n        if (haystack === needle) {\n            return true;\n        }\n        for (var i = 0; i < needle.length; i++) {\n            if (haystack[i] !== needle[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    exports.startsWith = startsWith;\n    /**\n     * Determines if haystack ends with needle.\n     */\n    function endsWith(haystack, needle) {\n        var diff = haystack.length - needle.length;\n        if (diff > 0) {\n            return haystack.indexOf(needle, diff) === diff;\n        }\n        else if (diff === 0) {\n            return haystack === needle;\n        }\n        else {\n            return false;\n        }\n    }\n    exports.endsWith = endsWith;\n    function createRegExp(searchString, isRegex, options) {\n        if (options === void 0) { options = {}; }\n        if (!searchString) {\n            throw new Error('Cannot create regex from empty string');\n        }\n        if (!isRegex) {\n            searchString = escapeRegExpCharacters(searchString);\n        }\n        if (options.wholeWord) {\n            if (!/\\B/.test(searchString.charAt(0))) {\n                searchString = '\\\\b' + searchString;\n            }\n            if (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\n                searchString = searchString + '\\\\b';\n            }\n        }\n        var modifiers = '';\n        if (options.global) {\n            modifiers += 'g';\n        }\n        if (!options.matchCase) {\n            modifiers += 'i';\n        }\n        if (options.multiline) {\n            modifiers += 'm';\n        }\n        if (options.unicode) {\n            modifiers += 'u';\n        }\n        return new RegExp(searchString, modifiers);\n    }\n    exports.createRegExp = createRegExp;\n    function regExpLeadsToEndlessLoop(regexp) {\n        // Exit early if it's one of these special cases which are meant to match\n        // against an empty string\n        if (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\\\s*$') {\n            return false;\n        }\n        // We check against an empty string. If the regular expression doesn't advance\n        // (e.g. ends in an endless loop) it will match an empty string.\n        var match = regexp.exec('');\n        return !!(match && regexp.lastIndex === 0);\n    }\n    exports.regExpLeadsToEndlessLoop = regExpLeadsToEndlessLoop;\n    function regExpFlags(regexp) {\n        return (regexp.global ? 'g' : '')\n            + (regexp.ignoreCase ? 'i' : '')\n            + (regexp.multiline ? 'm' : '')\n            + (regexp.unicode ? 'u' : '');\n    }\n    exports.regExpFlags = regExpFlags;\n    /**\n     * Returns first index of the string that is not whitespace.\n     * If string is empty or contains only whitespaces, returns -1\n     */\n    function firstNonWhitespaceIndex(str) {\n        for (var i = 0, len = str.length; i < len; i++) {\n            var chCode = str.charCodeAt(i);\n            if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    exports.firstNonWhitespaceIndex = firstNonWhitespaceIndex;\n    /**\n     * Returns the leading whitespace of the string.\n     * If the string contains only whitespaces, returns entire string\n     */\n    function getLeadingWhitespace(str, start, end) {\n        if (start === void 0) { start = 0; }\n        if (end === void 0) { end = str.length; }\n        for (var i = start; i < end; i++) {\n            var chCode = str.charCodeAt(i);\n            if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {\n                return str.substring(start, i);\n            }\n        }\n        return str.substring(start, end);\n    }\n    exports.getLeadingWhitespace = getLeadingWhitespace;\n    /**\n     * Returns last index of the string that is not whitespace.\n     * If string is empty or contains only whitespaces, returns -1\n     */\n    function lastNonWhitespaceIndex(str, startIndex) {\n        if (startIndex === void 0) { startIndex = str.length - 1; }\n        for (var i = startIndex; i >= 0; i--) {\n            var chCode = str.charCodeAt(i);\n            if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    exports.lastNonWhitespaceIndex = lastNonWhitespaceIndex;\n    function compare(a, b) {\n        if (a < b) {\n            return -1;\n        }\n        else if (a > b) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    }\n    exports.compare = compare;\n    function isLowerAsciiLetter(code) {\n        return code >= 97 /* a */ && code <= 122 /* z */;\n    }\n    exports.isLowerAsciiLetter = isLowerAsciiLetter;\n    function isUpperAsciiLetter(code) {\n        return code >= 65 /* A */ && code <= 90 /* Z */;\n    }\n    exports.isUpperAsciiLetter = isUpperAsciiLetter;\n    function isAsciiLetter(code) {\n        return isLowerAsciiLetter(code) || isUpperAsciiLetter(code);\n    }\n    function equalsIgnoreCase(a, b) {\n        var len1 = a ? a.length : 0;\n        var len2 = b ? b.length : 0;\n        if (len1 !== len2) {\n            return false;\n        }\n        return doEqualsIgnoreCase(a, b);\n    }\n    exports.equalsIgnoreCase = equalsIgnoreCase;\n    function doEqualsIgnoreCase(a, b, stopAt) {\n        if (stopAt === void 0) { stopAt = a.length; }\n        if (typeof a !== 'string' || typeof b !== 'string') {\n            return false;\n        }\n        for (var i = 0; i < stopAt; i++) {\n            var codeA = a.charCodeAt(i);\n            var codeB = b.charCodeAt(i);\n            if (codeA === codeB) {\n                continue;\n            }\n            // a-z A-Z\n            if (isAsciiLetter(codeA) && isAsciiLetter(codeB)) {\n                var diff = Math.abs(codeA - codeB);\n                if (diff !== 0 && diff !== 32) {\n                    return false;\n                }\n            }\n            // Any other charcode\n            else {\n                if (String.fromCharCode(codeA).toLowerCase() !== String.fromCharCode(codeB).toLowerCase()) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    function startsWithIgnoreCase(str, candidate) {\n        var candidateLength = candidate.length;\n        if (candidate.length > str.length) {\n            return false;\n        }\n        return doEqualsIgnoreCase(str, candidate, candidateLength);\n    }\n    exports.startsWithIgnoreCase = startsWithIgnoreCase;\n    /**\n     * @returns the length of the common prefix of the two strings.\n     */\n    function commonPrefixLength(a, b) {\n        var i, len = Math.min(a.length, b.length);\n        for (i = 0; i < len; i++) {\n            if (a.charCodeAt(i) !== b.charCodeAt(i)) {\n                return i;\n            }\n        }\n        return len;\n    }\n    exports.commonPrefixLength = commonPrefixLength;\n    /**\n     * @returns the length of the common suffix of the two strings.\n     */\n    function commonSuffixLength(a, b) {\n        var i, len = Math.min(a.length, b.length);\n        var aLastIndex = a.length - 1;\n        var bLastIndex = b.length - 1;\n        for (i = 0; i < len; i++) {\n            if (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\n                return i;\n            }\n        }\n        return len;\n    }\n    exports.commonSuffixLength = commonSuffixLength;\n    // --- unicode\n    // http://en.wikipedia.org/wiki/Surrogate_pair\n    // Returns the code point starting at a specified index in a string\n    // Code points U+0000 to U+D7FF and U+E000 to U+FFFF are represented on a single character\n    // Code points U+10000 to U+10FFFF are represented on two consecutive characters\n    //export function getUnicodePoint(str:string, index:number, len:number):number {\n    //\tconst chrCode = str.charCodeAt(index);\n    //\tif (0xD800 <= chrCode && chrCode <= 0xDBFF && index + 1 < len) {\n    //\t\tconst nextChrCode = str.charCodeAt(index + 1);\n    //\t\tif (0xDC00 <= nextChrCode && nextChrCode <= 0xDFFF) {\n    //\t\t\treturn (chrCode - 0xD800) << 10 + (nextChrCode - 0xDC00) + 0x10000;\n    //\t\t}\n    //\t}\n    //\treturn chrCode;\n    //}\n    function isHighSurrogate(charCode) {\n        return (0xD800 <= charCode && charCode <= 0xDBFF);\n    }\n    exports.isHighSurrogate = isHighSurrogate;\n    function isLowSurrogate(charCode) {\n        return (0xDC00 <= charCode && charCode <= 0xDFFF);\n    }\n    exports.isLowSurrogate = isLowSurrogate;\n    /**\n     * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-rtl-test.js\n     */\n    var CONTAINS_RTL = /(?:[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1-\\u07EA\\u07F4\\u07F5\\u07FA-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u0858\\u085E-\\u08BD\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFD3D\\uFD50-\\uFDFC\\uFE70-\\uFEFC]|\\uD802[\\uDC00-\\uDD1B\\uDD20-\\uDE00\\uDE10-\\uDE33\\uDE40-\\uDEE4\\uDEEB-\\uDF35\\uDF40-\\uDFFF]|\\uD803[\\uDC00-\\uDCFF]|\\uD83A[\\uDC00-\\uDCCF\\uDD00-\\uDD43\\uDD50-\\uDFFF]|\\uD83B[\\uDC00-\\uDEBB])/;\n    /**\n     * Returns true if `str` contains any Unicode character that is classified as \"R\" or \"AL\".\n     */\n    function containsRTL(str) {\n        return CONTAINS_RTL.test(str);\n    }\n    exports.containsRTL = containsRTL;\n    /**\n     * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-emoji-test.js\n     */\n    var CONTAINS_EMOJI = /(?:[\\u231A\\u231B\\u23F0\\u23F3\\u2600-\\u27BF\\u2B50\\u2B55]|\\uD83C[\\uDDE6-\\uDDFF\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDE4F\\uDE80-\\uDEF8]|\\uD83E[\\uDD00-\\uDDE6])/;\n    function containsEmoji(str) {\n        return CONTAINS_EMOJI.test(str);\n    }\n    exports.containsEmoji = containsEmoji;\n    var IS_BASIC_ASCII = /^[\\t\\n\\r\\x20-\\x7E]*$/;\n    /**\n     * Returns true if `str` contains only basic ASCII characters in the range 32 - 126 (including 32 and 126) or \\n, \\r, \\t\n     */\n    function isBasicASCII(str) {\n        return IS_BASIC_ASCII.test(str);\n    }\n    exports.isBasicASCII = isBasicASCII;\n    function containsFullWidthCharacter(str) {\n        for (var i = 0, len = str.length; i < len; i++) {\n            if (isFullWidthCharacter(str.charCodeAt(i))) {\n                return true;\n            }\n        }\n        return false;\n    }\n    exports.containsFullWidthCharacter = containsFullWidthCharacter;\n    function isFullWidthCharacter(charCode) {\n        // Do a cheap trick to better support wrapping of wide characters, treat them as 2 columns\n        // http://jrgraphix.net/research/unicode_blocks.php\n        //          2E80 — 2EFF   CJK Radicals Supplement\n        //          2F00 — 2FDF   Kangxi Radicals\n        //          2FF0 — 2FFF   Ideographic Description Characters\n        //          3000 — 303F   CJK Symbols and Punctuation\n        //          3040 — 309F   Hiragana\n        //          30A0 — 30FF   Katakana\n        //          3100 — 312F   Bopomofo\n        //          3130 — 318F   Hangul Compatibility Jamo\n        //          3190 — 319F   Kanbun\n        //          31A0 — 31BF   Bopomofo Extended\n        //          31F0 — 31FF   Katakana Phonetic Extensions\n        //          3200 — 32FF   Enclosed CJK Letters and Months\n        //          3300 — 33FF   CJK Compatibility\n        //          3400 — 4DBF   CJK Unified Ideographs Extension A\n        //          4DC0 — 4DFF   Yijing Hexagram Symbols\n        //          4E00 — 9FFF   CJK Unified Ideographs\n        //          A000 — A48F   Yi Syllables\n        //          A490 — A4CF   Yi Radicals\n        //          AC00 — D7AF   Hangul Syllables\n        // [IGNORE] D800 — DB7F   High Surrogates\n        // [IGNORE] DB80 — DBFF   High Private Use Surrogates\n        // [IGNORE] DC00 — DFFF   Low Surrogates\n        // [IGNORE] E000 — F8FF   Private Use Area\n        //          F900 — FAFF   CJK Compatibility Ideographs\n        // [IGNORE] FB00 — FB4F   Alphabetic Presentation Forms\n        // [IGNORE] FB50 — FDFF   Arabic Presentation Forms-A\n        // [IGNORE] FE00 — FE0F   Variation Selectors\n        // [IGNORE] FE20 — FE2F   Combining Half Marks\n        // [IGNORE] FE30 — FE4F   CJK Compatibility Forms\n        // [IGNORE] FE50 — FE6F   Small Form Variants\n        // [IGNORE] FE70 — FEFF   Arabic Presentation Forms-B\n        //          FF00 — FFEF   Halfwidth and Fullwidth Forms\n        //               [https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms]\n        //               of which FF01 - FF5E fullwidth ASCII of 21 to 7E\n        // [IGNORE]    and FF65 - FFDC halfwidth of Katakana and Hangul\n        // [IGNORE] FFF0 — FFFF   Specials\n        charCode = +charCode; // @perf\n        return ((charCode >= 0x2E80 && charCode <= 0xD7AF)\n            || (charCode >= 0xF900 && charCode <= 0xFAFF)\n            || (charCode >= 0xFF01 && charCode <= 0xFF5E));\n    }\n    exports.isFullWidthCharacter = isFullWidthCharacter;\n    // -- UTF-8 BOM\n    exports.UTF8_BOM_CHARACTER = String.fromCharCode(65279 /* UTF8_BOM */);\n    function startsWithUTF8BOM(str) {\n        return !!(str && str.length > 0 && str.charCodeAt(0) === 65279 /* UTF8_BOM */);\n    }\n    exports.startsWithUTF8BOM = startsWithUTF8BOM;\n    function safeBtoa(str) {\n        return btoa(encodeURIComponent(str)); // we use encodeURIComponent because btoa fails for non Latin 1 values\n    }\n    exports.safeBtoa = safeBtoa;\n    function repeat(s, count) {\n        var result = '';\n        for (var i = 0; i < count; i++) {\n            result += s;\n        }\n        return result;\n    }\n    exports.repeat = repeat;\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine(__m[7/*vs/base/common/types*/], __M([0/*require*/,1/*exports*/]), function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    var _typeof = {\n        number: 'number',\n        string: 'string',\n        undefined: 'undefined',\n        object: 'object',\n        function: 'function'\n    };\n    /**\n     * @returns whether the provided parameter is a JavaScript Array or not.\n     */\n    function isArray(array) {\n        if (Array.isArray) {\n            return Array.isArray(array);\n        }\n        if (array && typeof (array.length) === _typeof.number && array.constructor === Array) {\n            return true;\n        }\n        return false;\n    }\n    exports.isArray = isArray;\n    /**\n     * @returns whether the provided parameter is a JavaScript String or not.\n     */\n    function isString(str) {\n        if (typeof (str) === _typeof.string || str instanceof String) {\n            return true;\n        }\n        return false;\n    }\n    exports.isString = isString;\n    /**\n     *\n     * @returns whether the provided parameter is of type `object` but **not**\n     *\t`null`, an `array`, a `regexp`, nor a `date`.\n     */\n    function isObject(obj) {\n        // The method can't do a type cast since there are type (like strings) which\n        // are subclasses of any put not positvely matched by the function. Hence type\n        // narrowing results in wrong results.\n        return typeof obj === _typeof.object\n            && obj !== null\n            && !Array.isArray(obj)\n            && !(obj instanceof RegExp)\n            && !(obj instanceof Date);\n    }\n    exports.isObject = isObject;\n    /**\n     * In **contrast** to just checking `typeof` this will return `false` for `NaN`.\n     * @returns whether the provided parameter is a JavaScript Number or not.\n     */\n    function isNumber(obj) {\n        if ((typeof (obj) === _typeof.number || obj instanceof Number) && !isNaN(obj)) {\n            return true;\n        }\n        return false;\n    }\n    exports.isNumber = isNumber;\n    /**\n     * @returns whether the provided parameter is a JavaScript Boolean or not.\n     */\n    function isBoolean(obj) {\n        return obj === true || obj === false;\n    }\n    exports.isBoolean = isBoolean;\n    /**\n     * @returns whether the provided parameter is undefined.\n     */\n    function isUndefined(obj) {\n        return typeof (obj) === _typeof.undefined;\n    }\n    exports.isUndefined = isUndefined;\n    /**\n     * @returns whether the provided parameter is undefined or null.\n     */\n    function isUndefinedOrNull(obj) {\n        return isUndefined(obj) || obj === null;\n    }\n    exports.isUndefinedOrNull = isUndefinedOrNull;\n    var hasOwnProperty = Object.prototype.hasOwnProperty;\n    /**\n     * @returns whether the provided parameter is an empty JavaScript Object or not.\n     */\n    function isEmptyObject(obj) {\n        if (!isObject(obj)) {\n            return false;\n        }\n        for (var key in obj) {\n            if (hasOwnProperty.call(obj, key)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    exports.isEmptyObject = isEmptyObject;\n    /**\n     * @returns whether the provided parameter is a JavaScript Function or not.\n     */\n    function isFunction(obj) {\n        return typeof obj === _typeof.function;\n    }\n    exports.isFunction = isFunction;\n    function validateConstraints(args, constraints) {\n        var len = Math.min(args.length, constraints.length);\n        for (var i = 0; i < len; i++) {\n            validateConstraint(args[i], constraints[i]);\n        }\n    }\n    exports.validateConstraints = validateConstraints;\n    function validateConstraint(arg, constraint) {\n        if (isString(constraint)) {\n            if (typeof arg !== constraint) {\n                throw new Error(\"argument does not match constraint: typeof \" + constraint);\n            }\n        }\n        else if (isFunction(constraint)) {\n            try {\n                if (arg instanceof constraint) {\n                    return;\n                }\n            }\n            catch (_a) {\n                // ignore\n            }\n            if (!isUndefinedOrNull(arg) && arg.constructor === constraint) {\n                return;\n            }\n            if (constraint.length === 1 && constraint.call(undefined, arg) === true) {\n                return;\n            }\n            throw new Error(\"argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true\");\n        }\n    }\n    exports.validateConstraint = validateConstraint;\n    function getAllPropertyNames(obj) {\n        var res = [];\n        var proto = Object.getPrototypeOf(obj);\n        while (Object.prototype !== proto) {\n            res = res.concat(Object.getOwnPropertyNames(proto));\n            proto = Object.getPrototypeOf(proto);\n        }\n        return res;\n    }\n    exports.getAllPropertyNames = getAllPropertyNames;\n    /**\n     * Converts null to undefined, passes all other values through.\n     */\n    function withNullAsUndefined(x) {\n        return x === null ? undefined : x;\n    }\n    exports.withNullAsUndefined = withNullAsUndefined;\n    /**\n     * Converts undefined to null, passes all other values through.\n     */\n    function withUndefinedAsNull(x) {\n        return typeof x === 'undefined' ? null : x;\n    }\n    exports.withUndefinedAsNull = withUndefinedAsNull;\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n\n\n\n\n\n\n\n\n\n\n\ndefine(__m[12/*vs/base/common/uri*/], __M([0/*require*/,1/*exports*/,3/*vs/base/common/platform*/]), function (require, exports, platform_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    var _a;\n    var _schemePattern = /^\\w[\\w\\d+.-]*$/;\n    var _singleSlashStart = /^\\//;\n    var _doubleSlashStart = /^\\/\\//;\n    var _throwOnMissingSchema = true;\n    function _validateUri(ret, _strict) {\n        // scheme, must be set\n        if (!ret.scheme) {\n            if (_strict || _throwOnMissingSchema) {\n                throw new Error(\"[UriError]: Scheme is missing: {scheme: \\\"\\\", authority: \\\"\" + ret.authority + \"\\\", path: \\\"\" + ret.path + \"\\\", query: \\\"\" + ret.query + \"\\\", fragment: \\\"\" + ret.fragment + \"\\\"}\");\n            }\n            else {\n                console.warn(\"[UriError]: Scheme is missing: {scheme: \\\"\\\", authority: \\\"\" + ret.authority + \"\\\", path: \\\"\" + ret.path + \"\\\", query: \\\"\" + ret.query + \"\\\", fragment: \\\"\" + ret.fragment + \"\\\"}\");\n            }\n        }\n        // scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n        // ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n        if (ret.scheme && !_schemePattern.test(ret.scheme)) {\n            throw new Error('[UriError]: Scheme contains illegal characters.');\n        }\n        // path, http://tools.ietf.org/html/rfc3986#section-3.3\n        // If a URI contains an authority component, then the path component\n        // must either be empty or begin with a slash (\"/\") character.  If a URI\n        // does not contain an authority component, then the path cannot begin\n        // with two slash characters (\"//\").\n        if (ret.path) {\n            if (ret.authority) {\n                if (!_singleSlashStart.test(ret.path)) {\n                    throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n                }\n            }\n            else {\n                if (_doubleSlashStart.test(ret.path)) {\n                    throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n                }\n            }\n        }\n    }\n    // for a while we allowed uris *without* schemes and this is the migration\n    // for them, e.g. an uri without scheme and without strict-mode warns and falls\n    // back to the file-scheme. that should cause the least carnage and still be a\n    // clear warning\n    function _schemeFix(scheme, _strict) {\n        if (_strict || _throwOnMissingSchema) {\n            return scheme || _empty;\n        }\n        if (!scheme) {\n            console.trace('BAD uri lacks scheme, falling back to file-scheme.');\n            scheme = 'file';\n        }\n        return scheme;\n    }\n    // implements a bit of https://tools.ietf.org/html/rfc3986#section-5\n    function _referenceResolution(scheme, path) {\n        // the slash-character is our 'default base' as we don't\n        // support constructing URIs relative to other URIs. This\n        // also means that we alter and potentially break paths.\n        // see https://tools.ietf.org/html/rfc3986#section-5.1.4\n        switch (scheme) {\n            case 'https':\n            case 'http':\n            case 'file':\n                if (!path) {\n                    path = _slash;\n                }\n                else if (path[0] !== _slash) {\n                    path = _slash + path;\n                }\n                break;\n        }\n        return path;\n    }\n    var _empty = '';\n    var _slash = '/';\n    var _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n    /**\n     * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n     * This class is a simple parser which creates the basic component parts\n     * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n     * and encoding.\n     *\n     *       foo://example.com:8042/over/there?name=ferret#nose\n     *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n     *        |           |            |            |        |\n     *     scheme     authority       path        query   fragment\n     *        |   _____________________|__\n     *       / \\ /                        \\\n     *       urn:example:animal:ferret:nose\n     */\n    var URI = /** @class */ (function () {\n        /**\n         * @internal\n         */\n        function URI(schemeOrData, authority, path, query, fragment, _strict) {\n            if (_strict === void 0) { _strict = false; }\n            if (typeof schemeOrData === 'object') {\n                this.scheme = schemeOrData.scheme || _empty;\n                this.authority = schemeOrData.authority || _empty;\n                this.path = schemeOrData.path || _empty;\n                this.query = schemeOrData.query || _empty;\n                this.fragment = schemeOrData.fragment || _empty;\n                // no validation because it's this URI\n                // that creates uri components.\n                // _validateUri(this);\n            }\n            else {\n                this.scheme = _schemeFix(schemeOrData, _strict);\n                this.authority = authority || _empty;\n                this.path = _referenceResolution(this.scheme, path || _empty);\n                this.query = query || _empty;\n                this.fragment = fragment || _empty;\n                _validateUri(this, _strict);\n            }\n        }\n        URI.isUri = function (thing) {\n            if (thing instanceof URI) {\n                return true;\n            }\n            if (!thing) {\n                return false;\n            }\n            return typeof thing.authority === 'string'\n                && typeof thing.fragment === 'string'\n                && typeof thing.path === 'string'\n                && typeof thing.query === 'string'\n                && typeof thing.scheme === 'string'\n                && typeof thing.fsPath === 'function'\n                && typeof thing.with === 'function'\n                && typeof thing.toString === 'function';\n        };\n        Object.defineProperty(URI.prototype, \"fsPath\", {\n            // ---- filesystem path -----------------------\n            /**\n             * Returns a string representing the corresponding file system path of this URI.\n             * Will handle UNC paths, normalizes windows drive letters to lower-case, and uses the\n             * platform specific path separator.\n             *\n             * * Will *not* validate the path for invalid characters and semantics.\n             * * Will *not* look at the scheme of this URI.\n             * * The result shall *not* be used for display purposes but for accessing a file on disk.\n             *\n             *\n             * The *difference* to `URI#path` is the use of the platform specific separator and the handling\n             * of UNC paths. See the below sample of a file-uri with an authority (UNC path).\n             *\n             * ```ts\n                const u = URI.parse('file://server/c$/folder/file.txt')\n                u.authority === 'server'\n                u.path === '/shares/c$/file.txt'\n                u.fsPath === '\\\\server\\c$\\folder\\file.txt'\n            ```\n             *\n             * Using `URI#path` to read a file (using fs-apis) would not be enough because parts of the path,\n             * namely the server name, would be missing. Therefore `URI#fsPath` exists - it's sugar to ease working\n             * with URIs that represent files on disk (`file` scheme).\n             */\n            get: function () {\n                // if (this.scheme !== 'file') {\n                // \tconsole.warn(`[UriError] calling fsPath with scheme ${this.scheme}`);\n                // }\n                return _makeFsPath(this);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        // ---- modify to new -------------------------\n        URI.prototype.with = function (change) {\n            if (!change) {\n                return this;\n            }\n            var scheme = change.scheme, authority = change.authority, path = change.path, query = change.query, fragment = change.fragment;\n            if (scheme === undefined) {\n                scheme = this.scheme;\n            }\n            else if (scheme === null) {\n                scheme = _empty;\n            }\n            if (authority === undefined) {\n                authority = this.authority;\n            }\n            else if (authority === null) {\n                authority = _empty;\n            }\n            if (path === undefined) {\n                path = this.path;\n            }\n            else if (path === null) {\n                path = _empty;\n            }\n            if (query === undefined) {\n                query = this.query;\n            }\n            else if (query === null) {\n                query = _empty;\n            }\n            if (fragment === undefined) {\n                fragment = this.fragment;\n            }\n            else if (fragment === null) {\n                fragment = _empty;\n            }\n            if (scheme === this.scheme\n                && authority === this.authority\n                && path === this.path\n                && query === this.query\n                && fragment === this.fragment) {\n                return this;\n            }\n            return new _URI(scheme, authority, path, query, fragment);\n        };\n        // ---- parse & validate ------------------------\n        /**\n         * Creates a new URI from a string, e.g. `http://www.msft.com/some/path`,\n         * `file:///usr/home`, or `scheme:with/path`.\n         *\n         * @param value A string which represents an URI (see `URI#toString`).\n         */\n        URI.parse = function (value, _strict) {\n            if (_strict === void 0) { _strict = false; }\n            var match = _regexp.exec(value);\n            if (!match) {\n                return new _URI(_empty, _empty, _empty, _empty, _empty);\n            }\n            return new _URI(match[2] || _empty, decodeURIComponent(match[4] || _empty), decodeURIComponent(match[5] || _empty), decodeURIComponent(match[7] || _empty), decodeURIComponent(match[9] || _empty), _strict);\n        };\n        /**\n         * Creates a new URI from a file system path, e.g. `c:\\my\\files`,\n         * `/usr/home`, or `\\\\server\\share\\some\\path`.\n         *\n         * The *difference* between `URI#parse` and `URI#file` is that the latter treats the argument\n         * as path, not as stringified-uri. E.g. `URI.file(path)` is **not the same as**\n         * `URI.parse('file://' + path)` because the path might contain characters that are\n         * interpreted (# and ?). See the following sample:\n         * ```ts\n        const good = URI.file('/coding/c#/project1');\n        good.scheme === 'file';\n        good.path === '/coding/c#/project1';\n        good.fragment === '';\n        const bad = URI.parse('file://' + '/coding/c#/project1');\n        bad.scheme === 'file';\n        bad.path === '/coding/c'; // path is now broken\n        bad.fragment === '/project1';\n        ```\n         *\n         * @param path A file system path (see `URI#fsPath`)\n         */\n        URI.file = function (path) {\n            var authority = _empty;\n            // normalize to fwd-slashes on windows,\n            // on other systems bwd-slashes are valid\n            // filename character, eg /f\\oo/ba\\r.txt\n            if (platform_1.isWindows) {\n                path = path.replace(/\\\\/g, _slash);\n            }\n            // check for authority as used in UNC shares\n            // or use the path as given\n            if (path[0] === _slash && path[1] === _slash) {\n                var idx = path.indexOf(_slash, 2);\n                if (idx === -1) {\n                    authority = path.substring(2);\n                    path = _slash;\n                }\n                else {\n                    authority = path.substring(2, idx);\n                    path = path.substring(idx) || _slash;\n                }\n            }\n            return new _URI('file', authority, path, _empty, _empty);\n        };\n        URI.from = function (components) {\n            return new _URI(components.scheme, components.authority, components.path, components.query, components.fragment);\n        };\n        // ---- printing/externalize ---------------------------\n        /**\n         * Creates a string representation for this URI. It's guaranteed that calling\n         * `URI.parse` with the result of this function creates an URI which is equal\n         * to this URI.\n         *\n         * * The result shall *not* be used for display purposes but for externalization or transport.\n         * * The result will be encoded using the percentage encoding and encoding happens mostly\n         * ignore the scheme-specific encoding rules.\n         *\n         * @param skipEncoding Do not encode the result, default is `false`\n         */\n        URI.prototype.toString = function (skipEncoding) {\n            if (skipEncoding === void 0) { skipEncoding = false; }\n            return _asFormatted(this, skipEncoding);\n        };\n        URI.prototype.toJSON = function () {\n            return this;\n        };\n        URI.revive = function (data) {\n            if (!data) {\n                return data;\n            }\n            else if (data instanceof URI) {\n                return data;\n            }\n            else {\n                var result = new _URI(data);\n                result._fsPath = data.fsPath;\n                result._formatted = data.external;\n                return result;\n            }\n        };\n        return URI;\n    }());\n    exports.URI = URI;\n    // tslint:disable-next-line:class-name\n    var _URI = /** @class */ (function (_super) {\n        __extends(_URI, _super);\n        function _URI() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            _this._formatted = null;\n            _this._fsPath = null;\n            return _this;\n        }\n        Object.defineProperty(_URI.prototype, \"fsPath\", {\n            get: function () {\n                if (!this._fsPath) {\n                    this._fsPath = _makeFsPath(this);\n                }\n                return this._fsPath;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        _URI.prototype.toString = function (skipEncoding) {\n            if (skipEncoding === void 0) { skipEncoding = false; }\n            if (!skipEncoding) {\n                if (!this._formatted) {\n                    this._formatted = _asFormatted(this, false);\n                }\n                return this._formatted;\n            }\n            else {\n                // we don't cache that\n                return _asFormatted(this, true);\n            }\n        };\n        _URI.prototype.toJSON = function () {\n            var res = {\n                $mid: 1\n            };\n            // cached state\n            if (this._fsPath) {\n                res.fsPath = this._fsPath;\n            }\n            if (this._formatted) {\n                res.external = this._formatted;\n            }\n            // uri components\n            if (this.path) {\n                res.path = this.path;\n            }\n            if (this.scheme) {\n                res.scheme = this.scheme;\n            }\n            if (this.authority) {\n                res.authority = this.authority;\n            }\n            if (this.query) {\n                res.query = this.query;\n            }\n            if (this.fragment) {\n                res.fragment = this.fragment;\n            }\n            return res;\n        };\n        return _URI;\n    }(URI));\n    // reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2\n    var encodeTable = (_a = {},\n        _a[58 /* Colon */] = '%3A',\n        _a[47 /* Slash */] = '%2F',\n        _a[63 /* QuestionMark */] = '%3F',\n        _a[35 /* Hash */] = '%23',\n        _a[91 /* OpenSquareBracket */] = '%5B',\n        _a[93 /* CloseSquareBracket */] = '%5D',\n        _a[64 /* AtSign */] = '%40',\n        _a[33 /* ExclamationMark */] = '%21',\n        _a[36 /* DollarSign */] = '%24',\n        _a[38 /* Ampersand */] = '%26',\n        _a[39 /* SingleQuote */] = '%27',\n        _a[40 /* OpenParen */] = '%28',\n        _a[41 /* CloseParen */] = '%29',\n        _a[42 /* Asterisk */] = '%2A',\n        _a[43 /* Plus */] = '%2B',\n        _a[44 /* Comma */] = '%2C',\n        _a[59 /* Semicolon */] = '%3B',\n        _a[61 /* Equals */] = '%3D',\n        _a[32 /* Space */] = '%20',\n        _a);\n    function encodeURIComponentFast(uriComponent, allowSlash) {\n        var res = undefined;\n        var nativeEncodePos = -1;\n        for (var pos = 0; pos < uriComponent.length; pos++) {\n            var code = uriComponent.charCodeAt(pos);\n            // unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3\n            if ((code >= 97 /* a */ && code <= 122 /* z */)\n                || (code >= 65 /* A */ && code <= 90 /* Z */)\n                || (code >= 48 /* Digit0 */ && code <= 57 /* Digit9 */)\n                || code === 45 /* Dash */\n                || code === 46 /* Period */\n                || code === 95 /* Underline */\n                || code === 126 /* Tilde */\n                || (allowSlash && code === 47 /* Slash */)) {\n                // check if we are delaying native encode\n                if (nativeEncodePos !== -1) {\n                    res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n                    nativeEncodePos = -1;\n                }\n                // check if we write into a new string (by default we try to return the param)\n                if (res !== undefined) {\n                    res += uriComponent.charAt(pos);\n                }\n            }\n            else {\n                // encoding needed, we need to allocate a new string\n                if (res === undefined) {\n                    res = uriComponent.substr(0, pos);\n                }\n                // check with default table first\n                var escaped = encodeTable[code];\n                if (escaped !== undefined) {\n                    // check if we are delaying native encode\n                    if (nativeEncodePos !== -1) {\n                        res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n                        nativeEncodePos = -1;\n                    }\n                    // append escaped variant to result\n                    res += escaped;\n                }\n                else if (nativeEncodePos === -1) {\n                    // use native encode only when needed\n                    nativeEncodePos = pos;\n                }\n            }\n        }\n        if (nativeEncodePos !== -1) {\n            res += encodeURIComponent(uriComponent.substring(nativeEncodePos));\n        }\n        return res !== undefined ? res : uriComponent;\n    }\n    function encodeURIComponentMinimal(path) {\n        var res = undefined;\n        for (var pos = 0; pos < path.length; pos++) {\n            var code = path.charCodeAt(pos);\n            if (code === 35 /* Hash */ || code === 63 /* QuestionMark */) {\n                if (res === undefined) {\n                    res = path.substr(0, pos);\n                }\n                res += encodeTable[code];\n            }\n            else {\n                if (res !== undefined) {\n                    res += path[pos];\n                }\n            }\n        }\n        return res !== undefined ? res : path;\n    }\n    /**\n     * Compute `fsPath` for the given uri\n     */\n    function _makeFsPath(uri) {\n        var value;\n        if (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\n            // unc path: file://shares/c$/far/boo\n            value = \"//\" + uri.authority + uri.path;\n        }\n        else if (uri.path.charCodeAt(0) === 47 /* Slash */\n            && (uri.path.charCodeAt(1) >= 65 /* A */ && uri.path.charCodeAt(1) <= 90 /* Z */ || uri.path.charCodeAt(1) >= 97 /* a */ && uri.path.charCodeAt(1) <= 122 /* z */)\n            && uri.path.charCodeAt(2) === 58 /* Colon */) {\n            // windows drive letter: file:///c:/far/boo\n            value = uri.path[1].toLowerCase() + uri.path.substr(2);\n        }\n        else {\n            // other path\n            value = uri.path;\n        }\n        if (platform_1.isWindows) {\n            value = value.replace(/\\//g, '\\\\');\n        }\n        return value;\n    }\n    /**\n     * Create the external version of a uri\n     */\n    function _asFormatted(uri, skipEncoding) {\n        var encoder = !skipEncoding\n            ? encodeURIComponentFast\n            : encodeURIComponentMinimal;\n        var res = '';\n        var scheme = uri.scheme, authority = uri.authority, path = uri.path, query = uri.query, fragment = uri.fragment;\n        if (scheme) {\n            res += scheme;\n            res += ':';\n        }\n        if (authority || scheme === 'file') {\n            res += _slash;\n            res += _slash;\n        }\n        if (authority) {\n            var idx = authority.indexOf('@');\n            if (idx !== -1) {\n                // <user>@<auth>\n                var userinfo = authority.substr(0, idx);\n                authority = authority.substr(idx + 1);\n                idx = userinfo.indexOf(':');\n                if (idx === -1) {\n                    res += encoder(userinfo, false);\n                }\n                else {\n                    // <user>:<pass>@<auth>\n                    res += encoder(userinfo.substr(0, idx), false);\n                    res += ':';\n                    res += encoder(userinfo.substr(idx + 1), false);\n                }\n                res += '@';\n            }\n            authority = authority.toLowerCase();\n            idx = authority.indexOf(':');\n            if (idx === -1) {\n                res += encoder(authority, false);\n            }\n            else {\n                // <auth>:<port>\n                res += encoder(authority.substr(0, idx), false);\n                res += authority.substr(idx);\n            }\n        }\n        if (path) {\n            // lower-case windows drive letters in /C:/fff or C:/fff\n            if (path.length >= 3 && path.charCodeAt(0) === 47 /* Slash */ && path.charCodeAt(2) === 58 /* Colon */) {\n                var code = path.charCodeAt(1);\n                if (code >= 65 /* A */ && code <= 90 /* Z */) {\n                    path = \"/\" + String.fromCharCode(code + 32) + \":\" + path.substr(3); // \"/c:\".length === 3\n                }\n            }\n            else if (path.length >= 2 && path.charCodeAt(1) === 58 /* Colon */) {\n                var code = path.charCodeAt(0);\n                if (code >= 65 /* A */ && code <= 90 /* Z */) {\n                    path = String.fromCharCode(code + 32) + \":\" + path.substr(2); // \"/c:\".length === 3\n                }\n            }\n            // encode the rest of the path\n            res += encoder(path, true);\n        }\n        if (query) {\n            res += '?';\n            res += encoder(query, false);\n        }\n        if (fragment) {\n            res += '#';\n            res += !skipEncoding ? encodeURIComponentFast(fragment, false) : fragment;\n        }\n        return res;\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n\n\n\n\n\n\n\n\n\n\n\ndefine(__m[33/*vs/base/common/worker/simpleWorker*/], __M([0/*require*/,1/*exports*/,5/*vs/base/common/errors*/,10/*vs/base/common/lifecycle*/,3/*vs/base/common/platform*/,7/*vs/base/common/types*/]), function (require, exports, errors_1, lifecycle_1, platform_1, types_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    var INITIALIZE = '$initialize';\n    var webWorkerWarningLogged = false;\n    function logOnceWebWorkerWarning(err) {\n        if (!platform_1.isWeb) {\n            // running tests\n            return;\n        }\n        if (!webWorkerWarningLogged) {\n            webWorkerWarningLogged = true;\n            console.warn('Could not create web worker(s). Falling back to loading web worker code in main thread, which might cause UI freezes. Please see https://github.com/Microsoft/monaco-editor#faq');\n        }\n        console.warn(err.message);\n    }\n    exports.logOnceWebWorkerWarning = logOnceWebWorkerWarning;\n    var SimpleWorkerProtocol = /** @class */ (function () {\n        function SimpleWorkerProtocol(handler) {\n            this._workerId = -1;\n            this._handler = handler;\n            this._lastSentReq = 0;\n            this._pendingReplies = Object.create(null);\n        }\n        SimpleWorkerProtocol.prototype.setWorkerId = function (workerId) {\n            this._workerId = workerId;\n        };\n        SimpleWorkerProtocol.prototype.sendMessage = function (method, args) {\n            var _this = this;\n            var req = String(++this._lastSentReq);\n            return new Promise(function (resolve, reject) {\n                _this._pendingReplies[req] = {\n                    resolve: resolve,\n                    reject: reject\n                };\n                _this._send({\n                    vsWorker: _this._workerId,\n                    req: req,\n                    method: method,\n                    args: args\n                });\n            });\n        };\n        SimpleWorkerProtocol.prototype.handleMessage = function (serializedMessage) {\n            var message;\n            try {\n                message = JSON.parse(serializedMessage);\n            }\n            catch (e) {\n                // nothing\n                return;\n            }\n            if (!message || !message.vsWorker) {\n                return;\n            }\n            if (this._workerId !== -1 && message.vsWorker !== this._workerId) {\n                return;\n            }\n            this._handleMessage(message);\n        };\n        SimpleWorkerProtocol.prototype._handleMessage = function (msg) {\n            var _this = this;\n            if (msg.seq) {\n                var replyMessage = msg;\n                if (!this._pendingReplies[replyMessage.seq]) {\n                    console.warn('Got reply to unknown seq');\n                    return;\n                }\n                var reply = this._pendingReplies[replyMessage.seq];\n                delete this._pendingReplies[replyMessage.seq];\n                if (replyMessage.err) {\n                    var err = replyMessage.err;\n                    if (replyMessage.err.$isError) {\n                        err = new Error();\n                        err.name = replyMessage.err.name;\n                        err.message = replyMessage.err.message;\n                        err.stack = replyMessage.err.stack;\n                    }\n                    reply.reject(err);\n                    return;\n                }\n                reply.resolve(replyMessage.res);\n                return;\n            }\n            var requestMessage = msg;\n            var req = requestMessage.req;\n            var result = this._handler.handleMessage(requestMessage.method, requestMessage.args);\n            result.then(function (r) {\n                _this._send({\n                    vsWorker: _this._workerId,\n                    seq: req,\n                    res: r,\n                    err: undefined\n                });\n            }, function (e) {\n                if (e.detail instanceof Error) {\n                    // Loading errors have a detail property that points to the actual error\n                    e.detail = errors_1.transformErrorForSerialization(e.detail);\n                }\n                _this._send({\n                    vsWorker: _this._workerId,\n                    seq: req,\n                    res: undefined,\n                    err: errors_1.transformErrorForSerialization(e)\n                });\n            });\n        };\n        SimpleWorkerProtocol.prototype._send = function (msg) {\n            var strMsg = JSON.stringify(msg);\n            // console.log('SENDING: ' + strMsg);\n            this._handler.sendMessage(strMsg);\n        };\n        return SimpleWorkerProtocol;\n    }());\n    /**\n     * Main thread side\n     */\n    var SimpleWorkerClient = /** @class */ (function (_super) {\n        __extends(SimpleWorkerClient, _super);\n        function SimpleWorkerClient(workerFactory, moduleId) {\n            var _this = _super.call(this) || this;\n            var lazyProxyReject = null;\n            _this._worker = _this._register(workerFactory.create('vs/base/common/worker/simpleWorker', function (msg) {\n                _this._protocol.handleMessage(msg);\n            }, function (err) {\n                // in Firefox, web workers fail lazily :(\n                // we will reject the proxy\n                if (lazyProxyReject) {\n                    lazyProxyReject(err);\n                }\n            }));\n            _this._protocol = new SimpleWorkerProtocol({\n                sendMessage: function (msg) {\n                    _this._worker.postMessage(msg);\n                },\n                handleMessage: function (method, args) {\n                    // Intentionally not supporting worker -> main requests\n                    return Promise.resolve(null);\n                }\n            });\n            _this._protocol.setWorkerId(_this._worker.getId());\n            // Gather loader configuration\n            var loaderConfiguration = null;\n            if (typeof self.require !== 'undefined' && typeof self.require.getConfig === 'function') {\n                // Get the configuration from the Monaco AMD Loader\n                loaderConfiguration = self.require.getConfig();\n            }\n            else if (typeof self.requirejs !== 'undefined') {\n                // Get the configuration from requirejs\n                loaderConfiguration = self.requirejs.s.contexts._.config;\n            }\n            // Send initialize message\n            _this._onModuleLoaded = _this._protocol.sendMessage(INITIALIZE, [\n                _this._worker.getId(),\n                moduleId,\n                loaderConfiguration\n            ]);\n            _this._lazyProxy = new Promise(function (resolve, reject) {\n                lazyProxyReject = reject;\n                _this._onModuleLoaded.then(function (availableMethods) {\n                    var proxy = {};\n                    for (var _i = 0, availableMethods_1 = availableMethods; _i < availableMethods_1.length; _i++) {\n                        var methodName = availableMethods_1[_i];\n                        proxy[methodName] = createProxyMethod(methodName, proxyMethodRequest);\n                    }\n                    resolve(proxy);\n                }, function (e) {\n                    reject(e);\n                    _this._onError('Worker failed to load ' + moduleId, e);\n                });\n            });\n            // Create proxy to loaded code\n            var proxyMethodRequest = function (method, args) {\n                return _this._request(method, args);\n            };\n            var createProxyMethod = function (method, proxyMethodRequest) {\n                return function () {\n                    var args = Array.prototype.slice.call(arguments, 0);\n                    return proxyMethodRequest(method, args);\n                };\n            };\n            return _this;\n        }\n        SimpleWorkerClient.prototype.getProxyObject = function () {\n            return this._lazyProxy;\n        };\n        SimpleWorkerClient.prototype._request = function (method, args) {\n            var _this = this;\n            return new Promise(function (resolve, reject) {\n                _this._onModuleLoaded.then(function () {\n                    _this._protocol.sendMessage(method, args).then(resolve, reject);\n                }, reject);\n            });\n        };\n        SimpleWorkerClient.prototype._onError = function (message, error) {\n            console.error(message);\n            console.info(error);\n        };\n        return SimpleWorkerClient;\n    }(lifecycle_1.Disposable));\n    exports.SimpleWorkerClient = SimpleWorkerClient;\n    /**\n     * Worker side\n     */\n    var SimpleWorkerServer = /** @class */ (function () {\n        function SimpleWorkerServer(postSerializedMessage, requestHandler) {\n            var _this = this;\n            this._requestHandler = requestHandler;\n            this._protocol = new SimpleWorkerProtocol({\n                sendMessage: function (msg) {\n                    postSerializedMessage(msg);\n                },\n                handleMessage: function (method, args) { return _this._handleMessage(method, args); }\n            });\n        }\n        SimpleWorkerServer.prototype.onmessage = function (msg) {\n            this._protocol.handleMessage(msg);\n        };\n        SimpleWorkerServer.prototype._handleMessage = function (method, args) {\n            if (method === INITIALIZE) {\n                return this.initialize(args[0], args[1], args[2]);\n            }\n            if (!this._requestHandler || typeof this._requestHandler[method] !== 'function') {\n                return Promise.reject(new Error('Missing requestHandler or method: ' + method));\n            }\n            try {\n                return Promise.resolve(this._requestHandler[method].apply(this._requestHandler, args));\n            }\n            catch (e) {\n                return Promise.reject(e);\n            }\n        };\n        SimpleWorkerServer.prototype.initialize = function (workerId, moduleId, loaderConfig) {\n            var _this = this;\n            this._protocol.setWorkerId(workerId);\n            if (this._requestHandler) {\n                // static request handler\n                var methods = [];\n                for (var _i = 0, _a = types_1.getAllPropertyNames(this._requestHandler); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    if (typeof this._requestHandler[prop] === 'function') {\n                        methods.push(prop);\n                    }\n                }\n                return Promise.resolve(methods);\n            }\n            if (loaderConfig) {\n                // Remove 'baseUrl', handling it is beyond scope for now\n                if (typeof loaderConfig.baseUrl !== 'undefined') {\n                    delete loaderConfig['baseUrl'];\n                }\n                if (typeof loaderConfig.paths !== 'undefined') {\n                    if (typeof loaderConfig.paths.vs !== 'undefined') {\n                        delete loaderConfig.paths['vs'];\n                    }\n                }\n                // Since this is in a web worker, enable catching errors\n                loaderConfig.catchError = true;\n                self.require.config(loaderConfig);\n            }\n            return new Promise(function (resolve, reject) {\n                // Use the global require to be sure to get the global config\n                self.require([moduleId], function () {\n                    var result = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        result[_i] = arguments[_i];\n                    }\n                    var handlerModule = result[0];\n                    _this._requestHandler = handlerModule.create();\n                    if (!_this._requestHandler) {\n                        reject(new Error(\"No RequestHandler!\"));\n                        return;\n                    }\n                    var methods = [];\n                    for (var _a = 0, _b = types_1.getAllPropertyNames(_this._requestHandler); _a < _b.length; _a++) {\n                        var prop = _b[_a];\n                        if (typeof _this._requestHandler[prop] === 'function') {\n                            methods.push(prop);\n                        }\n                    }\n                    resolve(methods);\n                }, reject);\n            });\n        };\n        return SimpleWorkerServer;\n    }());\n    exports.SimpleWorkerServer = SimpleWorkerServer;\n    /**\n     * Called on the worker side\n     */\n    function create(postMessage) {\n        return new SimpleWorkerServer(postMessage, null);\n    }\n    exports.create = create;\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine(__m[2/*vs/editor/common/core/position*/], __M([0/*require*/,1/*exports*/]), function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    /**\n     * A position in the editor.\n     */\n    var Position = /** @class */ (function () {\n        function Position(lineNumber, column) {\n            this.lineNumber = lineNumber;\n            this.column = column;\n        }\n        /**\n         * Create a new postion from this position.\n         *\n         * @param newLineNumber new line number\n         * @param newColumn new column\n         */\n        Position.prototype.with = function (newLineNumber, newColumn) {\n            if (newLineNumber === void 0) { newLineNumber = this.lineNumber; }\n            if (newColumn === void 0) { newColumn = this.column; }\n            if (newLineNumber === this.lineNumber && newColumn === this.column) {\n                return this;\n            }\n            else {\n                return new Position(newLineNumber, newColumn);\n            }\n        };\n        /**\n         * Derive a new position from this position.\n         *\n         * @param deltaLineNumber line number delta\n         * @param deltaColumn column delta\n         */\n        Position.prototype.delta = function (deltaLineNumber, deltaColumn) {\n            if (deltaLineNumber === void 0) { deltaLineNumber = 0; }\n            if (deltaColumn === void 0) { deltaColumn = 0; }\n            return this.with(this.lineNumber + deltaLineNumber, this.column + deltaColumn);\n        };\n        /**\n         * Test if this position equals other position\n         */\n        Position.prototype.equals = function (other) {\n            return Position.equals(this, other);\n        };\n        /**\n         * Test if position `a` equals position `b`\n         */\n        Position.equals = function (a, b) {\n            if (!a && !b) {\n                return true;\n            }\n            return (!!a &&\n                !!b &&\n                a.lineNumber === b.lineNumber &&\n                a.column === b.column);\n        };\n        /**\n         * Test if this position is before other position.\n         * If the two positions are equal, the result will be false.\n         */\n        Position.prototype.isBefore = function (other) {\n            return Position.isBefore(this, other);\n        };\n        /**\n         * Test if position `a` is before position `b`.\n         * If the two positions are equal, the result will be false.\n         */\n        Position.isBefore = function (a, b) {\n            if (a.lineNumber < b.lineNumber) {\n                return true;\n            }\n            if (b.lineNumber < a.lineNumber) {\n                return false;\n            }\n            return a.column < b.column;\n        };\n        /**\n         * Test if this position is before other position.\n         * If the two positions are equal, the result will be true.\n         */\n        Position.prototype.isBeforeOrEqual = function (other) {\n            return Position.isBeforeOrEqual(this, other);\n        };\n        /**\n         * Test if position `a` is before position `b`.\n         * If the two positions are equal, the result will be true.\n         */\n        Position.isBeforeOrEqual = function (a, b) {\n            if (a.lineNumber < b.lineNumber) {\n                return true;\n            }\n            if (b.lineNumber < a.lineNumber) {\n                return false;\n            }\n            return a.column <= b.column;\n        };\n        /**\n         * A function that compares positions, useful for sorting\n         */\n        Position.compare = function (a, b) {\n            var aLineNumber = a.lineNumber | 0;\n            var bLineNumber = b.lineNumber | 0;\n            if (aLineNumber === bLineNumber) {\n                var aColumn = a.column | 0;\n                var bColumn = b.column | 0;\n                return aColumn - bColumn;\n            }\n            return aLineNumber - bLineNumber;\n        };\n        /**\n         * Clone this position.\n         */\n        Position.prototype.clone = function () {\n            return new Position(this.lineNumber, this.column);\n        };\n        /**\n         * Convert to a human-readable representation.\n         */\n        Position.prototype.toString = function () {\n            return '(' + this.lineNumber + ',' + this.column + ')';\n        };\n        // ---\n        /**\n         * Create a `Position` from an `IPosition`.\n         */\n        Position.lift = function (pos) {\n            return new Position(pos.lineNumber, pos.column);\n        };\n        /**\n         * Test if `obj` is an `IPosition`.\n         */\n        Position.isIPosition = function (obj) {\n            return (obj\n                && (typeof obj.lineNumber === 'number')\n                && (typeof obj.column === 'number'));\n        };\n        return Position;\n    }());\n    exports.Position = Position;\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine(__m[6/*vs/editor/common/core/range*/], __M([0/*require*/,1/*exports*/,2/*vs/editor/common/core/position*/]), function (require, exports, position_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    /**\n     * A range in the editor. (startLineNumber,startColumn) is <= (endLineNumber,endColumn)\n     */\n    var Range = /** @class */ (function () {\n        function Range(startLineNumber, startColumn, endLineNumber, endColumn) {\n            if ((startLineNumber > endLineNumber) || (startLineNumber === endLineNumber && startColumn > endColumn)) {\n                this.startLineNumber = endLineNumber;\n                this.startColumn = endColumn;\n                this.endLineNumber = startLineNumber;\n                this.endColumn = startColumn;\n            }\n            else {\n                this.startLineNumber = startLineNumber;\n                this.startColumn = startColumn;\n                this.endLineNumber = endLineNumber;\n                this.endColumn = endColumn;\n            }\n        }\n        /**\n         * Test if this range is empty.\n         */\n        Range.prototype.isEmpty = function () {\n            return Range.isEmpty(this);\n        };\n        /**\n         * Test if `range` is empty.\n         */\n        Range.isEmpty = function (range) {\n            return (range.startLineNumber === range.endLineNumber && range.startColumn === range.endColumn);\n        };\n        /**\n         * Test if position is in this range. If the position is at the edges, will return true.\n         */\n        Range.prototype.containsPosition = function (position) {\n            return Range.containsPosition(this, position);\n        };\n        /**\n         * Test if `position` is in `range`. If the position is at the edges, will return true.\n         */\n        Range.containsPosition = function (range, position) {\n            if (position.lineNumber < range.startLineNumber || position.lineNumber > range.endLineNumber) {\n                return false;\n            }\n            if (position.lineNumber === range.startLineNumber && position.column < range.startColumn) {\n                return false;\n            }\n            if (position.lineNumber === range.endLineNumber && position.column > range.endColumn) {\n                return false;\n            }\n            return true;\n        };\n        /**\n         * Test if range is in this range. If the range is equal to this range, will return true.\n         */\n        Range.prototype.containsRange = function (range) {\n            return Range.containsRange(this, range);\n        };\n        /**\n         * Test if `otherRange` is in `range`. If the ranges are equal, will return true.\n         */\n        Range.containsRange = function (range, otherRange) {\n            if (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\n                return false;\n            }\n            if (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\n                return false;\n            }\n            if (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn < range.startColumn) {\n                return false;\n            }\n            if (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn > range.endColumn) {\n                return false;\n            }\n            return true;\n        };\n        /**\n         * A reunion of the two ranges.\n         * The smallest position will be used as the start point, and the largest one as the end point.\n         */\n        Range.prototype.plusRange = function (range) {\n            return Range.plusRange(this, range);\n        };\n        /**\n         * A reunion of the two ranges.\n         * The smallest position will be used as the start point, and the largest one as the end point.\n         */\n        Range.plusRange = function (a, b) {\n            var startLineNumber;\n            var startColumn;\n            var endLineNumber;\n            var endColumn;\n            if (b.startLineNumber < a.startLineNumber) {\n                startLineNumber = b.startLineNumber;\n                startColumn = b.startColumn;\n            }\n            else if (b.startLineNumber === a.startLineNumber) {\n                startLineNumber = b.startLineNumber;\n                startColumn = Math.min(b.startColumn, a.startColumn);\n            }\n            else {\n                startLineNumber = a.startLineNumber;\n                startColumn = a.startColumn;\n            }\n            if (b.endLineNumber > a.endLineNumber) {\n                endLineNumber = b.endLineNumber;\n                endColumn = b.endColumn;\n            }\n            else if (b.endLineNumber === a.endLineNumber) {\n                endLineNumber = b.endLineNumber;\n                endColumn = Math.max(b.endColumn, a.endColumn);\n            }\n            else {\n                endLineNumber = a.endLineNumber;\n                endColumn = a.endColumn;\n            }\n            return new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n        };\n        /**\n         * A intersection of the two ranges.\n         */\n        Range.prototype.intersectRanges = function (range) {\n            return Range.intersectRanges(this, range);\n        };\n        /**\n         * A intersection of the two ranges.\n         */\n        Range.intersectRanges = function (a, b) {\n            var resultStartLineNumber = a.startLineNumber;\n            var resultStartColumn = a.startColumn;\n            var resultEndLineNumber = a.endLineNumber;\n            var resultEndColumn = a.endColumn;\n            var otherStartLineNumber = b.startLineNumber;\n            var otherStartColumn = b.startColumn;\n            var otherEndLineNumber = b.endLineNumber;\n            var otherEndColumn = b.endColumn;\n            if (resultStartLineNumber < otherStartLineNumber) {\n                resultStartLineNumber = otherStartLineNumber;\n                resultStartColumn = otherStartColumn;\n            }\n            else if (resultStartLineNumber === otherStartLineNumber) {\n                resultStartColumn = Math.max(resultStartColumn, otherStartColumn);\n            }\n            if (resultEndLineNumber > otherEndLineNumber) {\n                resultEndLineNumber = otherEndLineNumber;\n                resultEndColumn = otherEndColumn;\n            }\n            else if (resultEndLineNumber === otherEndLineNumber) {\n                resultEndColumn = Math.min(resultEndColumn, otherEndColumn);\n            }\n            // Check if selection is now empty\n            if (resultStartLineNumber > resultEndLineNumber) {\n                return null;\n            }\n            if (resultStartLineNumber === resultEndLineNumber && resultStartColumn > resultEndColumn) {\n                return null;\n            }\n            return new Range(resultStartLineNumber, resultStartColumn, resultEndLineNumber, resultEndColumn);\n        };\n        /**\n         * Test if this range equals other.\n         */\n        Range.prototype.equalsRange = function (other) {\n            return Range.equalsRange(this, other);\n        };\n        /**\n         * Test if range `a` equals `b`.\n         */\n        Range.equalsRange = function (a, b) {\n            return (!!a &&\n                !!b &&\n                a.startLineNumber === b.startLineNumber &&\n                a.startColumn === b.startColumn &&\n                a.endLineNumber === b.endLineNumber &&\n                a.endColumn === b.endColumn);\n        };\n        /**\n         * Return the end position (which will be after or equal to the start position)\n         */\n        Range.prototype.getEndPosition = function () {\n            return new position_1.Position(this.endLineNumber, this.endColumn);\n        };\n        /**\n         * Return the start position (which will be before or equal to the end position)\n         */\n        Range.prototype.getStartPosition = function () {\n            return new position_1.Position(this.startLineNumber, this.startColumn);\n        };\n        /**\n         * Transform to a user presentable string representation.\n         */\n        Range.prototype.toString = function () {\n            return '[' + this.startLineNumber + ',' + this.startColumn + ' -> ' + this.endLineNumber + ',' + this.endColumn + ']';\n        };\n        /**\n         * Create a new range using this range's start position, and using endLineNumber and endColumn as the end position.\n         */\n        Range.prototype.setEndPosition = function (endLineNumber, endColumn) {\n            return new Range(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n        };\n        /**\n         * Create a new range using this range's end position, and using startLineNumber and startColumn as the start position.\n         */\n        Range.prototype.setStartPosition = function (startLineNumber, startColumn) {\n            return new Range(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n        };\n        /**\n         * Create a new empty range using this range's start position.\n         */\n        Range.prototype.collapseToStart = function () {\n            return Range.collapseToStart(this);\n        };\n        /**\n         * Create a new empty range using this range's start position.\n         */\n        Range.collapseToStart = function (range) {\n            return new Range(range.startLineNumber, range.startColumn, range.startLineNumber, range.startColumn);\n        };\n        // ---\n        Range.fromPositions = function (start, end) {\n            if (end === void 0) { end = start; }\n            return new Range(start.lineNumber, start.column, end.lineNumber, end.column);\n        };\n        Range.lift = function (range) {\n            if (!range) {\n                return null;\n            }\n            return new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn);\n        };\n        /**\n         * Test if `obj` is an `IRange`.\n         */\n        Range.isIRange = function (obj) {\n            return (obj\n                && (typeof obj.startLineNumber === 'number')\n                && (typeof obj.startColumn === 'number')\n                && (typeof obj.endLineNumber === 'number')\n                && (typeof obj.endColumn === 'number'));\n        };\n        /**\n         * Test if the two ranges are touching in any way.\n         */\n        Range.areIntersectingOrTouching = function (a, b) {\n            // Check if `a` is before `b`\n            if (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn < b.startColumn)) {\n                return false;\n            }\n            // Check if `b` is before `a`\n            if (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn < a.startColumn)) {\n                return false;\n            }\n            // These ranges must intersect\n            return true;\n        };\n        /**\n         * Test if the two ranges are intersecting. If the ranges are touching it returns true.\n         */\n        Range.areIntersecting = function (a, b) {\n            // Check if `a` is before `b`\n            if (a.endLineNumber < b.startLineNumber || (a.endLineNumber === b.startLineNumber && a.endColumn <= b.startColumn)) {\n                return false;\n            }\n            // Check if `b` is before `a`\n            if (b.endLineNumber < a.startLineNumber || (b.endLineNumber === a.startLineNumber && b.endColumn <= a.startColumn)) {\n                return false;\n            }\n            // These ranges must intersect\n            return true;\n        };\n        /**\n         * A function that compares ranges, useful for sorting ranges\n         * It will first compare ranges on the startPosition and then on the endPosition\n         */\n        Range.compareRangesUsingStarts = function (a, b) {\n            if (a && b) {\n                var aStartLineNumber = a.startLineNumber | 0;\n                var bStartLineNumber = b.startLineNumber | 0;\n                if (aStartLineNumber === bStartLineNumber) {\n                    var aStartColumn = a.startColumn | 0;\n                    var bStartColumn = b.startColumn | 0;\n                    if (aStartColumn === bStartColumn) {\n                        var aEndLineNumber = a.endLineNumber | 0;\n                        var bEndLineNumber = b.endLineNumber | 0;\n                        if (aEndLineNumber === bEndLineNumber) {\n                            var aEndColumn = a.endColumn | 0;\n                            var bEndColumn = b.endColumn | 0;\n                            return aEndColumn - bEndColumn;\n                        }\n                        return aEndLineNumber - bEndLineNumber;\n                    }\n                    return aStartColumn - bStartColumn;\n                }\n                return aStartLineNumber - bStartLineNumber;\n            }\n            var aExists = (a ? 1 : 0);\n            var bExists = (b ? 1 : 0);\n            return aExists - bExists;\n        };\n        /**\n         * A function that compares ranges, useful for sorting ranges\n         * It will first compare ranges on the endPosition and then on the startPosition\n         */\n        Range.compareRangesUsingEnds = function (a, b) {\n            if (a.endLineNumber === b.endLineNumber) {\n                if (a.endColumn === b.endColumn) {\n                    if (a.startLineNumber === b.startLineNumber) {\n                        return a.startColumn - b.startColumn;\n                    }\n                    return a.startLineNumber - b.startLineNumber;\n                }\n                return a.endColumn - b.endColumn;\n            }\n            return a.endLineNumber - b.endLineNumber;\n        };\n        /**\n         * Test if the range spans multiple lines.\n         */\n        Range.spansMultipleLines = function (range) {\n            return range.endLineNumber > range.startLineNumber;\n        };\n        return Range;\n    }());\n    exports.Range = Range;\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n\n\n\n\n\n\n\n\n\n\n\ndefine(__m[19/*vs/editor/common/core/selection*/], __M([0/*require*/,1/*exports*/,2/*vs/editor/common/core/position*/,6/*vs/editor/common/core/range*/]), function (require, exports, position_1, range_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    /**\n     * A selection in the editor.\n     * The selection is a range that has an orientation.\n     */\n    var Selection = /** @class */ (function (_super) {\n        __extends(Selection, _super);\n        function Selection(selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn) {\n            var _this = _super.call(this, selectionStartLineNumber, selectionStartColumn, positionLineNumber, positionColumn) || this;\n            _this.selectionStartLineNumber = selectionStartLineNumber;\n            _this.selectionStartColumn = selectionStartColumn;\n            _this.positionLineNumber = positionLineNumber;\n            _this.positionColumn = positionColumn;\n            return _this;\n        }\n        /**\n         * Clone this selection.\n         */\n        Selection.prototype.clone = function () {\n            return new Selection(this.selectionStartLineNumber, this.selectionStartColumn, this.positionLineNumber, this.positionColumn);\n        };\n        /**\n         * Transform to a human-readable representation.\n         */\n        Selection.prototype.toString = function () {\n            return '[' + this.selectionStartLineNumber + ',' + this.selectionStartColumn + ' -> ' + this.positionLineNumber + ',' + this.positionColumn + ']';\n        };\n        /**\n         * Test if equals other selection.\n         */\n        Selection.prototype.equalsSelection = function (other) {\n            return (Selection.selectionsEqual(this, other));\n        };\n        /**\n         * Test if the two selections are equal.\n         */\n        Selection.selectionsEqual = function (a, b) {\n            return (a.selectionStartLineNumber === b.selectionStartLineNumber &&\n                a.selectionStartColumn === b.selectionStartColumn &&\n                a.positionLineNumber === b.positionLineNumber &&\n                a.positionColumn === b.positionColumn);\n        };\n        /**\n         * Get directions (LTR or RTL).\n         */\n        Selection.prototype.getDirection = function () {\n            if (this.selectionStartLineNumber === this.startLineNumber && this.selectionStartColumn === this.startColumn) {\n                return 0 /* LTR */;\n            }\n            return 1 /* RTL */;\n        };\n        /**\n         * Create a new selection with a different `positionLineNumber` and `positionColumn`.\n         */\n        Selection.prototype.setEndPosition = function (endLineNumber, endColumn) {\n            if (this.getDirection() === 0 /* LTR */) {\n                return new Selection(this.startLineNumber, this.startColumn, endLineNumber, endColumn);\n            }\n            return new Selection(endLineNumber, endColumn, this.startLineNumber, this.startColumn);\n        };\n        /**\n         * Get the position at `positionLineNumber` and `positionColumn`.\n         */\n        Selection.prototype.getPosition = function () {\n            return new position_1.Position(this.positionLineNumber, this.positionColumn);\n        };\n        /**\n         * Create a new selection with a different `selectionStartLineNumber` and `selectionStartColumn`.\n         */\n        Selection.prototype.setStartPosition = function (startLineNumber, startColumn) {\n            if (this.getDirection() === 0 /* LTR */) {\n                return new Selection(startLineNumber, startColumn, this.endLineNumber, this.endColumn);\n            }\n            return new Selection(this.endLineNumber, this.endColumn, startLineNumber, startColumn);\n        };\n        // ----\n        /**\n         * Create a `Selection` from one or two positions\n         */\n        Selection.fromPositions = function (start, end) {\n            if (end === void 0) { end = start; }\n            return new Selection(start.lineNumber, start.column, end.lineNumber, end.column);\n        };\n        /**\n         * Create a `Selection` from an `ISelection`.\n         */\n        Selection.liftSelection = function (sel) {\n            return new Selection(sel.selectionStartLineNumber, sel.selectionStartColumn, sel.positionLineNumber, sel.positionColumn);\n        };\n        /**\n         * `a` equals `b`.\n         */\n        Selection.selectionsArrEqual = function (a, b) {\n            if (a && !b || !a && b) {\n                return false;\n            }\n            if (!a && !b) {\n                return true;\n            }\n            if (a.length !== b.length) {\n                return false;\n            }\n            for (var i = 0, len = a.length; i < len; i++) {\n                if (!this.selectionsEqual(a[i], b[i])) {\n                    return false;\n                }\n            }\n            return true;\n        };\n        /**\n         * Test if `obj` is an `ISelection`.\n         */\n        Selection.isISelection = function (obj) {\n            return (obj\n                && (typeof obj.selectionStartLineNumber === 'number')\n                && (typeof obj.selectionStartColumn === 'number')\n                && (typeof obj.positionLineNumber === 'number')\n                && (typeof obj.positionColumn === 'number'));\n        };\n        /**\n         * Create with a direction.\n         */\n        Selection.createWithDirection = function (startLineNumber, startColumn, endLineNumber, endColumn, direction) {\n            if (direction === 0 /* LTR */) {\n                return new Selection(startLineNumber, startColumn, endLineNumber, endColumn);\n            }\n            return new Selection(endLineNumber, endColumn, startLineNumber, startColumn);\n        };\n        return Selection;\n    }(range_1.Range));\n    exports.Selection = Selection;\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine(__m[20/*vs/editor/common/core/token*/], __M([0/*require*/,1/*exports*/]), function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    var Token = /** @class */ (function () {\n        function Token(offset, type, language) {\n            this.offset = offset | 0; // @perf\n            this.type = type;\n            this.language = language;\n        }\n        Token.prototype.toString = function () {\n            return '(' + this.offset + ', ' + this.type + ')';\n        };\n        return Token;\n    }());\n    exports.Token = Token;\n    var TokenizationResult = /** @class */ (function () {\n        function TokenizationResult(tokens, endState) {\n            this.tokens = tokens;\n            this.endState = endState;\n        }\n        return TokenizationResult;\n    }());\n    exports.TokenizationResult = TokenizationResult;\n    var TokenizationResult2 = /** @class */ (function () {\n        function TokenizationResult2(tokens, endState) {\n            this.tokens = tokens;\n            this.endState = endState;\n        }\n        return TokenizationResult2;\n    }());\n    exports.TokenizationResult2 = TokenizationResult2;\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine(__m[4/*vs/editor/common/core/uint*/], __M([0/*require*/,1/*exports*/]), function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    var Uint8Matrix = /** @class */ (function () {\n        function Uint8Matrix(rows, cols, defaultValue) {\n            var data = new Uint8Array(rows * cols);\n            for (var i = 0, len = rows * cols; i < len; i++) {\n                data[i] = defaultValue;\n            }\n            this._data = data;\n            this.rows = rows;\n            this.cols = cols;\n        }\n        Uint8Matrix.prototype.get = function (row, col) {\n            return this._data[row * this.cols + col];\n        };\n        Uint8Matrix.prototype.set = function (row, col, value) {\n            this._data[row * this.cols + col] = value;\n        };\n        return Uint8Matrix;\n    }());\n    exports.Uint8Matrix = Uint8Matrix;\n    function toUint8(v) {\n        if (v < 0) {\n            return 0;\n        }\n        if (v > 255 /* MAX_UINT_8 */) {\n            return 255 /* MAX_UINT_8 */;\n        }\n        return v | 0;\n    }\n    exports.toUint8 = toUint8;\n    function toUint32(v) {\n        if (v < 0) {\n            return 0;\n        }\n        if (v > 4294967295 /* MAX_UINT_32 */) {\n            return 4294967295 /* MAX_UINT_32 */;\n        }\n        return v | 0;\n    }\n    exports.toUint32 = toUint32;\n    function toUint32Array(arr) {\n        var len = arr.length;\n        var r = new Uint32Array(len);\n        for (var i = 0; i < len; i++) {\n            r[i] = toUint32(arr[i]);\n        }\n        return r;\n    }\n    exports.toUint32Array = toUint32Array;\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine(__m[22/*vs/editor/common/core/characterClassifier*/], __M([0/*require*/,1/*exports*/,4/*vs/editor/common/core/uint*/]), function (require, exports, uint_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    /**\n     * A fast character classifier that uses a compact array for ASCII values.\n     */\n    var CharacterClassifier = /** @class */ (function () {\n        function CharacterClassifier(_defaultValue) {\n            var defaultValue = uint_1.toUint8(_defaultValue);\n            this._defaultValue = defaultValue;\n            this._asciiMap = CharacterClassifier._createAsciiMap(defaultValue);\n            this._map = new Map();\n        }\n        CharacterClassifier._createAsciiMap = function (defaultValue) {\n            var asciiMap = new Uint8Array(256);\n            for (var i = 0; i < 256; i++) {\n                asciiMap[i] = defaultValue;\n            }\n            return asciiMap;\n        };\n        CharacterClassifier.prototype.set = function (charCode, _value) {\n            var value = uint_1.toUint8(_value);\n            if (charCode >= 0 && charCode < 256) {\n                this._asciiMap[charCode] = value;\n            }\n            else {\n                this._map.set(charCode, value);\n            }\n        };\n        CharacterClassifier.prototype.get = function (charCode) {\n            if (charCode >= 0 && charCode < 256) {\n                return this._asciiMap[charCode];\n            }\n            else {\n                return (this._map.get(charCode) || this._defaultValue);\n            }\n        };\n        return CharacterClassifier;\n    }());\n    exports.CharacterClassifier = CharacterClassifier;\n    var CharacterSet = /** @class */ (function () {\n        function CharacterSet() {\n            this._actual = new CharacterClassifier(0 /* False */);\n        }\n        CharacterSet.prototype.add = function (charCode) {\n            this._actual.set(charCode, 1 /* True */);\n        };\n        CharacterSet.prototype.has = function (charCode) {\n            return (this._actual.get(charCode) === 1 /* True */);\n        };\n        return CharacterSet;\n    }());\n    exports.CharacterSet = CharacterSet;\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine(__m[23/*vs/editor/common/diff/diffComputer*/], __M([0/*require*/,1/*exports*/,8/*vs/base/common/diff/diff*/,13/*vs/base/common/strings*/]), function (require, exports, diff_1, strings) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    var MAXIMUM_RUN_TIME = 5000; // 5 seconds\n    var MINIMUM_MATCHING_CHARACTER_LENGTH = 3;\n    function computeDiff(originalSequence, modifiedSequence, continueProcessingPredicate, pretty) {\n        var diffAlgo = new diff_1.LcsDiff(originalSequence, modifiedSequence, continueProcessingPredicate);\n        return diffAlgo.ComputeDiff(pretty);\n    }\n    var LineMarkerSequence = /** @class */ (function () {\n        function LineMarkerSequence(lines) {\n            var startColumns = [];\n            var endColumns = [];\n            for (var i = 0, length_1 = lines.length; i < length_1; i++) {\n                startColumns[i] = LineMarkerSequence._getFirstNonBlankColumn(lines[i], 1);\n                endColumns[i] = LineMarkerSequence._getLastNonBlankColumn(lines[i], 1);\n            }\n            this._lines = lines;\n            this._startColumns = startColumns;\n            this._endColumns = endColumns;\n        }\n        LineMarkerSequence.prototype.getLength = function () {\n            return this._lines.length;\n        };\n        LineMarkerSequence.prototype.getElementAtIndex = function (i) {\n            return this._lines[i].substring(this._startColumns[i] - 1, this._endColumns[i] - 1);\n        };\n        LineMarkerSequence.prototype.getStartLineNumber = function (i) {\n            return i + 1;\n        };\n        LineMarkerSequence.prototype.getEndLineNumber = function (i) {\n            return i + 1;\n        };\n        LineMarkerSequence._getFirstNonBlankColumn = function (txt, defaultValue) {\n            var r = strings.firstNonWhitespaceIndex(txt);\n            if (r === -1) {\n                return defaultValue;\n            }\n            return r + 1;\n        };\n        LineMarkerSequence._getLastNonBlankColumn = function (txt, defaultValue) {\n            var r = strings.lastNonWhitespaceIndex(txt);\n            if (r === -1) {\n                return defaultValue;\n            }\n            return r + 2;\n        };\n        LineMarkerSequence.prototype.getCharSequence = function (shouldIgnoreTrimWhitespace, startIndex, endIndex) {\n            var charCodes = [];\n            var lineNumbers = [];\n            var columns = [];\n            var len = 0;\n            for (var index = startIndex; index <= endIndex; index++) {\n                var lineContent = this._lines[index];\n                var startColumn = (shouldIgnoreTrimWhitespace ? this._startColumns[index] : 1);\n                var endColumn = (shouldIgnoreTrimWhitespace ? this._endColumns[index] : lineContent.length + 1);\n                for (var col = startColumn; col < endColumn; col++) {\n                    charCodes[len] = lineContent.charCodeAt(col - 1);\n                    lineNumbers[len] = index + 1;\n                    columns[len] = col;\n                    len++;\n                }\n            }\n            return new CharSequence(charCodes, lineNumbers, columns);\n        };\n        return LineMarkerSequence;\n    }());\n    var CharSequence = /** @class */ (function () {\n        function CharSequence(charCodes, lineNumbers, columns) {\n            this._charCodes = charCodes;\n            this._lineNumbers = lineNumbers;\n            this._columns = columns;\n        }\n        CharSequence.prototype.getLength = function () {\n            return this._charCodes.length;\n        };\n        CharSequence.prototype.getElementAtIndex = function (i) {\n            return this._charCodes[i];\n        };\n        CharSequence.prototype.getStartLineNumber = function (i) {\n            return this._lineNumbers[i];\n        };\n        CharSequence.prototype.getStartColumn = function (i) {\n            return this._columns[i];\n        };\n        CharSequence.prototype.getEndLineNumber = function (i) {\n            return this._lineNumbers[i];\n        };\n        CharSequence.prototype.getEndColumn = function (i) {\n            return this._columns[i] + 1;\n        };\n        return CharSequence;\n    }());\n    var CharChange = /** @class */ (function () {\n        function CharChange(originalStartLineNumber, originalStartColumn, originalEndLineNumber, originalEndColumn, modifiedStartLineNumber, modifiedStartColumn, modifiedEndLineNumber, modifiedEndColumn) {\n            this.originalStartLineNumber = originalStartLineNumber;\n            this.originalStartColumn = originalStartColumn;\n            this.originalEndLineNumber = originalEndLineNumber;\n            this.originalEndColumn = originalEndColumn;\n            this.modifiedStartLineNumber = modifiedStartLineNumber;\n            this.modifiedStartColumn = modifiedStartColumn;\n            this.modifiedEndLineNumber = modifiedEndLineNumber;\n            this.modifiedEndColumn = modifiedEndColumn;\n        }\n        CharChange.createFromDiffChange = function (diffChange, originalCharSequence, modifiedCharSequence) {\n            var originalStartLineNumber;\n            var originalStartColumn;\n            var originalEndLineNumber;\n            var originalEndColumn;\n            var modifiedStartLineNumber;\n            var modifiedStartColumn;\n            var modifiedEndLineNumber;\n            var modifiedEndColumn;\n            if (diffChange.originalLength === 0) {\n                originalStartLineNumber = 0;\n                originalStartColumn = 0;\n                originalEndLineNumber = 0;\n                originalEndColumn = 0;\n            }\n            else {\n                originalStartLineNumber = originalCharSequence.getStartLineNumber(diffChange.originalStart);\n                originalStartColumn = originalCharSequence.getStartColumn(diffChange.originalStart);\n                originalEndLineNumber = originalCharSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\n                originalEndColumn = originalCharSequence.getEndColumn(diffChange.originalStart + diffChange.originalLength - 1);\n            }\n            if (diffChange.modifiedLength === 0) {\n                modifiedStartLineNumber = 0;\n                modifiedStartColumn = 0;\n                modifiedEndLineNumber = 0;\n                modifiedEndColumn = 0;\n            }\n            else {\n                modifiedStartLineNumber = modifiedCharSequence.getStartLineNumber(diffChange.modifiedStart);\n                modifiedStartColumn = modifiedCharSequence.getStartColumn(diffChange.modifiedStart);\n                modifiedEndLineNumber = modifiedCharSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n                modifiedEndColumn = modifiedCharSequence.getEndColumn(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n            }\n            return new CharChange(originalStartLineNumber, originalStartColumn, originalEndLineNumber, originalEndColumn, modifiedStartLineNumber, modifiedStartColumn, modifiedEndLineNumber, modifiedEndColumn);\n        };\n        return CharChange;\n    }());\n    function postProcessCharChanges(rawChanges) {\n        if (rawChanges.length <= 1) {\n            return rawChanges;\n        }\n        var result = [rawChanges[0]];\n        var prevChange = result[0];\n        for (var i = 1, len = rawChanges.length; i < len; i++) {\n            var currChange = rawChanges[i];\n            var originalMatchingLength = currChange.originalStart - (prevChange.originalStart + prevChange.originalLength);\n            var modifiedMatchingLength = currChange.modifiedStart - (prevChange.modifiedStart + prevChange.modifiedLength);\n            // Both of the above should be equal, but the continueProcessingPredicate may prevent this from being true\n            var matchingLength = Math.min(originalMatchingLength, modifiedMatchingLength);\n            if (matchingLength < MINIMUM_MATCHING_CHARACTER_LENGTH) {\n                // Merge the current change into the previous one\n                prevChange.originalLength = (currChange.originalStart + currChange.originalLength) - prevChange.originalStart;\n                prevChange.modifiedLength = (currChange.modifiedStart + currChange.modifiedLength) - prevChange.modifiedStart;\n            }\n            else {\n                // Add the current change\n                result.push(currChange);\n                prevChange = currChange;\n            }\n        }\n        return result;\n    }\n    var LineChange = /** @class */ (function () {\n        function LineChange(originalStartLineNumber, originalEndLineNumber, modifiedStartLineNumber, modifiedEndLineNumber, charChanges) {\n            this.originalStartLineNumber = originalStartLineNumber;\n            this.originalEndLineNumber = originalEndLineNumber;\n            this.modifiedStartLineNumber = modifiedStartLineNumber;\n            this.modifiedEndLineNumber = modifiedEndLineNumber;\n            this.charChanges = charChanges;\n        }\n        LineChange.createFromDiffResult = function (shouldIgnoreTrimWhitespace, diffChange, originalLineSequence, modifiedLineSequence, continueProcessingPredicate, shouldComputeCharChanges, shouldPostProcessCharChanges) {\n            var originalStartLineNumber;\n            var originalEndLineNumber;\n            var modifiedStartLineNumber;\n            var modifiedEndLineNumber;\n            var charChanges = undefined;\n            if (diffChange.originalLength === 0) {\n                originalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart) - 1;\n                originalEndLineNumber = 0;\n            }\n            else {\n                originalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart);\n                originalEndLineNumber = originalLineSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\n            }\n            if (diffChange.modifiedLength === 0) {\n                modifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart) - 1;\n                modifiedEndLineNumber = 0;\n            }\n            else {\n                modifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart);\n                modifiedEndLineNumber = modifiedLineSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n            }\n            if (shouldComputeCharChanges && diffChange.originalLength !== 0 && diffChange.modifiedLength !== 0 && continueProcessingPredicate()) {\n                var originalCharSequence = originalLineSequence.getCharSequence(shouldIgnoreTrimWhitespace, diffChange.originalStart, diffChange.originalStart + diffChange.originalLength - 1);\n                var modifiedCharSequence = modifiedLineSequence.getCharSequence(shouldIgnoreTrimWhitespace, diffChange.modifiedStart, diffChange.modifiedStart + diffChange.modifiedLength - 1);\n                var rawChanges = computeDiff(originalCharSequence, modifiedCharSequence, continueProcessingPredicate, true);\n                if (shouldPostProcessCharChanges) {\n                    rawChanges = postProcessCharChanges(rawChanges);\n                }\n                charChanges = [];\n                for (var i = 0, length_2 = rawChanges.length; i < length_2; i++) {\n                    charChanges.push(CharChange.createFromDiffChange(rawChanges[i], originalCharSequence, modifiedCharSequence));\n                }\n            }\n            return new LineChange(originalStartLineNumber, originalEndLineNumber, modifiedStartLineNumber, modifiedEndLineNumber, charChanges);\n        };\n        return LineChange;\n    }());\n    var DiffComputer = /** @class */ (function () {\n        function DiffComputer(originalLines, modifiedLines, opts) {\n            this.shouldComputeCharChanges = opts.shouldComputeCharChanges;\n            this.shouldPostProcessCharChanges = opts.shouldPostProcessCharChanges;\n            this.shouldIgnoreTrimWhitespace = opts.shouldIgnoreTrimWhitespace;\n            this.shouldMakePrettyDiff = opts.shouldMakePrettyDiff;\n            this.maximumRunTimeMs = MAXIMUM_RUN_TIME;\n            this.originalLines = originalLines;\n            this.modifiedLines = modifiedLines;\n            this.original = new LineMarkerSequence(originalLines);\n            this.modified = new LineMarkerSequence(modifiedLines);\n        }\n        DiffComputer.prototype.computeDiff = function () {\n            if (this.original.getLength() === 1 && this.original.getElementAtIndex(0).length === 0) {\n                // empty original => fast path\n                return [{\n                        originalStartLineNumber: 1,\n                        originalEndLineNumber: 1,\n                        modifiedStartLineNumber: 1,\n                        modifiedEndLineNumber: this.modified.getLength(),\n                        charChanges: [{\n                                modifiedEndColumn: 0,\n                                modifiedEndLineNumber: 0,\n                                modifiedStartColumn: 0,\n                                modifiedStartLineNumber: 0,\n                                originalEndColumn: 0,\n                                originalEndLineNumber: 0,\n                                originalStartColumn: 0,\n                                originalStartLineNumber: 0\n                            }]\n                    }];\n            }\n            if (this.modified.getLength() === 1 && this.modified.getElementAtIndex(0).length === 0) {\n                // empty modified => fast path\n                return [{\n                        originalStartLineNumber: 1,\n                        originalEndLineNumber: this.original.getLength(),\n                        modifiedStartLineNumber: 1,\n                        modifiedEndLineNumber: 1,\n                        charChanges: [{\n                                modifiedEndColumn: 0,\n                                modifiedEndLineNumber: 0,\n                                modifiedStartColumn: 0,\n                                modifiedStartLineNumber: 0,\n                                originalEndColumn: 0,\n                                originalEndLineNumber: 0,\n                                originalStartColumn: 0,\n                                originalStartLineNumber: 0\n                            }]\n                    }];\n            }\n            this.computationStartTime = (new Date()).getTime();\n            var rawChanges = computeDiff(this.original, this.modified, this._continueProcessingPredicate.bind(this), this.shouldMakePrettyDiff);\n            // The diff is always computed with ignoring trim whitespace\n            // This ensures we get the prettiest diff\n            if (this.shouldIgnoreTrimWhitespace) {\n                var lineChanges = [];\n                for (var i = 0, length_3 = rawChanges.length; i < length_3; i++) {\n                    lineChanges.push(LineChange.createFromDiffResult(this.shouldIgnoreTrimWhitespace, rawChanges[i], this.original, this.modified, this._continueProcessingPredicate.bind(this), this.shouldComputeCharChanges, this.shouldPostProcessCharChanges));\n                }\n                return lineChanges;\n            }\n            // Need to post-process and introduce changes where the trim whitespace is different\n            // Note that we are looping starting at -1 to also cover the lines before the first change\n            var result = [];\n            var originalLineIndex = 0;\n            var modifiedLineIndex = 0;\n            for (var i = -1 /* !!!! */, len = rawChanges.length; i < len; i++) {\n                var nextChange = (i + 1 < len ? rawChanges[i + 1] : null);\n                var originalStop = (nextChange ? nextChange.originalStart : this.originalLines.length);\n                var modifiedStop = (nextChange ? nextChange.modifiedStart : this.modifiedLines.length);\n                while (originalLineIndex < originalStop && modifiedLineIndex < modifiedStop) {\n                    var originalLine = this.originalLines[originalLineIndex];\n                    var modifiedLine = this.modifiedLines[modifiedLineIndex];\n                    if (originalLine !== modifiedLine) {\n                        // These lines differ only in trim whitespace\n                        // Check the leading whitespace\n                        {\n                            var originalStartColumn = LineMarkerSequence._getFirstNonBlankColumn(originalLine, 1);\n                            var modifiedStartColumn = LineMarkerSequence._getFirstNonBlankColumn(modifiedLine, 1);\n                            while (originalStartColumn > 1 && modifiedStartColumn > 1) {\n                                var originalChar = originalLine.charCodeAt(originalStartColumn - 2);\n                                var modifiedChar = modifiedLine.charCodeAt(modifiedStartColumn - 2);\n                                if (originalChar !== modifiedChar) {\n                                    break;\n                                }\n                                originalStartColumn--;\n                                modifiedStartColumn--;\n                            }\n                            if (originalStartColumn > 1 || modifiedStartColumn > 1) {\n                                this._pushTrimWhitespaceCharChange(result, originalLineIndex + 1, 1, originalStartColumn, modifiedLineIndex + 1, 1, modifiedStartColumn);\n                            }\n                        }\n                        // Check the trailing whitespace\n                        {\n                            var originalEndColumn = LineMarkerSequence._getLastNonBlankColumn(originalLine, 1);\n                            var modifiedEndColumn = LineMarkerSequence._getLastNonBlankColumn(modifiedLine, 1);\n                            var originalMaxColumn = originalLine.length + 1;\n                            var modifiedMaxColumn = modifiedLine.length + 1;\n                            while (originalEndColumn < originalMaxColumn && modifiedEndColumn < modifiedMaxColumn) {\n                                var originalChar = originalLine.charCodeAt(originalEndColumn - 1);\n                                var modifiedChar = originalLine.charCodeAt(modifiedEndColumn - 1);\n                                if (originalChar !== modifiedChar) {\n                                    break;\n                                }\n                                originalEndColumn++;\n                                modifiedEndColumn++;\n                            }\n                            if (originalEndColumn < originalMaxColumn || modifiedEndColumn < modifiedMaxColumn) {\n                                this._pushTrimWhitespaceCharChange(result, originalLineIndex + 1, originalEndColumn, originalMaxColumn, modifiedLineIndex + 1, modifiedEndColumn, modifiedMaxColumn);\n                            }\n                        }\n                    }\n                    originalLineIndex++;\n                    modifiedLineIndex++;\n                }\n                if (nextChange) {\n                    // Emit the actual change\n                    result.push(LineChange.createFromDiffResult(this.shouldIgnoreTrimWhitespace, nextChange, this.original, this.modified, this._continueProcessingPredicate.bind(this), this.shouldComputeCharChanges, this.shouldPostProcessCharChanges));\n                    originalLineIndex += nextChange.originalLength;\n                    modifiedLineIndex += nextChange.modifiedLength;\n                }\n            }\n            return result;\n        };\n        DiffComputer.prototype._pushTrimWhitespaceCharChange = function (result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn) {\n            if (this._mergeTrimWhitespaceCharChange(result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn)) {\n                // Merged into previous\n                return;\n            }\n            var charChanges = undefined;\n            if (this.shouldComputeCharChanges) {\n                charChanges = [new CharChange(originalLineNumber, originalStartColumn, originalLineNumber, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedLineNumber, modifiedEndColumn)];\n            }\n            result.push(new LineChange(originalLineNumber, originalLineNumber, modifiedLineNumber, modifiedLineNumber, charChanges));\n        };\n        DiffComputer.prototype._mergeTrimWhitespaceCharChange = function (result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn) {\n            var len = result.length;\n            if (len === 0) {\n                return false;\n            }\n            var prevChange = result[len - 1];\n            if (prevChange.originalEndLineNumber === 0 || prevChange.modifiedEndLineNumber === 0) {\n                // Don't merge with inserts/deletes\n                return false;\n            }\n            if (prevChange.originalEndLineNumber + 1 === originalLineNumber && prevChange.modifiedEndLineNumber + 1 === modifiedLineNumber) {\n                prevChange.originalEndLineNumber = originalLineNumber;\n                prevChange.modifiedEndLineNumber = modifiedLineNumber;\n                if (this.shouldComputeCharChanges) {\n                    prevChange.charChanges.push(new CharChange(originalLineNumber, originalStartColumn, originalLineNumber, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedLineNumber, modifiedEndColumn));\n                }\n                return true;\n            }\n            return false;\n        };\n        DiffComputer.prototype._continueProcessingPredicate = function () {\n            if (this.maximumRunTimeMs === 0) {\n                return true;\n            }\n            var now = (new Date()).getTime();\n            return now - this.computationStartTime < this.maximumRunTimeMs;\n        };\n        return DiffComputer;\n    }());\n    exports.DiffComputer = DiffComputer;\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine(__m[24/*vs/editor/common/model/wordHelper*/], __M([0/*require*/,1/*exports*/]), function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    exports.USUAL_WORD_SEPARATORS = '`~!@#$%^&*()-=+[{]}\\\\|;:\\'\",.<>/?';\n    /**\n     * Create a word definition regular expression based on default word separators.\n     * Optionally provide allowed separators that should be included in words.\n     *\n     * The default would look like this:\n     * /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#\\$\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g\n     */\n    function createWordRegExp(allowInWords) {\n        if (allowInWords === void 0) { allowInWords = ''; }\n        var source = '(-?\\\\d*\\\\.\\\\d\\\\w*)|([^';\n        for (var _i = 0, USUAL_WORD_SEPARATORS_1 = exports.USUAL_WORD_SEPARATORS; _i < USUAL_WORD_SEPARATORS_1.length; _i++) {\n            var sep = USUAL_WORD_SEPARATORS_1[_i];\n            if (allowInWords.indexOf(sep) >= 0) {\n                continue;\n            }\n            source += '\\\\' + sep;\n        }\n        source += '\\\\s]+)';\n        return new RegExp(source, 'g');\n    }\n    // catches numbers (including floating numbers) in the first group, and alphanum in the second\n    exports.DEFAULT_WORD_REGEXP = createWordRegExp();\n    function ensureValidWordDefinition(wordDefinition) {\n        var result = exports.DEFAULT_WORD_REGEXP;\n        if (wordDefinition && (wordDefinition instanceof RegExp)) {\n            if (!wordDefinition.global) {\n                var flags = 'g';\n                if (wordDefinition.ignoreCase) {\n                    flags += 'i';\n                }\n                if (wordDefinition.multiline) {\n                    flags += 'm';\n                }\n                if (wordDefinition.unicode) {\n                    flags += 'u';\n                }\n                result = new RegExp(wordDefinition.source, flags);\n            }\n            else {\n                result = wordDefinition;\n            }\n        }\n        result.lastIndex = 0;\n        return result;\n    }\n    exports.ensureValidWordDefinition = ensureValidWordDefinition;\n    function getWordAtPosFast(column, wordDefinition, text, textOffset) {\n        // find whitespace enclosed text around column and match from there\n        var pos = column - 1 - textOffset;\n        var start = text.lastIndexOf(' ', pos - 1) + 1;\n        wordDefinition.lastIndex = start;\n        var match;\n        while (match = wordDefinition.exec(text)) {\n            var matchIndex = match.index || 0;\n            if (matchIndex <= pos && wordDefinition.lastIndex >= pos) {\n                return {\n                    word: match[0],\n                    startColumn: textOffset + 1 + matchIndex,\n                    endColumn: textOffset + 1 + wordDefinition.lastIndex\n                };\n            }\n        }\n        return null;\n    }\n    function getWordAtPosSlow(column, wordDefinition, text, textOffset) {\n        // matches all words starting at the beginning\n        // of the input until it finds a match that encloses\n        // the desired column. slow but correct\n        var pos = column - 1 - textOffset;\n        wordDefinition.lastIndex = 0;\n        var match;\n        while (match = wordDefinition.exec(text)) {\n            var matchIndex = match.index || 0;\n            if (matchIndex > pos) {\n                // |nW -> matched only after the pos\n                return null;\n            }\n            else if (wordDefinition.lastIndex >= pos) {\n                // W|W -> match encloses pos\n                return {\n                    word: match[0],\n                    startColumn: textOffset + 1 + matchIndex,\n                    endColumn: textOffset + 1 + wordDefinition.lastIndex\n                };\n            }\n        }\n        return null;\n    }\n    function getWordAtText(column, wordDefinition, text, textOffset) {\n        // if `words` can contain whitespace character we have to use the slow variant\n        // otherwise we use the fast variant of finding a word\n        wordDefinition.lastIndex = 0;\n        var match = wordDefinition.exec(text);\n        if (!match) {\n            return null;\n        }\n        // todo@joh the `match` could already be the (first) word\n        var ret = match[0].indexOf(' ') >= 0\n            // did match a word which contains a space character -> use slow word find\n            ? getWordAtPosSlow(column, wordDefinition, text, textOffset)\n            // sane word definition -> use fast word find\n            : getWordAtPosFast(column, wordDefinition, text, textOffset);\n        // both (getWordAtPosFast and getWordAtPosSlow) leave the wordDefinition-RegExp\n        // in an undefined state and to not confuse other users of the wordDefinition\n        // we reset the lastIndex\n        wordDefinition.lastIndex = 0;\n        return ret;\n    }\n    exports.getWordAtText = getWordAtText;\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine(__m[25/*vs/editor/common/modes/linkComputer*/], __M([0/*require*/,1/*exports*/,22/*vs/editor/common/core/characterClassifier*/,4/*vs/editor/common/core/uint*/]), function (require, exports, characterClassifier_1, uint_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    var StateMachine = /** @class */ (function () {\n        function StateMachine(edges) {\n            var maxCharCode = 0;\n            var maxState = 0 /* Invalid */;\n            for (var i = 0, len = edges.length; i < len; i++) {\n                var _a = edges[i], from = _a[0], chCode = _a[1], to = _a[2];\n                if (chCode > maxCharCode) {\n                    maxCharCode = chCode;\n                }\n                if (from > maxState) {\n                    maxState = from;\n                }\n                if (to > maxState) {\n                    maxState = to;\n                }\n            }\n            maxCharCode++;\n            maxState++;\n            var states = new uint_1.Uint8Matrix(maxState, maxCharCode, 0 /* Invalid */);\n            for (var i = 0, len = edges.length; i < len; i++) {\n                var _b = edges[i], from = _b[0], chCode = _b[1], to = _b[2];\n                states.set(from, chCode, to);\n            }\n            this._states = states;\n            this._maxCharCode = maxCharCode;\n        }\n        StateMachine.prototype.nextState = function (currentState, chCode) {\n            if (chCode < 0 || chCode >= this._maxCharCode) {\n                return 0 /* Invalid */;\n            }\n            return this._states.get(currentState, chCode);\n        };\n        return StateMachine;\n    }());\n    exports.StateMachine = StateMachine;\n    // State machine for http:// or https:// or file://\n    var _stateMachine = null;\n    function getStateMachine() {\n        if (_stateMachine === null) {\n            _stateMachine = new StateMachine([\n                [1 /* Start */, 104 /* h */, 2 /* H */],\n                [1 /* Start */, 72 /* H */, 2 /* H */],\n                [1 /* Start */, 102 /* f */, 6 /* F */],\n                [1 /* Start */, 70 /* F */, 6 /* F */],\n                [2 /* H */, 116 /* t */, 3 /* HT */],\n                [2 /* H */, 84 /* T */, 3 /* HT */],\n                [3 /* HT */, 116 /* t */, 4 /* HTT */],\n                [3 /* HT */, 84 /* T */, 4 /* HTT */],\n                [4 /* HTT */, 112 /* p */, 5 /* HTTP */],\n                [4 /* HTT */, 80 /* P */, 5 /* HTTP */],\n                [5 /* HTTP */, 115 /* s */, 9 /* BeforeColon */],\n                [5 /* HTTP */, 83 /* S */, 9 /* BeforeColon */],\n                [5 /* HTTP */, 58 /* Colon */, 10 /* AfterColon */],\n                [6 /* F */, 105 /* i */, 7 /* FI */],\n                [6 /* F */, 73 /* I */, 7 /* FI */],\n                [7 /* FI */, 108 /* l */, 8 /* FIL */],\n                [7 /* FI */, 76 /* L */, 8 /* FIL */],\n                [8 /* FIL */, 101 /* e */, 9 /* BeforeColon */],\n                [8 /* FIL */, 69 /* E */, 9 /* BeforeColon */],\n                [9 /* BeforeColon */, 58 /* Colon */, 10 /* AfterColon */],\n                [10 /* AfterColon */, 47 /* Slash */, 11 /* AlmostThere */],\n                [11 /* AlmostThere */, 47 /* Slash */, 12 /* End */],\n            ]);\n        }\n        return _stateMachine;\n    }\n    var _classifier = null;\n    function getClassifier() {\n        if (_classifier === null) {\n            _classifier = new characterClassifier_1.CharacterClassifier(0 /* None */);\n            var FORCE_TERMINATION_CHARACTERS = ' \\t<>\\'\\\"、。｡､，．：；？！＠＃＄％＆＊‘“〈《「『【〔（［｛｢｣｝］）〕】』」》〉”’｀～…';\n            for (var i = 0; i < FORCE_TERMINATION_CHARACTERS.length; i++) {\n                _classifier.set(FORCE_TERMINATION_CHARACTERS.charCodeAt(i), 1 /* ForceTermination */);\n            }\n            var CANNOT_END_WITH_CHARACTERS = '.,;';\n            for (var i = 0; i < CANNOT_END_WITH_CHARACTERS.length; i++) {\n                _classifier.set(CANNOT_END_WITH_CHARACTERS.charCodeAt(i), 2 /* CannotEndIn */);\n            }\n        }\n        return _classifier;\n    }\n    var LinkComputer = /** @class */ (function () {\n        function LinkComputer() {\n        }\n        LinkComputer._createLink = function (classifier, line, lineNumber, linkBeginIndex, linkEndIndex) {\n            // Do not allow to end link in certain characters...\n            var lastIncludedCharIndex = linkEndIndex - 1;\n            do {\n                var chCode = line.charCodeAt(lastIncludedCharIndex);\n                var chClass = classifier.get(chCode);\n                if (chClass !== 2 /* CannotEndIn */) {\n                    break;\n                }\n                lastIncludedCharIndex--;\n            } while (lastIncludedCharIndex > linkBeginIndex);\n            // Handle links enclosed in parens, square brackets and curlys.\n            if (linkBeginIndex > 0) {\n                var charCodeBeforeLink = line.charCodeAt(linkBeginIndex - 1);\n                var lastCharCodeInLink = line.charCodeAt(lastIncludedCharIndex);\n                if ((charCodeBeforeLink === 40 /* OpenParen */ && lastCharCodeInLink === 41 /* CloseParen */)\n                    || (charCodeBeforeLink === 91 /* OpenSquareBracket */ && lastCharCodeInLink === 93 /* CloseSquareBracket */)\n                    || (charCodeBeforeLink === 123 /* OpenCurlyBrace */ && lastCharCodeInLink === 125 /* CloseCurlyBrace */)) {\n                    // Do not end in ) if ( is before the link start\n                    // Do not end in ] if [ is before the link start\n                    // Do not end in } if { is before the link start\n                    lastIncludedCharIndex--;\n                }\n            }\n            return {\n                range: {\n                    startLineNumber: lineNumber,\n                    startColumn: linkBeginIndex + 1,\n                    endLineNumber: lineNumber,\n                    endColumn: lastIncludedCharIndex + 2\n                },\n                url: line.substring(linkBeginIndex, lastIncludedCharIndex + 1)\n            };\n        };\n        LinkComputer.computeLinks = function (model, stateMachine) {\n            if (stateMachine === void 0) { stateMachine = getStateMachine(); }\n            var classifier = getClassifier();\n            var result = [];\n            for (var i = 1, lineCount = model.getLineCount(); i <= lineCount; i++) {\n                var line = model.getLineContent(i);\n                var len = line.length;\n                var j = 0;\n                var linkBeginIndex = 0;\n                var linkBeginChCode = 0;\n                var state = 1 /* Start */;\n                var hasOpenParens = false;\n                var hasOpenSquareBracket = false;\n                var hasOpenCurlyBracket = false;\n                while (j < len) {\n                    var resetStateMachine = false;\n                    var chCode = line.charCodeAt(j);\n                    if (state === 13 /* Accept */) {\n                        var chClass = void 0;\n                        switch (chCode) {\n                            case 40 /* OpenParen */:\n                                hasOpenParens = true;\n                                chClass = 0 /* None */;\n                                break;\n                            case 41 /* CloseParen */:\n                                chClass = (hasOpenParens ? 0 /* None */ : 1 /* ForceTermination */);\n                                break;\n                            case 91 /* OpenSquareBracket */:\n                                hasOpenSquareBracket = true;\n                                chClass = 0 /* None */;\n                                break;\n                            case 93 /* CloseSquareBracket */:\n                                chClass = (hasOpenSquareBracket ? 0 /* None */ : 1 /* ForceTermination */);\n                                break;\n                            case 123 /* OpenCurlyBrace */:\n                                hasOpenCurlyBracket = true;\n                                chClass = 0 /* None */;\n                                break;\n                            case 125 /* CloseCurlyBrace */:\n                                chClass = (hasOpenCurlyBracket ? 0 /* None */ : 1 /* ForceTermination */);\n                                break;\n                            /* The following three rules make it that ' or \" or ` are allowed inside links if the link began with a different one */\n                            case 39 /* SingleQuote */:\n                                chClass = (linkBeginChCode === 34 /* DoubleQuote */ || linkBeginChCode === 96 /* BackTick */) ? 0 /* None */ : 1 /* ForceTermination */;\n                                break;\n                            case 34 /* DoubleQuote */:\n                                chClass = (linkBeginChCode === 39 /* SingleQuote */ || linkBeginChCode === 96 /* BackTick */) ? 0 /* None */ : 1 /* ForceTermination */;\n                                break;\n                            case 96 /* BackTick */:\n                                chClass = (linkBeginChCode === 39 /* SingleQuote */ || linkBeginChCode === 34 /* DoubleQuote */) ? 0 /* None */ : 1 /* ForceTermination */;\n                                break;\n                            default:\n                                chClass = classifier.get(chCode);\n                        }\n                        // Check if character terminates link\n                        if (chClass === 1 /* ForceTermination */) {\n                            result.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, j));\n                            resetStateMachine = true;\n                        }\n                    }\n                    else if (state === 12 /* End */) {\n                        var chClass = void 0;\n                        if (chCode === 91 /* OpenSquareBracket */) {\n                            // Allow for the authority part to contain ipv6 addresses which contain [ and ]\n                            hasOpenSquareBracket = true;\n                            chClass = 0 /* None */;\n                        }\n                        else {\n                            chClass = classifier.get(chCode);\n                        }\n                        // Check if character terminates link\n                        if (chClass === 1 /* ForceTermination */) {\n                            resetStateMachine = true;\n                        }\n                        else {\n                            state = 13 /* Accept */;\n                        }\n                    }\n                    else {\n                        state = stateMachine.nextState(state, chCode);\n                        if (state === 0 /* Invalid */) {\n                            resetStateMachine = true;\n                        }\n                    }\n                    if (resetStateMachine) {\n                        state = 1 /* Start */;\n                        hasOpenParens = false;\n                        hasOpenSquareBracket = false;\n                        hasOpenCurlyBracket = false;\n                        // Record where the link started\n                        linkBeginIndex = j + 1;\n                        linkBeginChCode = chCode;\n                    }\n                    j++;\n                }\n                if (state === 13 /* Accept */) {\n                    result.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, len));\n                }\n            }\n            return result;\n        };\n        return LinkComputer;\n    }());\n    exports.LinkComputer = LinkComputer;\n    /**\n     * Returns an array of all links contains in the provided\n     * document. *Note* that this operation is computational\n     * expensive and should not run in the UI thread.\n     */\n    function computeLinks(model) {\n        if (!model || typeof model.getLineCount !== 'function' || typeof model.getLineContent !== 'function') {\n            // Unknown caller!\n            return [];\n        }\n        return LinkComputer.computeLinks(model);\n    }\n    exports.computeLinks = computeLinks;\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine(__m[26/*vs/editor/common/modes/supports/inplaceReplaceSupport*/], __M([0/*require*/,1/*exports*/]), function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    var BasicInplaceReplace = /** @class */ (function () {\n        function BasicInplaceReplace() {\n            this._defaultValueSet = [\n                ['true', 'false'],\n                ['True', 'False'],\n                ['Private', 'Public', 'Friend', 'ReadOnly', 'Partial', 'Protected', 'WriteOnly'],\n                ['public', 'protected', 'private'],\n            ];\n        }\n        BasicInplaceReplace.prototype.navigateValueSet = function (range1, text1, range2, text2, up) {\n            if (range1 && text1) {\n                var result = this.doNavigateValueSet(text1, up);\n                if (result) {\n                    return {\n                        range: range1,\n                        value: result\n                    };\n                }\n            }\n            if (range2 && text2) {\n                var result = this.doNavigateValueSet(text2, up);\n                if (result) {\n                    return {\n                        range: range2,\n                        value: result\n                    };\n                }\n            }\n            return null;\n        };\n        BasicInplaceReplace.prototype.doNavigateValueSet = function (text, up) {\n            var numberResult = this.numberReplace(text, up);\n            if (numberResult !== null) {\n                return numberResult;\n            }\n            return this.textReplace(text, up);\n        };\n        BasicInplaceReplace.prototype.numberReplace = function (value, up) {\n            var precision = Math.pow(10, value.length - (value.lastIndexOf('.') + 1));\n            var n1 = Number(value);\n            var n2 = parseFloat(value);\n            if (!isNaN(n1) && !isNaN(n2) && n1 === n2) {\n                if (n1 === 0 && !up) {\n                    return null; // don't do negative\n                    //\t\t\t} else if(n1 === 9 && up) {\n                    //\t\t\t\treturn null; // don't insert 10 into a number\n                }\n                else {\n                    n1 = Math.floor(n1 * precision);\n                    n1 += up ? precision : -precision;\n                    return String(n1 / precision);\n                }\n            }\n            return null;\n        };\n        BasicInplaceReplace.prototype.textReplace = function (value, up) {\n            return this.valueSetsReplace(this._defaultValueSet, value, up);\n        };\n        BasicInplaceReplace.prototype.valueSetsReplace = function (valueSets, value, up) {\n            var result = null;\n            for (var i = 0, len = valueSets.length; result === null && i < len; i++) {\n                result = this.valueSetReplace(valueSets[i], value, up);\n            }\n            return result;\n        };\n        BasicInplaceReplace.prototype.valueSetReplace = function (valueSet, value, up) {\n            var idx = valueSet.indexOf(value);\n            if (idx >= 0) {\n                idx += up ? +1 : -1;\n                if (idx < 0) {\n                    idx = valueSet.length - 1;\n                }\n                else {\n                    idx %= valueSet.length;\n                }\n                return valueSet[idx];\n            }\n            return null;\n        };\n        BasicInplaceReplace.INSTANCE = new BasicInplaceReplace();\n        return BasicInplaceReplace;\n    }());\n    exports.BasicInplaceReplace = BasicInplaceReplace;\n});\n","\"use strict\";\n/*!\nCopyright (c) 2014 Taylor Hakes\nCopyright (c) 2014 Forbes Lindesay\n */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory() :\n        typeof define === 'function' && define.amd ? define(\"vs/editor/common/standalone/promise-polyfill/polyfill\", factory) :\n            (factory());\n}(this, (function () {\n    'use strict';\n    /**\n     * @this {Promise}\n     */\n    function finallyConstructor(callback) {\n        var constructor = this.constructor;\n        return this.then(function (value) {\n            return constructor.resolve(callback()).then(function () {\n                return value;\n            });\n        }, function (reason) {\n            return constructor.resolve(callback()).then(function () {\n                return constructor.reject(reason);\n            });\n        });\n    }\n    // Store setTimeout reference so promise-polyfill will be unaffected by\n    // other code modifying setTimeout (like sinon.useFakeTimers())\n    var setTimeoutFunc = setTimeout;\n    function noop() { }\n    // Polyfill for Function.prototype.bind\n    function bind(fn, thisArg) {\n        return function () {\n            fn.apply(thisArg, arguments);\n        };\n    }\n    /**\n     * @constructor\n     * @param {Function} fn\n     */\n    function Promise(fn) {\n        if (!(this instanceof Promise))\n            throw new TypeError('Promises must be constructed via new');\n        if (typeof fn !== 'function')\n            throw new TypeError('not a function');\n        /** @type {!number} */\n        this._state = 0;\n        /** @type {!boolean} */\n        this._handled = false;\n        /** @type {Promise|undefined} */\n        this._value = undefined;\n        /** @type {!Array<!Function>} */\n        this._deferreds = [];\n        doResolve(fn, this);\n    }\n    function handle(self, deferred) {\n        while (self._state === 3) {\n            self = self._value;\n        }\n        if (self._state === 0) {\n            self._deferreds.push(deferred);\n            return;\n        }\n        self._handled = true;\n        Promise._immediateFn(function () {\n            var cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\n            if (cb === null) {\n                (self._state === 1 ? resolve : reject)(deferred.promise, self._value);\n                return;\n            }\n            var ret;\n            try {\n                ret = cb(self._value);\n            }\n            catch (e) {\n                reject(deferred.promise, e);\n                return;\n            }\n            resolve(deferred.promise, ret);\n        });\n    }\n    function resolve(self, newValue) {\n        try {\n            // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n            if (newValue === self)\n                throw new TypeError('A promise cannot be resolved with itself.');\n            if (newValue &&\n                (typeof newValue === 'object' || typeof newValue === 'function')) {\n                var then = newValue.then;\n                if (newValue instanceof Promise) {\n                    self._state = 3;\n                    self._value = newValue;\n                    finale(self);\n                    return;\n                }\n                else if (typeof then === 'function') {\n                    doResolve(bind(then, newValue), self);\n                    return;\n                }\n            }\n            self._state = 1;\n            self._value = newValue;\n            finale(self);\n        }\n        catch (e) {\n            reject(self, e);\n        }\n    }\n    function reject(self, newValue) {\n        self._state = 2;\n        self._value = newValue;\n        finale(self);\n    }\n    function finale(self) {\n        if (self._state === 2 && self._deferreds.length === 0) {\n            Promise._immediateFn(function () {\n                if (!self._handled) {\n                    Promise._unhandledRejectionFn(self._value);\n                }\n            });\n        }\n        for (var i = 0, len = self._deferreds.length; i < len; i++) {\n            handle(self, self._deferreds[i]);\n        }\n        self._deferreds = null;\n    }\n    /**\n     * @constructor\n     */\n    function Handler(onFulfilled, onRejected, promise) {\n        this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n        this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n        this.promise = promise;\n    }\n    /**\n     * Take a potentially misbehaving resolver function and make sure\n     * onFulfilled and onRejected are only called once.\n     *\n     * Makes no guarantees about asynchrony.\n     */\n    function doResolve(fn, self) {\n        var done = false;\n        try {\n            fn(function (value) {\n                if (done)\n                    return;\n                done = true;\n                resolve(self, value);\n            }, function (reason) {\n                if (done)\n                    return;\n                done = true;\n                reject(self, reason);\n            });\n        }\n        catch (ex) {\n            if (done)\n                return;\n            done = true;\n            reject(self, ex);\n        }\n    }\n    Promise.prototype['catch'] = function (onRejected) {\n        return this.then(null, onRejected);\n    };\n    Promise.prototype.then = function (onFulfilled, onRejected) {\n        // @ts-ignore\n        var prom = new this.constructor(noop);\n        handle(this, new Handler(onFulfilled, onRejected, prom));\n        return prom;\n    };\n    Promise.prototype['finally'] = finallyConstructor;\n    Promise.all = function (arr) {\n        return new Promise(function (resolve, reject) {\n            if (!arr || typeof arr.length === 'undefined')\n                throw new TypeError('Promise.all accepts an array');\n            var args = Array.prototype.slice.call(arr);\n            if (args.length === 0)\n                return resolve([]);\n            var remaining = args.length;\n            function res(i, val) {\n                try {\n                    if (val && (typeof val === 'object' || typeof val === 'function')) {\n                        var then = val.then;\n                        if (typeof then === 'function') {\n                            then.call(val, function (val) {\n                                res(i, val);\n                            }, reject);\n                            return;\n                        }\n                    }\n                    args[i] = val;\n                    if (--remaining === 0) {\n                        resolve(args);\n                    }\n                }\n                catch (ex) {\n                    reject(ex);\n                }\n            }\n            for (var i = 0; i < args.length; i++) {\n                res(i, args[i]);\n            }\n        });\n    };\n    Promise.resolve = function (value) {\n        if (value && typeof value === 'object' && value.constructor === Promise) {\n            return value;\n        }\n        return new Promise(function (resolve) {\n            resolve(value);\n        });\n    };\n    Promise.reject = function (value) {\n        return new Promise(function (resolve, reject) {\n            reject(value);\n        });\n    };\n    Promise.race = function (values) {\n        return new Promise(function (resolve, reject) {\n            for (var i = 0, len = values.length; i < len; i++) {\n                values[i].then(resolve, reject);\n            }\n        });\n    };\n    // Use polyfill for setImmediate for performance gains\n    Promise._immediateFn =\n        (typeof setImmediate === 'function' &&\n            function (fn) {\n                setImmediate(fn);\n            }) ||\n            function (fn) {\n                setTimeoutFunc(fn, 0);\n            };\n    Promise._unhandledRejectionFn = function _unhandledRejectionFn(err) {\n        if (typeof console !== 'undefined' && console) {\n            console.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console\n        }\n    };\n    /** @suppress {undefinedVars} */\n    var globalNS = (function () {\n        // the only reliable means to get the global object is\n        // `Function('return this')()`\n        // However, this causes CSP violations in Chrome apps.\n        if (typeof self !== 'undefined') {\n            return self;\n        }\n        if (typeof window !== 'undefined') {\n            return window;\n        }\n        if (typeof global !== 'undefined') {\n            return global;\n        }\n        throw new Error('unable to locate global object');\n    })();\n    if (!('Promise' in globalNS)) {\n        globalNS['Promise'] = Promise;\n    }\n    else if (!globalNS.Promise.prototype['finally']) {\n        globalNS.Promise.prototype['finally'] = finallyConstructor;\n    }\n})));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine(__m[27/*vs/editor/common/standalone/standaloneEnums*/], __M([0/*require*/,1/*exports*/]), function (require, exports) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    // THIS IS A GENERATED FILE. DO NOT EDIT DIRECTLY.\n    var MarkerTag;\n    (function (MarkerTag) {\n        MarkerTag[MarkerTag[\"Unnecessary\"] = 1] = \"Unnecessary\";\n    })(MarkerTag = exports.MarkerTag || (exports.MarkerTag = {}));\n    var MarkerSeverity;\n    (function (MarkerSeverity) {\n        MarkerSeverity[MarkerSeverity[\"Hint\"] = 1] = \"Hint\";\n        MarkerSeverity[MarkerSeverity[\"Info\"] = 2] = \"Info\";\n        MarkerSeverity[MarkerSeverity[\"Warning\"] = 4] = \"Warning\";\n        MarkerSeverity[MarkerSeverity[\"Error\"] = 8] = \"Error\";\n    })(MarkerSeverity = exports.MarkerSeverity || (exports.MarkerSeverity = {}));\n    /**\n     * Virtual Key Codes, the value does not hold any inherent meaning.\n     * Inspired somewhat from https://msdn.microsoft.com/en-us/library/windows/desktop/dd375731(v=vs.85).aspx\n     * But these are \"more general\", as they should work across browsers & OS`s.\n     */\n    var KeyCode;\n    (function (KeyCode) {\n        /**\n         * Placed first to cover the 0 value of the enum.\n         */\n        KeyCode[KeyCode[\"Unknown\"] = 0] = \"Unknown\";\n        KeyCode[KeyCode[\"Backspace\"] = 1] = \"Backspace\";\n        KeyCode[KeyCode[\"Tab\"] = 2] = \"Tab\";\n        KeyCode[KeyCode[\"Enter\"] = 3] = \"Enter\";\n        KeyCode[KeyCode[\"Shift\"] = 4] = \"Shift\";\n        KeyCode[KeyCode[\"Ctrl\"] = 5] = \"Ctrl\";\n        KeyCode[KeyCode[\"Alt\"] = 6] = \"Alt\";\n        KeyCode[KeyCode[\"PauseBreak\"] = 7] = \"PauseBreak\";\n        KeyCode[KeyCode[\"CapsLock\"] = 8] = \"CapsLock\";\n        KeyCode[KeyCode[\"Escape\"] = 9] = \"Escape\";\n        KeyCode[KeyCode[\"Space\"] = 10] = \"Space\";\n        KeyCode[KeyCode[\"PageUp\"] = 11] = \"PageUp\";\n        KeyCode[KeyCode[\"PageDown\"] = 12] = \"PageDown\";\n        KeyCode[KeyCode[\"End\"] = 13] = \"End\";\n        KeyCode[KeyCode[\"Home\"] = 14] = \"Home\";\n        KeyCode[KeyCode[\"LeftArrow\"] = 15] = \"LeftArrow\";\n        KeyCode[KeyCode[\"UpArrow\"] = 16] = \"UpArrow\";\n        KeyCode[KeyCode[\"RightArrow\"] = 17] = \"RightArrow\";\n        KeyCode[KeyCode[\"DownArrow\"] = 18] = \"DownArrow\";\n        KeyCode[KeyCode[\"Insert\"] = 19] = \"Insert\";\n        KeyCode[KeyCode[\"Delete\"] = 20] = \"Delete\";\n        KeyCode[KeyCode[\"KEY_0\"] = 21] = \"KEY_0\";\n        KeyCode[KeyCode[\"KEY_1\"] = 22] = \"KEY_1\";\n        KeyCode[KeyCode[\"KEY_2\"] = 23] = \"KEY_2\";\n        KeyCode[KeyCode[\"KEY_3\"] = 24] = \"KEY_3\";\n        KeyCode[KeyCode[\"KEY_4\"] = 25] = \"KEY_4\";\n        KeyCode[KeyCode[\"KEY_5\"] = 26] = \"KEY_5\";\n        KeyCode[KeyCode[\"KEY_6\"] = 27] = \"KEY_6\";\n        KeyCode[KeyCode[\"KEY_7\"] = 28] = \"KEY_7\";\n        KeyCode[KeyCode[\"KEY_8\"] = 29] = \"KEY_8\";\n        KeyCode[KeyCode[\"KEY_9\"] = 30] = \"KEY_9\";\n        KeyCode[KeyCode[\"KEY_A\"] = 31] = \"KEY_A\";\n        KeyCode[KeyCode[\"KEY_B\"] = 32] = \"KEY_B\";\n        KeyCode[KeyCode[\"KEY_C\"] = 33] = \"KEY_C\";\n        KeyCode[KeyCode[\"KEY_D\"] = 34] = \"KEY_D\";\n        KeyCode[KeyCode[\"KEY_E\"] = 35] = \"KEY_E\";\n        KeyCode[KeyCode[\"KEY_F\"] = 36] = \"KEY_F\";\n        KeyCode[KeyCode[\"KEY_G\"] = 37] = \"KEY_G\";\n        KeyCode[KeyCode[\"KEY_H\"] = 38] = \"KEY_H\";\n        KeyCode[KeyCode[\"KEY_I\"] = 39] = \"KEY_I\";\n        KeyCode[KeyCode[\"KEY_J\"] = 40] = \"KEY_J\";\n        KeyCode[KeyCode[\"KEY_K\"] = 41] = \"KEY_K\";\n        KeyCode[KeyCode[\"KEY_L\"] = 42] = \"KEY_L\";\n        KeyCode[KeyCode[\"KEY_M\"] = 43] = \"KEY_M\";\n        KeyCode[KeyCode[\"KEY_N\"] = 44] = \"KEY_N\";\n        KeyCode[KeyCode[\"KEY_O\"] = 45] = \"KEY_O\";\n        KeyCode[KeyCode[\"KEY_P\"] = 46] = \"KEY_P\";\n        KeyCode[KeyCode[\"KEY_Q\"] = 47] = \"KEY_Q\";\n        KeyCode[KeyCode[\"KEY_R\"] = 48] = \"KEY_R\";\n        KeyCode[KeyCode[\"KEY_S\"] = 49] = \"KEY_S\";\n        KeyCode[KeyCode[\"KEY_T\"] = 50] = \"KEY_T\";\n        KeyCode[KeyCode[\"KEY_U\"] = 51] = \"KEY_U\";\n        KeyCode[KeyCode[\"KEY_V\"] = 52] = \"KEY_V\";\n        KeyCode[KeyCode[\"KEY_W\"] = 53] = \"KEY_W\";\n        KeyCode[KeyCode[\"KEY_X\"] = 54] = \"KEY_X\";\n        KeyCode[KeyCode[\"KEY_Y\"] = 55] = \"KEY_Y\";\n        KeyCode[KeyCode[\"KEY_Z\"] = 56] = \"KEY_Z\";\n        KeyCode[KeyCode[\"Meta\"] = 57] = \"Meta\";\n        KeyCode[KeyCode[\"ContextMenu\"] = 58] = \"ContextMenu\";\n        KeyCode[KeyCode[\"F1\"] = 59] = \"F1\";\n        KeyCode[KeyCode[\"F2\"] = 60] = \"F2\";\n        KeyCode[KeyCode[\"F3\"] = 61] = \"F3\";\n        KeyCode[KeyCode[\"F4\"] = 62] = \"F4\";\n        KeyCode[KeyCode[\"F5\"] = 63] = \"F5\";\n        KeyCode[KeyCode[\"F6\"] = 64] = \"F6\";\n        KeyCode[KeyCode[\"F7\"] = 65] = \"F7\";\n        KeyCode[KeyCode[\"F8\"] = 66] = \"F8\";\n        KeyCode[KeyCode[\"F9\"] = 67] = \"F9\";\n        KeyCode[KeyCode[\"F10\"] = 68] = \"F10\";\n        KeyCode[KeyCode[\"F11\"] = 69] = \"F11\";\n        KeyCode[KeyCode[\"F12\"] = 70] = \"F12\";\n        KeyCode[KeyCode[\"F13\"] = 71] = \"F13\";\n        KeyCode[KeyCode[\"F14\"] = 72] = \"F14\";\n        KeyCode[KeyCode[\"F15\"] = 73] = \"F15\";\n        KeyCode[KeyCode[\"F16\"] = 74] = \"F16\";\n        KeyCode[KeyCode[\"F17\"] = 75] = \"F17\";\n        KeyCode[KeyCode[\"F18\"] = 76] = \"F18\";\n        KeyCode[KeyCode[\"F19\"] = 77] = \"F19\";\n        KeyCode[KeyCode[\"NumLock\"] = 78] = \"NumLock\";\n        KeyCode[KeyCode[\"ScrollLock\"] = 79] = \"ScrollLock\";\n        /**\n         * Used for miscellaneous characters; it can vary by keyboard.\n         * For the US standard keyboard, the ';:' key\n         */\n        KeyCode[KeyCode[\"US_SEMICOLON\"] = 80] = \"US_SEMICOLON\";\n        /**\n         * For any country/region, the '+' key\n         * For the US standard keyboard, the '=+' key\n         */\n        KeyCode[KeyCode[\"US_EQUAL\"] = 81] = \"US_EQUAL\";\n        /**\n         * For any country/region, the ',' key\n         * For the US standard keyboard, the ',<' key\n         */\n        KeyCode[KeyCode[\"US_COMMA\"] = 82] = \"US_COMMA\";\n        /**\n         * For any country/region, the '-' key\n         * For the US standard keyboard, the '-_' key\n         */\n        KeyCode[KeyCode[\"US_MINUS\"] = 83] = \"US_MINUS\";\n        /**\n         * For any country/region, the '.' key\n         * For the US standard keyboard, the '.>' key\n         */\n        KeyCode[KeyCode[\"US_DOT\"] = 84] = \"US_DOT\";\n        /**\n         * Used for miscellaneous characters; it can vary by keyboard.\n         * For the US standard keyboard, the '/?' key\n         */\n        KeyCode[KeyCode[\"US_SLASH\"] = 85] = \"US_SLASH\";\n        /**\n         * Used for miscellaneous characters; it can vary by keyboard.\n         * For the US standard keyboard, the '`~' key\n         */\n        KeyCode[KeyCode[\"US_BACKTICK\"] = 86] = \"US_BACKTICK\";\n        /**\n         * Used for miscellaneous characters; it can vary by keyboard.\n         * For the US standard keyboard, the '[{' key\n         */\n        KeyCode[KeyCode[\"US_OPEN_SQUARE_BRACKET\"] = 87] = \"US_OPEN_SQUARE_BRACKET\";\n        /**\n         * Used for miscellaneous characters; it can vary by keyboard.\n         * For the US standard keyboard, the '\\|' key\n         */\n        KeyCode[KeyCode[\"US_BACKSLASH\"] = 88] = \"US_BACKSLASH\";\n        /**\n         * Used for miscellaneous characters; it can vary by keyboard.\n         * For the US standard keyboard, the ']}' key\n         */\n        KeyCode[KeyCode[\"US_CLOSE_SQUARE_BRACKET\"] = 89] = \"US_CLOSE_SQUARE_BRACKET\";\n        /**\n         * Used for miscellaneous characters; it can vary by keyboard.\n         * For the US standard keyboard, the ''\"' key\n         */\n        KeyCode[KeyCode[\"US_QUOTE\"] = 90] = \"US_QUOTE\";\n        /**\n         * Used for miscellaneous characters; it can vary by keyboard.\n         */\n        KeyCode[KeyCode[\"OEM_8\"] = 91] = \"OEM_8\";\n        /**\n         * Either the angle bracket key or the backslash key on the RT 102-key keyboard.\n         */\n        KeyCode[KeyCode[\"OEM_102\"] = 92] = \"OEM_102\";\n        KeyCode[KeyCode[\"NUMPAD_0\"] = 93] = \"NUMPAD_0\";\n        KeyCode[KeyCode[\"NUMPAD_1\"] = 94] = \"NUMPAD_1\";\n        KeyCode[KeyCode[\"NUMPAD_2\"] = 95] = \"NUMPAD_2\";\n        KeyCode[KeyCode[\"NUMPAD_3\"] = 96] = \"NUMPAD_3\";\n        KeyCode[KeyCode[\"NUMPAD_4\"] = 97] = \"NUMPAD_4\";\n        KeyCode[KeyCode[\"NUMPAD_5\"] = 98] = \"NUMPAD_5\";\n        KeyCode[KeyCode[\"NUMPAD_6\"] = 99] = \"NUMPAD_6\";\n        KeyCode[KeyCode[\"NUMPAD_7\"] = 100] = \"NUMPAD_7\";\n        KeyCode[KeyCode[\"NUMPAD_8\"] = 101] = \"NUMPAD_8\";\n        KeyCode[KeyCode[\"NUMPAD_9\"] = 102] = \"NUMPAD_9\";\n        KeyCode[KeyCode[\"NUMPAD_MULTIPLY\"] = 103] = \"NUMPAD_MULTIPLY\";\n        KeyCode[KeyCode[\"NUMPAD_ADD\"] = 104] = \"NUMPAD_ADD\";\n        KeyCode[KeyCode[\"NUMPAD_SEPARATOR\"] = 105] = \"NUMPAD_SEPARATOR\";\n        KeyCode[KeyCode[\"NUMPAD_SUBTRACT\"] = 106] = \"NUMPAD_SUBTRACT\";\n        KeyCode[KeyCode[\"NUMPAD_DECIMAL\"] = 107] = \"NUMPAD_DECIMAL\";\n        KeyCode[KeyCode[\"NUMPAD_DIVIDE\"] = 108] = \"NUMPAD_DIVIDE\";\n        /**\n         * Cover all key codes when IME is processing input.\n         */\n        KeyCode[KeyCode[\"KEY_IN_COMPOSITION\"] = 109] = \"KEY_IN_COMPOSITION\";\n        KeyCode[KeyCode[\"ABNT_C1\"] = 110] = \"ABNT_C1\";\n        KeyCode[KeyCode[\"ABNT_C2\"] = 111] = \"ABNT_C2\";\n        /**\n         * Placed last to cover the length of the enum.\n         * Please do not depend on this value!\n         */\n        KeyCode[KeyCode[\"MAX_VALUE\"] = 112] = \"MAX_VALUE\";\n    })(KeyCode = exports.KeyCode || (exports.KeyCode = {}));\n    /**\n     * The direction of a selection.\n     */\n    var SelectionDirection;\n    (function (SelectionDirection) {\n        /**\n         * The selection starts above where it ends.\n         */\n        SelectionDirection[SelectionDirection[\"LTR\"] = 0] = \"LTR\";\n        /**\n         * The selection starts below where it ends.\n         */\n        SelectionDirection[SelectionDirection[\"RTL\"] = 1] = \"RTL\";\n    })(SelectionDirection = exports.SelectionDirection || (exports.SelectionDirection = {}));\n    var ScrollbarVisibility;\n    (function (ScrollbarVisibility) {\n        ScrollbarVisibility[ScrollbarVisibility[\"Auto\"] = 1] = \"Auto\";\n        ScrollbarVisibility[ScrollbarVisibility[\"Hidden\"] = 2] = \"Hidden\";\n        ScrollbarVisibility[ScrollbarVisibility[\"Visible\"] = 3] = \"Visible\";\n    })(ScrollbarVisibility = exports.ScrollbarVisibility || (exports.ScrollbarVisibility = {}));\n    /**\n     * Vertical Lane in the overview ruler of the editor.\n     */\n    var OverviewRulerLane;\n    (function (OverviewRulerLane) {\n        OverviewRulerLane[OverviewRulerLane[\"Left\"] = 1] = \"Left\";\n        OverviewRulerLane[OverviewRulerLane[\"Center\"] = 2] = \"Center\";\n        OverviewRulerLane[OverviewRulerLane[\"Right\"] = 4] = \"Right\";\n        OverviewRulerLane[OverviewRulerLane[\"Full\"] = 7] = \"Full\";\n    })(OverviewRulerLane = exports.OverviewRulerLane || (exports.OverviewRulerLane = {}));\n    /**\n     * End of line character preference.\n     */\n    var EndOfLinePreference;\n    (function (EndOfLinePreference) {\n        /**\n         * Use the end of line character identified in the text buffer.\n         */\n        EndOfLinePreference[EndOfLinePreference[\"TextDefined\"] = 0] = \"TextDefined\";\n        /**\n         * Use line feed (\\n) as the end of line character.\n         */\n        EndOfLinePreference[EndOfLinePreference[\"LF\"] = 1] = \"LF\";\n        /**\n         * Use carriage return and line feed (\\r\\n) as the end of line character.\n         */\n        EndOfLinePreference[EndOfLinePreference[\"CRLF\"] = 2] = \"CRLF\";\n    })(EndOfLinePreference = exports.EndOfLinePreference || (exports.EndOfLinePreference = {}));\n    /**\n     * The default end of line to use when instantiating models.\n     */\n    var DefaultEndOfLine;\n    (function (DefaultEndOfLine) {\n        /**\n         * Use line feed (\\n) as the end of line character.\n         */\n        DefaultEndOfLine[DefaultEndOfLine[\"LF\"] = 1] = \"LF\";\n        /**\n         * Use carriage return and line feed (\\r\\n) as the end of line character.\n         */\n        DefaultEndOfLine[DefaultEndOfLine[\"CRLF\"] = 2] = \"CRLF\";\n    })(DefaultEndOfLine = exports.DefaultEndOfLine || (exports.DefaultEndOfLine = {}));\n    /**\n     * End of line character preference.\n     */\n    var EndOfLineSequence;\n    (function (EndOfLineSequence) {\n        /**\n         * Use line feed (\\n) as the end of line character.\n         */\n        EndOfLineSequence[EndOfLineSequence[\"LF\"] = 0] = \"LF\";\n        /**\n         * Use carriage return and line feed (\\r\\n) as the end of line character.\n         */\n        EndOfLineSequence[EndOfLineSequence[\"CRLF\"] = 1] = \"CRLF\";\n    })(EndOfLineSequence = exports.EndOfLineSequence || (exports.EndOfLineSequence = {}));\n    /**\n     * Describes the behavior of decorations when typing/editing near their edges.\n     * Note: Please do not edit the values, as they very carefully match `DecorationRangeBehavior`\n     */\n    var TrackedRangeStickiness;\n    (function (TrackedRangeStickiness) {\n        TrackedRangeStickiness[TrackedRangeStickiness[\"AlwaysGrowsWhenTypingAtEdges\"] = 0] = \"AlwaysGrowsWhenTypingAtEdges\";\n        TrackedRangeStickiness[TrackedRangeStickiness[\"NeverGrowsWhenTypingAtEdges\"] = 1] = \"NeverGrowsWhenTypingAtEdges\";\n        TrackedRangeStickiness[TrackedRangeStickiness[\"GrowsOnlyWhenTypingBefore\"] = 2] = \"GrowsOnlyWhenTypingBefore\";\n        TrackedRangeStickiness[TrackedRangeStickiness[\"GrowsOnlyWhenTypingAfter\"] = 3] = \"GrowsOnlyWhenTypingAfter\";\n    })(TrackedRangeStickiness = exports.TrackedRangeStickiness || (exports.TrackedRangeStickiness = {}));\n    var ScrollType;\n    (function (ScrollType) {\n        ScrollType[ScrollType[\"Smooth\"] = 0] = \"Smooth\";\n        ScrollType[ScrollType[\"Immediate\"] = 1] = \"Immediate\";\n    })(ScrollType = exports.ScrollType || (exports.ScrollType = {}));\n    /**\n     * Describes the reason the cursor has changed its position.\n     */\n    var CursorChangeReason;\n    (function (CursorChangeReason) {\n        /**\n         * Unknown or not set.\n         */\n        CursorChangeReason[CursorChangeReason[\"NotSet\"] = 0] = \"NotSet\";\n        /**\n         * A `model.setValue()` was called.\n         */\n        CursorChangeReason[CursorChangeReason[\"ContentFlush\"] = 1] = \"ContentFlush\";\n        /**\n         * The `model` has been changed outside of this cursor and the cursor recovers its position from associated markers.\n         */\n        CursorChangeReason[CursorChangeReason[\"RecoverFromMarkers\"] = 2] = \"RecoverFromMarkers\";\n        /**\n         * There was an explicit user gesture.\n         */\n        CursorChangeReason[CursorChangeReason[\"Explicit\"] = 3] = \"Explicit\";\n        /**\n         * There was a Paste.\n         */\n        CursorChangeReason[CursorChangeReason[\"Paste\"] = 4] = \"Paste\";\n        /**\n         * There was an Undo.\n         */\n        CursorChangeReason[CursorChangeReason[\"Undo\"] = 5] = \"Undo\";\n        /**\n         * There was a Redo.\n         */\n        CursorChangeReason[CursorChangeReason[\"Redo\"] = 6] = \"Redo\";\n    })(CursorChangeReason = exports.CursorChangeReason || (exports.CursorChangeReason = {}));\n    var RenderMinimap;\n    (function (RenderMinimap) {\n        RenderMinimap[RenderMinimap[\"None\"] = 0] = \"None\";\n        RenderMinimap[RenderMinimap[\"Small\"] = 1] = \"Small\";\n        RenderMinimap[RenderMinimap[\"Large\"] = 2] = \"Large\";\n        RenderMinimap[RenderMinimap[\"SmallBlocks\"] = 3] = \"SmallBlocks\";\n        RenderMinimap[RenderMinimap[\"LargeBlocks\"] = 4] = \"LargeBlocks\";\n    })(RenderMinimap = exports.RenderMinimap || (exports.RenderMinimap = {}));\n    /**\n     * Describes how to indent wrapped lines.\n     */\n    var WrappingIndent;\n    (function (WrappingIndent) {\n        /**\n         * No indentation => wrapped lines begin at column 1.\n         */\n        WrappingIndent[WrappingIndent[\"None\"] = 0] = \"None\";\n        /**\n         * Same => wrapped lines get the same indentation as the parent.\n         */\n        WrappingIndent[WrappingIndent[\"Same\"] = 1] = \"Same\";\n        /**\n         * Indent => wrapped lines get +1 indentation toward the parent.\n         */\n        WrappingIndent[WrappingIndent[\"Indent\"] = 2] = \"Indent\";\n        /**\n         * DeepIndent => wrapped lines get +2 indentation toward the parent.\n         */\n        WrappingIndent[WrappingIndent[\"DeepIndent\"] = 3] = \"DeepIndent\";\n    })(WrappingIndent = exports.WrappingIndent || (exports.WrappingIndent = {}));\n    /**\n     * The kind of animation in which the editor's cursor should be rendered.\n     */\n    var TextEditorCursorBlinkingStyle;\n    (function (TextEditorCursorBlinkingStyle) {\n        /**\n         * Hidden\n         */\n        TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Hidden\"] = 0] = \"Hidden\";\n        /**\n         * Blinking\n         */\n        TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Blink\"] = 1] = \"Blink\";\n        /**\n         * Blinking with smooth fading\n         */\n        TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Smooth\"] = 2] = \"Smooth\";\n        /**\n         * Blinking with prolonged filled state and smooth fading\n         */\n        TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Phase\"] = 3] = \"Phase\";\n        /**\n         * Expand collapse animation on the y axis\n         */\n        TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Expand\"] = 4] = \"Expand\";\n        /**\n         * No-Blinking\n         */\n        TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Solid\"] = 5] = \"Solid\";\n    })(TextEditorCursorBlinkingStyle = exports.TextEditorCursorBlinkingStyle || (exports.TextEditorCursorBlinkingStyle = {}));\n    /**\n     * The style in which the editor's cursor should be rendered.\n     */\n    var TextEditorCursorStyle;\n    (function (TextEditorCursorStyle) {\n        /**\n         * As a vertical line (sitting between two characters).\n         */\n        TextEditorCursorStyle[TextEditorCursorStyle[\"Line\"] = 1] = \"Line\";\n        /**\n         * As a block (sitting on top of a character).\n         */\n        TextEditorCursorStyle[TextEditorCursorStyle[\"Block\"] = 2] = \"Block\";\n        /**\n         * As a horizontal line (sitting under a character).\n         */\n        TextEditorCursorStyle[TextEditorCursorStyle[\"Underline\"] = 3] = \"Underline\";\n        /**\n         * As a thin vertical line (sitting between two characters).\n         */\n        TextEditorCursorStyle[TextEditorCursorStyle[\"LineThin\"] = 4] = \"LineThin\";\n        /**\n         * As an outlined block (sitting on top of a character).\n         */\n        TextEditorCursorStyle[TextEditorCursorStyle[\"BlockOutline\"] = 5] = \"BlockOutline\";\n        /**\n         * As a thin horizontal line (sitting under a character).\n         */\n        TextEditorCursorStyle[TextEditorCursorStyle[\"UnderlineThin\"] = 6] = \"UnderlineThin\";\n    })(TextEditorCursorStyle = exports.TextEditorCursorStyle || (exports.TextEditorCursorStyle = {}));\n    var RenderLineNumbersType;\n    (function (RenderLineNumbersType) {\n        RenderLineNumbersType[RenderLineNumbersType[\"Off\"] = 0] = \"Off\";\n        RenderLineNumbersType[RenderLineNumbersType[\"On\"] = 1] = \"On\";\n        RenderLineNumbersType[RenderLineNumbersType[\"Relative\"] = 2] = \"Relative\";\n        RenderLineNumbersType[RenderLineNumbersType[\"Interval\"] = 3] = \"Interval\";\n        RenderLineNumbersType[RenderLineNumbersType[\"Custom\"] = 4] = \"Custom\";\n    })(RenderLineNumbersType = exports.RenderLineNumbersType || (exports.RenderLineNumbersType = {}));\n    /**\n     * A positioning preference for rendering content widgets.\n     */\n    var ContentWidgetPositionPreference;\n    (function (ContentWidgetPositionPreference) {\n        /**\n         * Place the content widget exactly at a position\n         */\n        ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"EXACT\"] = 0] = \"EXACT\";\n        /**\n         * Place the content widget above a position\n         */\n        ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"ABOVE\"] = 1] = \"ABOVE\";\n        /**\n         * Place the content widget below a position\n         */\n        ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"BELOW\"] = 2] = \"BELOW\";\n    })(ContentWidgetPositionPreference = exports.ContentWidgetPositionPreference || (exports.ContentWidgetPositionPreference = {}));\n    /**\n     * A positioning preference for rendering overlay widgets.\n     */\n    var OverlayWidgetPositionPreference;\n    (function (OverlayWidgetPositionPreference) {\n        /**\n         * Position the overlay widget in the top right corner\n         */\n        OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"TOP_RIGHT_CORNER\"] = 0] = \"TOP_RIGHT_CORNER\";\n        /**\n         * Position the overlay widget in the bottom right corner\n         */\n        OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"BOTTOM_RIGHT_CORNER\"] = 1] = \"BOTTOM_RIGHT_CORNER\";\n        /**\n         * Position the overlay widget in the top center\n         */\n        OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"TOP_CENTER\"] = 2] = \"TOP_CENTER\";\n    })(OverlayWidgetPositionPreference = exports.OverlayWidgetPositionPreference || (exports.OverlayWidgetPositionPreference = {}));\n    /**\n     * Type of hit element with the mouse in the editor.\n     */\n    var MouseTargetType;\n    (function (MouseTargetType) {\n        /**\n         * Mouse is on top of an unknown element.\n         */\n        MouseTargetType[MouseTargetType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n        /**\n         * Mouse is on top of the textarea used for input.\n         */\n        MouseTargetType[MouseTargetType[\"TEXTAREA\"] = 1] = \"TEXTAREA\";\n        /**\n         * Mouse is on top of the glyph margin\n         */\n        MouseTargetType[MouseTargetType[\"GUTTER_GLYPH_MARGIN\"] = 2] = \"GUTTER_GLYPH_MARGIN\";\n        /**\n         * Mouse is on top of the line numbers\n         */\n        MouseTargetType[MouseTargetType[\"GUTTER_LINE_NUMBERS\"] = 3] = \"GUTTER_LINE_NUMBERS\";\n        /**\n         * Mouse is on top of the line decorations\n         */\n        MouseTargetType[MouseTargetType[\"GUTTER_LINE_DECORATIONS\"] = 4] = \"GUTTER_LINE_DECORATIONS\";\n        /**\n         * Mouse is on top of the whitespace left in the gutter by a view zone.\n         */\n        MouseTargetType[MouseTargetType[\"GUTTER_VIEW_ZONE\"] = 5] = \"GUTTER_VIEW_ZONE\";\n        /**\n         * Mouse is on top of text in the content.\n         */\n        MouseTargetType[MouseTargetType[\"CONTENT_TEXT\"] = 6] = \"CONTENT_TEXT\";\n        /**\n         * Mouse is on top of empty space in the content (e.g. after line text or below last line)\n         */\n        MouseTargetType[MouseTargetType[\"CONTENT_EMPTY\"] = 7] = \"CONTENT_EMPTY\";\n        /**\n         * Mouse is on top of a view zone in the content.\n         */\n        MouseTargetType[MouseTargetType[\"CONTENT_VIEW_ZONE\"] = 8] = \"CONTENT_VIEW_ZONE\";\n        /**\n         * Mouse is on top of a content widget.\n         */\n        MouseTargetType[MouseTargetType[\"CONTENT_WIDGET\"] = 9] = \"CONTENT_WIDGET\";\n        /**\n         * Mouse is on top of the decorations overview ruler.\n         */\n        MouseTargetType[MouseTargetType[\"OVERVIEW_RULER\"] = 10] = \"OVERVIEW_RULER\";\n        /**\n         * Mouse is on top of a scrollbar.\n         */\n        MouseTargetType[MouseTargetType[\"SCROLLBAR\"] = 11] = \"SCROLLBAR\";\n        /**\n         * Mouse is on top of an overlay widget.\n         */\n        MouseTargetType[MouseTargetType[\"OVERLAY_WIDGET\"] = 12] = \"OVERLAY_WIDGET\";\n        /**\n         * Mouse is outside of the editor.\n         */\n        MouseTargetType[MouseTargetType[\"OUTSIDE_EDITOR\"] = 13] = \"OUTSIDE_EDITOR\";\n    })(MouseTargetType = exports.MouseTargetType || (exports.MouseTargetType = {}));\n    /**\n     * Describes what to do with the indentation when pressing Enter.\n     */\n    var IndentAction;\n    (function (IndentAction) {\n        /**\n         * Insert new line and copy the previous line's indentation.\n         */\n        IndentAction[IndentAction[\"None\"] = 0] = \"None\";\n        /**\n         * Insert new line and indent once (relative to the previous line's indentation).\n         */\n        IndentAction[IndentAction[\"Indent\"] = 1] = \"Indent\";\n        /**\n         * Insert two new lines:\n         *  - the first one indented which will hold the cursor\n         *  - the second one at the same indentation level\n         */\n        IndentAction[IndentAction[\"IndentOutdent\"] = 2] = \"IndentOutdent\";\n        /**\n         * Insert new line and outdent once (relative to the previous line's indentation).\n         */\n        IndentAction[IndentAction[\"Outdent\"] = 3] = \"Outdent\";\n    })(IndentAction = exports.IndentAction || (exports.IndentAction = {}));\n    var CompletionItemKind;\n    (function (CompletionItemKind) {\n        CompletionItemKind[CompletionItemKind[\"Method\"] = 0] = \"Method\";\n        CompletionItemKind[CompletionItemKind[\"Function\"] = 1] = \"Function\";\n        CompletionItemKind[CompletionItemKind[\"Constructor\"] = 2] = \"Constructor\";\n        CompletionItemKind[CompletionItemKind[\"Field\"] = 3] = \"Field\";\n        CompletionItemKind[CompletionItemKind[\"Variable\"] = 4] = \"Variable\";\n        CompletionItemKind[CompletionItemKind[\"Class\"] = 5] = \"Class\";\n        CompletionItemKind[CompletionItemKind[\"Struct\"] = 6] = \"Struct\";\n        CompletionItemKind[CompletionItemKind[\"Interface\"] = 7] = \"Interface\";\n        CompletionItemKind[CompletionItemKind[\"Module\"] = 8] = \"Module\";\n        CompletionItemKind[CompletionItemKind[\"Property\"] = 9] = \"Property\";\n        CompletionItemKind[CompletionItemKind[\"Event\"] = 10] = \"Event\";\n        CompletionItemKind[CompletionItemKind[\"Operator\"] = 11] = \"Operator\";\n        CompletionItemKind[CompletionItemKind[\"Unit\"] = 12] = \"Unit\";\n        CompletionItemKind[CompletionItemKind[\"Value\"] = 13] = \"Value\";\n        CompletionItemKind[CompletionItemKind[\"Constant\"] = 14] = \"Constant\";\n        CompletionItemKind[CompletionItemKind[\"Enum\"] = 15] = \"Enum\";\n        CompletionItemKind[CompletionItemKind[\"EnumMember\"] = 16] = \"EnumMember\";\n        CompletionItemKind[CompletionItemKind[\"Keyword\"] = 17] = \"Keyword\";\n        CompletionItemKind[CompletionItemKind[\"Text\"] = 18] = \"Text\";\n        CompletionItemKind[CompletionItemKind[\"Color\"] = 19] = \"Color\";\n        CompletionItemKind[CompletionItemKind[\"File\"] = 20] = \"File\";\n        CompletionItemKind[CompletionItemKind[\"Reference\"] = 21] = \"Reference\";\n        CompletionItemKind[CompletionItemKind[\"Customcolor\"] = 22] = \"Customcolor\";\n        CompletionItemKind[CompletionItemKind[\"Folder\"] = 23] = \"Folder\";\n        CompletionItemKind[CompletionItemKind[\"TypeParameter\"] = 24] = \"TypeParameter\";\n        CompletionItemKind[CompletionItemKind[\"Snippet\"] = 25] = \"Snippet\";\n    })(CompletionItemKind = exports.CompletionItemKind || (exports.CompletionItemKind = {}));\n    var CompletionItemInsertTextRule;\n    (function (CompletionItemInsertTextRule) {\n        /**\n         * Adjust whitespace/indentation of multiline insert texts to\n         * match the current line indentation.\n         */\n        CompletionItemInsertTextRule[CompletionItemInsertTextRule[\"KeepWhitespace\"] = 1] = \"KeepWhitespace\";\n        /**\n         * `insertText` is a snippet.\n         */\n        CompletionItemInsertTextRule[CompletionItemInsertTextRule[\"InsertAsSnippet\"] = 4] = \"InsertAsSnippet\";\n    })(CompletionItemInsertTextRule = exports.CompletionItemInsertTextRule || (exports.CompletionItemInsertTextRule = {}));\n    /**\n     * How a suggest provider was triggered.\n     */\n    var CompletionTriggerKind;\n    (function (CompletionTriggerKind) {\n        CompletionTriggerKind[CompletionTriggerKind[\"Invoke\"] = 0] = \"Invoke\";\n        CompletionTriggerKind[CompletionTriggerKind[\"TriggerCharacter\"] = 1] = \"TriggerCharacter\";\n        CompletionTriggerKind[CompletionTriggerKind[\"TriggerForIncompleteCompletions\"] = 2] = \"TriggerForIncompleteCompletions\";\n    })(CompletionTriggerKind = exports.CompletionTriggerKind || (exports.CompletionTriggerKind = {}));\n    var SignatureHelpTriggerKind;\n    (function (SignatureHelpTriggerKind) {\n        SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"Invoke\"] = 1] = \"Invoke\";\n        SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"TriggerCharacter\"] = 2] = \"TriggerCharacter\";\n        SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"ContentChange\"] = 3] = \"ContentChange\";\n    })(SignatureHelpTriggerKind = exports.SignatureHelpTriggerKind || (exports.SignatureHelpTriggerKind = {}));\n    /**\n     * A document highlight kind.\n     */\n    var DocumentHighlightKind;\n    (function (DocumentHighlightKind) {\n        /**\n         * A textual occurrence.\n         */\n        DocumentHighlightKind[DocumentHighlightKind[\"Text\"] = 0] = \"Text\";\n        /**\n         * Read-access of a symbol, like reading a variable.\n         */\n        DocumentHighlightKind[DocumentHighlightKind[\"Read\"] = 1] = \"Read\";\n        /**\n         * Write-access of a symbol, like writing to a variable.\n         */\n        DocumentHighlightKind[DocumentHighlightKind[\"Write\"] = 2] = \"Write\";\n    })(DocumentHighlightKind = exports.DocumentHighlightKind || (exports.DocumentHighlightKind = {}));\n    /**\n     * A symbol kind.\n     */\n    var SymbolKind;\n    (function (SymbolKind) {\n        SymbolKind[SymbolKind[\"File\"] = 0] = \"File\";\n        SymbolKind[SymbolKind[\"Module\"] = 1] = \"Module\";\n        SymbolKind[SymbolKind[\"Namespace\"] = 2] = \"Namespace\";\n        SymbolKind[SymbolKind[\"Package\"] = 3] = \"Package\";\n        SymbolKind[SymbolKind[\"Class\"] = 4] = \"Class\";\n        SymbolKind[SymbolKind[\"Method\"] = 5] = \"Method\";\n        SymbolKind[SymbolKind[\"Property\"] = 6] = \"Property\";\n        SymbolKind[SymbolKind[\"Field\"] = 7] = \"Field\";\n        SymbolKind[SymbolKind[\"Constructor\"] = 8] = \"Constructor\";\n        SymbolKind[SymbolKind[\"Enum\"] = 9] = \"Enum\";\n        SymbolKind[SymbolKind[\"Interface\"] = 10] = \"Interface\";\n        SymbolKind[SymbolKind[\"Function\"] = 11] = \"Function\";\n        SymbolKind[SymbolKind[\"Variable\"] = 12] = \"Variable\";\n        SymbolKind[SymbolKind[\"Constant\"] = 13] = \"Constant\";\n        SymbolKind[SymbolKind[\"String\"] = 14] = \"String\";\n        SymbolKind[SymbolKind[\"Number\"] = 15] = \"Number\";\n        SymbolKind[SymbolKind[\"Boolean\"] = 16] = \"Boolean\";\n        SymbolKind[SymbolKind[\"Array\"] = 17] = \"Array\";\n        SymbolKind[SymbolKind[\"Object\"] = 18] = \"Object\";\n        SymbolKind[SymbolKind[\"Key\"] = 19] = \"Key\";\n        SymbolKind[SymbolKind[\"Null\"] = 20] = \"Null\";\n        SymbolKind[SymbolKind[\"EnumMember\"] = 21] = \"EnumMember\";\n        SymbolKind[SymbolKind[\"Struct\"] = 22] = \"Struct\";\n        SymbolKind[SymbolKind[\"Event\"] = 23] = \"Event\";\n        SymbolKind[SymbolKind[\"Operator\"] = 24] = \"Operator\";\n        SymbolKind[SymbolKind[\"TypeParameter\"] = 25] = \"TypeParameter\";\n    })(SymbolKind = exports.SymbolKind || (exports.SymbolKind = {}));\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine(__m[28/*vs/editor/common/standalone/standaloneBase*/], __M([0/*require*/,1/*exports*/,18/*vs/base/common/cancellation*/,9/*vs/base/common/event*/,14/*vs/base/common/keyCodes*/,12/*vs/base/common/uri*/,2/*vs/editor/common/core/position*/,6/*vs/editor/common/core/range*/,19/*vs/editor/common/core/selection*/,20/*vs/editor/common/core/token*/,27/*vs/editor/common/standalone/standaloneEnums*/,32/*vs/editor/common/standalone/promise-polyfill/polyfill*/]), function (require, exports, cancellation_1, event_1, keyCodes_1, uri_1, position_1, range_1, selection_1, token_1, standaloneEnums) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    var KeyMod = /** @class */ (function () {\n        function KeyMod() {\n        }\n        KeyMod.chord = function (firstPart, secondPart) {\n            return keyCodes_1.KeyChord(firstPart, secondPart);\n        };\n        KeyMod.CtrlCmd = 2048 /* CtrlCmd */;\n        KeyMod.Shift = 1024 /* Shift */;\n        KeyMod.Alt = 512 /* Alt */;\n        KeyMod.WinCtrl = 256 /* WinCtrl */;\n        return KeyMod;\n    }());\n    exports.KeyMod = KeyMod;\n    function createMonacoBaseAPI() {\n        return {\n            editor: undefined,\n            languages: undefined,\n            CancellationTokenSource: cancellation_1.CancellationTokenSource,\n            Emitter: event_1.Emitter,\n            KeyCode: standaloneEnums.KeyCode,\n            KeyMod: KeyMod,\n            Position: position_1.Position,\n            Range: range_1.Range,\n            Selection: selection_1.Selection,\n            SelectionDirection: standaloneEnums.SelectionDirection,\n            MarkerSeverity: standaloneEnums.MarkerSeverity,\n            MarkerTag: standaloneEnums.MarkerTag,\n            Uri: uri_1.URI,\n            Token: token_1.Token\n        };\n    }\n    exports.createMonacoBaseAPI = createMonacoBaseAPI;\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine(__m[29/*vs/editor/common/viewModel/prefixSumComputer*/], __M([0/*require*/,1/*exports*/,4/*vs/editor/common/core/uint*/]), function (require, exports, uint_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    var PrefixSumIndexOfResult = /** @class */ (function () {\n        function PrefixSumIndexOfResult(index, remainder) {\n            this.index = index;\n            this.remainder = remainder;\n        }\n        return PrefixSumIndexOfResult;\n    }());\n    exports.PrefixSumIndexOfResult = PrefixSumIndexOfResult;\n    var PrefixSumComputer = /** @class */ (function () {\n        function PrefixSumComputer(values) {\n            this.values = values;\n            this.prefixSum = new Uint32Array(values.length);\n            this.prefixSumValidIndex = new Int32Array(1);\n            this.prefixSumValidIndex[0] = -1;\n        }\n        PrefixSumComputer.prototype.getCount = function () {\n            return this.values.length;\n        };\n        PrefixSumComputer.prototype.insertValues = function (insertIndex, insertValues) {\n            insertIndex = uint_1.toUint32(insertIndex);\n            var oldValues = this.values;\n            var oldPrefixSum = this.prefixSum;\n            var insertValuesLen = insertValues.length;\n            if (insertValuesLen === 0) {\n                return false;\n            }\n            this.values = new Uint32Array(oldValues.length + insertValuesLen);\n            this.values.set(oldValues.subarray(0, insertIndex), 0);\n            this.values.set(oldValues.subarray(insertIndex), insertIndex + insertValuesLen);\n            this.values.set(insertValues, insertIndex);\n            if (insertIndex - 1 < this.prefixSumValidIndex[0]) {\n                this.prefixSumValidIndex[0] = insertIndex - 1;\n            }\n            this.prefixSum = new Uint32Array(this.values.length);\n            if (this.prefixSumValidIndex[0] >= 0) {\n                this.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n            }\n            return true;\n        };\n        PrefixSumComputer.prototype.changeValue = function (index, value) {\n            index = uint_1.toUint32(index);\n            value = uint_1.toUint32(value);\n            if (this.values[index] === value) {\n                return false;\n            }\n            this.values[index] = value;\n            if (index - 1 < this.prefixSumValidIndex[0]) {\n                this.prefixSumValidIndex[0] = index - 1;\n            }\n            return true;\n        };\n        PrefixSumComputer.prototype.removeValues = function (startIndex, cnt) {\n            startIndex = uint_1.toUint32(startIndex);\n            cnt = uint_1.toUint32(cnt);\n            var oldValues = this.values;\n            var oldPrefixSum = this.prefixSum;\n            if (startIndex >= oldValues.length) {\n                return false;\n            }\n            var maxCnt = oldValues.length - startIndex;\n            if (cnt >= maxCnt) {\n                cnt = maxCnt;\n            }\n            if (cnt === 0) {\n                return false;\n            }\n            this.values = new Uint32Array(oldValues.length - cnt);\n            this.values.set(oldValues.subarray(0, startIndex), 0);\n            this.values.set(oldValues.subarray(startIndex + cnt), startIndex);\n            this.prefixSum = new Uint32Array(this.values.length);\n            if (startIndex - 1 < this.prefixSumValidIndex[0]) {\n                this.prefixSumValidIndex[0] = startIndex - 1;\n            }\n            if (this.prefixSumValidIndex[0] >= 0) {\n                this.prefixSum.set(oldPrefixSum.subarray(0, this.prefixSumValidIndex[0] + 1));\n            }\n            return true;\n        };\n        PrefixSumComputer.prototype.getTotalValue = function () {\n            if (this.values.length === 0) {\n                return 0;\n            }\n            return this._getAccumulatedValue(this.values.length - 1);\n        };\n        PrefixSumComputer.prototype.getAccumulatedValue = function (index) {\n            if (index < 0) {\n                return 0;\n            }\n            index = uint_1.toUint32(index);\n            return this._getAccumulatedValue(index);\n        };\n        PrefixSumComputer.prototype._getAccumulatedValue = function (index) {\n            if (index <= this.prefixSumValidIndex[0]) {\n                return this.prefixSum[index];\n            }\n            var startIndex = this.prefixSumValidIndex[0] + 1;\n            if (startIndex === 0) {\n                this.prefixSum[0] = this.values[0];\n                startIndex++;\n            }\n            if (index >= this.values.length) {\n                index = this.values.length - 1;\n            }\n            for (var i = startIndex; i <= index; i++) {\n                this.prefixSum[i] = this.prefixSum[i - 1] + this.values[i];\n            }\n            this.prefixSumValidIndex[0] = Math.max(this.prefixSumValidIndex[0], index);\n            return this.prefixSum[index];\n        };\n        PrefixSumComputer.prototype.getIndexOf = function (accumulatedValue) {\n            accumulatedValue = Math.floor(accumulatedValue); //@perf\n            // Compute all sums (to get a fully valid prefixSum)\n            this.getTotalValue();\n            var low = 0;\n            var high = this.values.length - 1;\n            var mid = 0;\n            var midStop = 0;\n            var midStart = 0;\n            while (low <= high) {\n                mid = low + ((high - low) / 2) | 0;\n                midStop = this.prefixSum[mid];\n                midStart = midStop - this.values[mid];\n                if (accumulatedValue < midStart) {\n                    high = mid - 1;\n                }\n                else if (accumulatedValue >= midStop) {\n                    low = mid + 1;\n                }\n                else {\n                    break;\n                }\n            }\n            return new PrefixSumIndexOfResult(mid, accumulatedValue - midStart);\n        };\n        return PrefixSumComputer;\n    }());\n    exports.PrefixSumComputer = PrefixSumComputer;\n    var PrefixSumComputerWithCache = /** @class */ (function () {\n        function PrefixSumComputerWithCache(values) {\n            this._cacheAccumulatedValueStart = 0;\n            this._cache = null;\n            this._actual = new PrefixSumComputer(values);\n            this._bustCache();\n        }\n        PrefixSumComputerWithCache.prototype._bustCache = function () {\n            this._cacheAccumulatedValueStart = 0;\n            this._cache = null;\n        };\n        PrefixSumComputerWithCache.prototype.insertValues = function (insertIndex, insertValues) {\n            if (this._actual.insertValues(insertIndex, insertValues)) {\n                this._bustCache();\n            }\n        };\n        PrefixSumComputerWithCache.prototype.changeValue = function (index, value) {\n            if (this._actual.changeValue(index, value)) {\n                this._bustCache();\n            }\n        };\n        PrefixSumComputerWithCache.prototype.removeValues = function (startIndex, cnt) {\n            if (this._actual.removeValues(startIndex, cnt)) {\n                this._bustCache();\n            }\n        };\n        PrefixSumComputerWithCache.prototype.getTotalValue = function () {\n            return this._actual.getTotalValue();\n        };\n        PrefixSumComputerWithCache.prototype.getAccumulatedValue = function (index) {\n            return this._actual.getAccumulatedValue(index);\n        };\n        PrefixSumComputerWithCache.prototype.getIndexOf = function (accumulatedValue) {\n            accumulatedValue = Math.floor(accumulatedValue); //@perf\n            if (this._cache !== null) {\n                var cacheIndex = accumulatedValue - this._cacheAccumulatedValueStart;\n                if (cacheIndex >= 0 && cacheIndex < this._cache.length) {\n                    // Cache hit!\n                    return this._cache[cacheIndex];\n                }\n            }\n            // Cache miss!\n            return this._actual.getIndexOf(accumulatedValue);\n        };\n        /**\n         * Gives a hint that a lot of requests are about to come in for these accumulated values.\n         */\n        PrefixSumComputerWithCache.prototype.warmUpCache = function (accumulatedValueStart, accumulatedValueEnd) {\n            var newCache = [];\n            for (var accumulatedValue = accumulatedValueStart; accumulatedValue <= accumulatedValueEnd; accumulatedValue++) {\n                newCache[accumulatedValue - accumulatedValueStart] = this.getIndexOf(accumulatedValue);\n            }\n            this._cache = newCache;\n            this._cacheAccumulatedValueStart = accumulatedValueStart;\n        };\n        return PrefixSumComputerWithCache;\n    }());\n    exports.PrefixSumComputerWithCache = PrefixSumComputerWithCache;\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\ndefine(__m[30/*vs/editor/common/model/mirrorTextModel*/], __M([0/*require*/,1/*exports*/,2/*vs/editor/common/core/position*/,29/*vs/editor/common/viewModel/prefixSumComputer*/]), function (require, exports, position_1, prefixSumComputer_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    var MirrorTextModel = /** @class */ (function () {\n        function MirrorTextModel(uri, lines, eol, versionId) {\n            this._uri = uri;\n            this._lines = lines;\n            this._eol = eol;\n            this._versionId = versionId;\n            this._lineStarts = null;\n        }\n        MirrorTextModel.prototype.dispose = function () {\n            this._lines.length = 0;\n        };\n        MirrorTextModel.prototype.getText = function () {\n            return this._lines.join(this._eol);\n        };\n        MirrorTextModel.prototype.onEvents = function (e) {\n            if (e.eol && e.eol !== this._eol) {\n                this._eol = e.eol;\n                this._lineStarts = null;\n            }\n            // Update my lines\n            var changes = e.changes;\n            for (var _i = 0, changes_1 = changes; _i < changes_1.length; _i++) {\n                var change = changes_1[_i];\n                this._acceptDeleteRange(change.range);\n                this._acceptInsertText(new position_1.Position(change.range.startLineNumber, change.range.startColumn), change.text);\n            }\n            this._versionId = e.versionId;\n        };\n        MirrorTextModel.prototype._ensureLineStarts = function () {\n            if (!this._lineStarts) {\n                var eolLength = this._eol.length;\n                var linesLength = this._lines.length;\n                var lineStartValues = new Uint32Array(linesLength);\n                for (var i = 0; i < linesLength; i++) {\n                    lineStartValues[i] = this._lines[i].length + eolLength;\n                }\n                this._lineStarts = new prefixSumComputer_1.PrefixSumComputer(lineStartValues);\n            }\n        };\n        /**\n         * All changes to a line's text go through this method\n         */\n        MirrorTextModel.prototype._setLineText = function (lineIndex, newValue) {\n            this._lines[lineIndex] = newValue;\n            if (this._lineStarts) {\n                // update prefix sum\n                this._lineStarts.changeValue(lineIndex, this._lines[lineIndex].length + this._eol.length);\n            }\n        };\n        MirrorTextModel.prototype._acceptDeleteRange = function (range) {\n            if (range.startLineNumber === range.endLineNumber) {\n                if (range.startColumn === range.endColumn) {\n                    // Nothing to delete\n                    return;\n                }\n                // Delete text on the affected line\n                this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n                    + this._lines[range.startLineNumber - 1].substring(range.endColumn - 1));\n                return;\n            }\n            // Take remaining text on last line and append it to remaining text on first line\n            this._setLineText(range.startLineNumber - 1, this._lines[range.startLineNumber - 1].substring(0, range.startColumn - 1)\n                + this._lines[range.endLineNumber - 1].substring(range.endColumn - 1));\n            // Delete middle lines\n            this._lines.splice(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n            if (this._lineStarts) {\n                // update prefix sum\n                this._lineStarts.removeValues(range.startLineNumber, range.endLineNumber - range.startLineNumber);\n            }\n        };\n        MirrorTextModel.prototype._acceptInsertText = function (position, insertText) {\n            if (insertText.length === 0) {\n                // Nothing to insert\n                return;\n            }\n            var insertLines = insertText.split(/\\r\\n|\\r|\\n/);\n            if (insertLines.length === 1) {\n                // Inserting text on one line\n                this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1)\n                    + insertLines[0]\n                    + this._lines[position.lineNumber - 1].substring(position.column - 1));\n                return;\n            }\n            // Append overflowing text from first line to the end of text to insert\n            insertLines[insertLines.length - 1] += this._lines[position.lineNumber - 1].substring(position.column - 1);\n            // Delete overflowing text from first line and insert text on first line\n            this._setLineText(position.lineNumber - 1, this._lines[position.lineNumber - 1].substring(0, position.column - 1)\n                + insertLines[0]);\n            // Insert new lines & store lengths\n            var newLengths = new Uint32Array(insertLines.length - 1);\n            for (var i = 1; i < insertLines.length; i++) {\n                this._lines.splice(position.lineNumber + i - 1, 0, insertLines[i]);\n                newLengths[i - 1] = insertLines[i].length + this._eol.length;\n            }\n            if (this._lineStarts) {\n                // update prefix sum\n                this._lineStarts.insertValues(position.lineNumber, newLengths);\n            }\n        };\n        return MirrorTextModel;\n    }());\n    exports.MirrorTextModel = MirrorTextModel;\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n\n\n\n\n\n\n\n\n\n\n\ndefine(__m[31/*vs/editor/common/services/editorSimpleWorker*/], __M([0/*require*/,1/*exports*/,21/*vs/base/common/arrays*/,8/*vs/base/common/diff/diff*/,11/*vs/base/common/iterator*/,3/*vs/base/common/platform*/,12/*vs/base/common/uri*/,2/*vs/editor/common/core/position*/,6/*vs/editor/common/core/range*/,23/*vs/editor/common/diff/diffComputer*/,30/*vs/editor/common/model/mirrorTextModel*/,24/*vs/editor/common/model/wordHelper*/,25/*vs/editor/common/modes/linkComputer*/,26/*vs/editor/common/modes/supports/inplaceReplaceSupport*/,28/*vs/editor/common/standalone/standaloneBase*/,7/*vs/base/common/types*/]), function (require, exports, arrays_1, diff_1, iterator_1, platform_1, uri_1, position_1, range_1, diffComputer_1, mirrorTextModel_1, wordHelper_1, linkComputer_1, inplaceReplaceSupport_1, standaloneBase_1, types_1) {\n    \"use strict\";\n    Object.defineProperty(exports, \"__esModule\", { value: true });\n    /**\n     * @internal\n     */\n    var MirrorModel = /** @class */ (function (_super) {\n        __extends(MirrorModel, _super);\n        function MirrorModel() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        Object.defineProperty(MirrorModel.prototype, \"uri\", {\n            get: function () {\n                return this._uri;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(MirrorModel.prototype, \"version\", {\n            get: function () {\n                return this._versionId;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(MirrorModel.prototype, \"eol\", {\n            get: function () {\n                return this._eol;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        MirrorModel.prototype.getValue = function () {\n            return this.getText();\n        };\n        MirrorModel.prototype.getLinesContent = function () {\n            return this._lines.slice(0);\n        };\n        MirrorModel.prototype.getLineCount = function () {\n            return this._lines.length;\n        };\n        MirrorModel.prototype.getLineContent = function (lineNumber) {\n            return this._lines[lineNumber - 1];\n        };\n        MirrorModel.prototype.getWordAtPosition = function (position, wordDefinition) {\n            var wordAtText = wordHelper_1.getWordAtText(position.column, wordHelper_1.ensureValidWordDefinition(wordDefinition), this._lines[position.lineNumber - 1], 0);\n            if (wordAtText) {\n                return new range_1.Range(position.lineNumber, wordAtText.startColumn, position.lineNumber, wordAtText.endColumn);\n            }\n            return null;\n        };\n        MirrorModel.prototype.getWordUntilPosition = function (position, wordDefinition) {\n            var wordAtPosition = this.getWordAtPosition(position, wordDefinition);\n            if (!wordAtPosition) {\n                return {\n                    word: '',\n                    startColumn: position.column,\n                    endColumn: position.column\n                };\n            }\n            return {\n                word: this._lines[position.lineNumber - 1].substring(wordAtPosition.startColumn - 1, position.column - 1),\n                startColumn: wordAtPosition.startColumn,\n                endColumn: position.column\n            };\n        };\n        MirrorModel.prototype.createWordIterator = function (wordDefinition) {\n            var _this = this;\n            var obj;\n            var lineNumber = 0;\n            var lineText;\n            var wordRangesIdx = 0;\n            var wordRanges = [];\n            var next = function () {\n                if (wordRangesIdx < wordRanges.length) {\n                    var value = lineText.substring(wordRanges[wordRangesIdx].start, wordRanges[wordRangesIdx].end);\n                    wordRangesIdx += 1;\n                    if (!obj) {\n                        obj = { done: false, value: value };\n                    }\n                    else {\n                        obj.value = value;\n                    }\n                    return obj;\n                }\n                else if (lineNumber >= _this._lines.length) {\n                    return iterator_1.FIN;\n                }\n                else {\n                    lineText = _this._lines[lineNumber];\n                    wordRanges = _this._wordenize(lineText, wordDefinition);\n                    wordRangesIdx = 0;\n                    lineNumber += 1;\n                    return next();\n                }\n            };\n            return { next: next };\n        };\n        MirrorModel.prototype.getLineWords = function (lineNumber, wordDefinition) {\n            var content = this._lines[lineNumber - 1];\n            var ranges = this._wordenize(content, wordDefinition);\n            var words = [];\n            for (var _i = 0, ranges_1 = ranges; _i < ranges_1.length; _i++) {\n                var range = ranges_1[_i];\n                words.push({\n                    word: content.substring(range.start, range.end),\n                    startColumn: range.start + 1,\n                    endColumn: range.end + 1\n                });\n            }\n            return words;\n        };\n        MirrorModel.prototype._wordenize = function (content, wordDefinition) {\n            var result = [];\n            var match;\n            wordDefinition.lastIndex = 0; // reset lastIndex just to be sure\n            while (match = wordDefinition.exec(content)) {\n                if (match[0].length === 0) {\n                    // it did match the empty string\n                    break;\n                }\n                result.push({ start: match.index, end: match.index + match[0].length });\n            }\n            return result;\n        };\n        MirrorModel.prototype.getValueInRange = function (range) {\n            range = this._validateRange(range);\n            if (range.startLineNumber === range.endLineNumber) {\n                return this._lines[range.startLineNumber - 1].substring(range.startColumn - 1, range.endColumn - 1);\n            }\n            var lineEnding = this._eol;\n            var startLineIndex = range.startLineNumber - 1;\n            var endLineIndex = range.endLineNumber - 1;\n            var resultLines = [];\n            resultLines.push(this._lines[startLineIndex].substring(range.startColumn - 1));\n            for (var i = startLineIndex + 1; i < endLineIndex; i++) {\n                resultLines.push(this._lines[i]);\n            }\n            resultLines.push(this._lines[endLineIndex].substring(0, range.endColumn - 1));\n            return resultLines.join(lineEnding);\n        };\n        MirrorModel.prototype.offsetAt = function (position) {\n            position = this._validatePosition(position);\n            this._ensureLineStarts();\n            return this._lineStarts.getAccumulatedValue(position.lineNumber - 2) + (position.column - 1);\n        };\n        MirrorModel.prototype.positionAt = function (offset) {\n            offset = Math.floor(offset);\n            offset = Math.max(0, offset);\n            this._ensureLineStarts();\n            var out = this._lineStarts.getIndexOf(offset);\n            var lineLength = this._lines[out.index].length;\n            // Ensure we return a valid position\n            return {\n                lineNumber: 1 + out.index,\n                column: 1 + Math.min(out.remainder, lineLength)\n            };\n        };\n        MirrorModel.prototype._validateRange = function (range) {\n            var start = this._validatePosition({ lineNumber: range.startLineNumber, column: range.startColumn });\n            var end = this._validatePosition({ lineNumber: range.endLineNumber, column: range.endColumn });\n            if (start.lineNumber !== range.startLineNumber\n                || start.column !== range.startColumn\n                || end.lineNumber !== range.endLineNumber\n                || end.column !== range.endColumn) {\n                return {\n                    startLineNumber: start.lineNumber,\n                    startColumn: start.column,\n                    endLineNumber: end.lineNumber,\n                    endColumn: end.column\n                };\n            }\n            return range;\n        };\n        MirrorModel.prototype._validatePosition = function (position) {\n            if (!position_1.Position.isIPosition(position)) {\n                throw new Error('bad position');\n            }\n            var lineNumber = position.lineNumber, column = position.column;\n            var hasChanged = false;\n            if (lineNumber < 1) {\n                lineNumber = 1;\n                column = 1;\n                hasChanged = true;\n            }\n            else if (lineNumber > this._lines.length) {\n                lineNumber = this._lines.length;\n                column = this._lines[lineNumber - 1].length + 1;\n                hasChanged = true;\n            }\n            else {\n                var maxCharacter = this._lines[lineNumber - 1].length + 1;\n                if (column < 1) {\n                    column = 1;\n                    hasChanged = true;\n                }\n                else if (column > maxCharacter) {\n                    column = maxCharacter;\n                    hasChanged = true;\n                }\n            }\n            if (!hasChanged) {\n                return position;\n            }\n            else {\n                return { lineNumber: lineNumber, column: column };\n            }\n        };\n        return MirrorModel;\n    }(mirrorTextModel_1.MirrorTextModel));\n    /**\n     * @internal\n     */\n    var BaseEditorSimpleWorker = /** @class */ (function () {\n        function BaseEditorSimpleWorker(foreignModuleFactory) {\n            this._foreignModuleFactory = foreignModuleFactory;\n            this._foreignModule = null;\n        }\n        // ---- BEGIN diff --------------------------------------------------------------------------\n        BaseEditorSimpleWorker.prototype.computeDiff = function (originalUrl, modifiedUrl, ignoreTrimWhitespace) {\n            var original = this._getModel(originalUrl);\n            var modified = this._getModel(modifiedUrl);\n            if (!original || !modified) {\n                return Promise.resolve(null);\n            }\n            var originalLines = original.getLinesContent();\n            var modifiedLines = modified.getLinesContent();\n            var diffComputer = new diffComputer_1.DiffComputer(originalLines, modifiedLines, {\n                shouldComputeCharChanges: true,\n                shouldPostProcessCharChanges: true,\n                shouldIgnoreTrimWhitespace: ignoreTrimWhitespace,\n                shouldMakePrettyDiff: true\n            });\n            var changes = diffComputer.computeDiff();\n            var identical = (changes.length > 0 ? false : this._modelsAreIdentical(original, modified));\n            return Promise.resolve({\n                identical: identical,\n                changes: changes\n            });\n        };\n        BaseEditorSimpleWorker.prototype._modelsAreIdentical = function (original, modified) {\n            var originalLineCount = original.getLineCount();\n            var modifiedLineCount = modified.getLineCount();\n            if (originalLineCount !== modifiedLineCount) {\n                return false;\n            }\n            for (var line = 1; line <= originalLineCount; line++) {\n                var originalLine = original.getLineContent(line);\n                var modifiedLine = modified.getLineContent(line);\n                if (originalLine !== modifiedLine) {\n                    return false;\n                }\n            }\n            return true;\n        };\n        BaseEditorSimpleWorker.prototype.computeMoreMinimalEdits = function (modelUrl, edits) {\n            var model = this._getModel(modelUrl);\n            if (!model) {\n                return Promise.resolve(edits);\n            }\n            var result = [];\n            var lastEol = undefined;\n            edits = arrays_1.mergeSort(edits, function (a, b) {\n                if (a.range && b.range) {\n                    return range_1.Range.compareRangesUsingStarts(a.range, b.range);\n                }\n                // eol only changes should go to the end\n                var aRng = a.range ? 0 : 1;\n                var bRng = b.range ? 0 : 1;\n                return aRng - bRng;\n            });\n            for (var _i = 0, edits_1 = edits; _i < edits_1.length; _i++) {\n                var _a = edits_1[_i], range = _a.range, text = _a.text, eol = _a.eol;\n                if (typeof eol === 'number') {\n                    lastEol = eol;\n                }\n                if (range_1.Range.isEmpty(range) && !text) {\n                    // empty change\n                    continue;\n                }\n                var original = model.getValueInRange(range);\n                text = text.replace(/\\r\\n|\\n|\\r/g, model.eol);\n                if (original === text) {\n                    // noop\n                    continue;\n                }\n                // make sure diff won't take too long\n                if (Math.max(text.length, original.length) > BaseEditorSimpleWorker._diffLimit) {\n                    result.push({ range: range, text: text });\n                    continue;\n                }\n                // compute diff between original and edit.text\n                var changes = diff_1.stringDiff(original, text, false);\n                var editOffset = model.offsetAt(range_1.Range.lift(range).getStartPosition());\n                for (var _b = 0, changes_1 = changes; _b < changes_1.length; _b++) {\n                    var change = changes_1[_b];\n                    var start = model.positionAt(editOffset + change.originalStart);\n                    var end = model.positionAt(editOffset + change.originalStart + change.originalLength);\n                    var newEdit = {\n                        text: text.substr(change.modifiedStart, change.modifiedLength),\n                        range: { startLineNumber: start.lineNumber, startColumn: start.column, endLineNumber: end.lineNumber, endColumn: end.column }\n                    };\n                    if (model.getValueInRange(newEdit.range) !== newEdit.text) {\n                        result.push(newEdit);\n                    }\n                }\n            }\n            if (typeof lastEol === 'number') {\n                result.push({ eol: lastEol, text: '', range: { startLineNumber: 0, startColumn: 0, endLineNumber: 0, endColumn: 0 } });\n            }\n            return Promise.resolve(result);\n        };\n        // ---- END minimal edits ---------------------------------------------------------------\n        BaseEditorSimpleWorker.prototype.computeLinks = function (modelUrl) {\n            var model = this._getModel(modelUrl);\n            if (!model) {\n                return Promise.resolve(null);\n            }\n            return Promise.resolve(linkComputer_1.computeLinks(model));\n        };\n        BaseEditorSimpleWorker.prototype.textualSuggest = function (modelUrl, position, wordDef, wordDefFlags) {\n            var model = this._getModel(modelUrl);\n            if (!model) {\n                return Promise.resolve(null);\n            }\n            var seen = Object.create(null);\n            var suggestions = [];\n            var wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n            var wordUntil = model.getWordUntilPosition(position, wordDefRegExp);\n            var wordAt = model.getWordAtPosition(position, wordDefRegExp);\n            if (wordAt) {\n                seen[model.getValueInRange(wordAt)] = true;\n            }\n            for (var iter = model.createWordIterator(wordDefRegExp), e = iter.next(); !e.done && suggestions.length <= BaseEditorSimpleWorker._suggestionsLimit; e = iter.next()) {\n                var word = e.value;\n                if (seen[word]) {\n                    continue;\n                }\n                seen[word] = true;\n                if (!isNaN(Number(word))) {\n                    continue;\n                }\n                suggestions.push({\n                    kind: 18 /* Text */,\n                    label: word,\n                    insertText: word,\n                    range: { startLineNumber: position.lineNumber, startColumn: wordUntil.startColumn, endLineNumber: position.lineNumber, endColumn: wordUntil.endColumn }\n                });\n            }\n            return Promise.resolve({ suggestions: suggestions });\n        };\n        // ---- END suggest --------------------------------------------------------------------------\n        //#region -- word ranges --\n        BaseEditorSimpleWorker.prototype.computeWordRanges = function (modelUrl, range, wordDef, wordDefFlags) {\n            var model = this._getModel(modelUrl);\n            if (!model) {\n                return Promise.resolve(Object.create(null));\n            }\n            var wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n            var result = Object.create(null);\n            for (var line = range.startLineNumber; line < range.endLineNumber; line++) {\n                var words = model.getLineWords(line, wordDefRegExp);\n                for (var _i = 0, words_1 = words; _i < words_1.length; _i++) {\n                    var word = words_1[_i];\n                    if (!isNaN(Number(word.word))) {\n                        continue;\n                    }\n                    var array = result[word.word];\n                    if (!array) {\n                        array = [];\n                        result[word.word] = array;\n                    }\n                    array.push({\n                        startLineNumber: line,\n                        startColumn: word.startColumn,\n                        endLineNumber: line,\n                        endColumn: word.endColumn\n                    });\n                }\n            }\n            return Promise.resolve(result);\n        };\n        //#endregion\n        BaseEditorSimpleWorker.prototype.navigateValueSet = function (modelUrl, range, up, wordDef, wordDefFlags) {\n            var model = this._getModel(modelUrl);\n            if (!model) {\n                return Promise.resolve(null);\n            }\n            var wordDefRegExp = new RegExp(wordDef, wordDefFlags);\n            if (range.startColumn === range.endColumn) {\n                range = {\n                    startLineNumber: range.startLineNumber,\n                    startColumn: range.startColumn,\n                    endLineNumber: range.endLineNumber,\n                    endColumn: range.endColumn + 1\n                };\n            }\n            var selectionText = model.getValueInRange(range);\n            var wordRange = model.getWordAtPosition({ lineNumber: range.startLineNumber, column: range.startColumn }, wordDefRegExp);\n            if (!wordRange) {\n                return Promise.resolve(null);\n            }\n            var word = model.getValueInRange(wordRange);\n            var result = inplaceReplaceSupport_1.BasicInplaceReplace.INSTANCE.navigateValueSet(range, selectionText, wordRange, word, up);\n            return Promise.resolve(result);\n        };\n        // ---- BEGIN foreign module support --------------------------------------------------------------------------\n        BaseEditorSimpleWorker.prototype.loadForeignModule = function (moduleId, createData) {\n            var _this = this;\n            var ctx = {\n                getMirrorModels: function () {\n                    return _this._getModels();\n                }\n            };\n            if (this._foreignModuleFactory) {\n                this._foreignModule = this._foreignModuleFactory(ctx, createData);\n                // static foreing module\n                var methods = [];\n                for (var _i = 0, _a = types_1.getAllPropertyNames(this._foreignModule); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    if (typeof this._foreignModule[prop] === 'function') {\n                        methods.push(prop);\n                    }\n                }\n                return Promise.resolve(methods);\n            }\n            // ESM-comment-begin\n            return new Promise(function (resolve, reject) {\n                require([moduleId], function (foreignModule) {\n                    _this._foreignModule = foreignModule.create(ctx, createData);\n                    var methods = [];\n                    for (var _i = 0, _a = types_1.getAllPropertyNames(_this._foreignModule); _i < _a.length; _i++) {\n                        var prop = _a[_i];\n                        if (typeof _this._foreignModule[prop] === 'function') {\n                            methods.push(prop);\n                        }\n                    }\n                    resolve(methods);\n                }, reject);\n            });\n            // ESM-comment-end\n            // ESM-uncomment-begin\n            // return Promise.reject(new Error(`Unexpected usage`));\n            // ESM-uncomment-end\n        };\n        // foreign method request\n        BaseEditorSimpleWorker.prototype.fmr = function (method, args) {\n            if (!this._foreignModule || typeof this._foreignModule[method] !== 'function') {\n                return Promise.reject(new Error('Missing requestHandler or method: ' + method));\n            }\n            try {\n                return Promise.resolve(this._foreignModule[method].apply(this._foreignModule, args));\n            }\n            catch (e) {\n                return Promise.reject(e);\n            }\n        };\n        // ---- END diff --------------------------------------------------------------------------\n        // ---- BEGIN minimal edits ---------------------------------------------------------------\n        BaseEditorSimpleWorker._diffLimit = 100000;\n        // ---- BEGIN suggest --------------------------------------------------------------------------\n        BaseEditorSimpleWorker._suggestionsLimit = 10000;\n        return BaseEditorSimpleWorker;\n    }());\n    exports.BaseEditorSimpleWorker = BaseEditorSimpleWorker;\n    /**\n     * @internal\n     */\n    var EditorSimpleWorkerImpl = /** @class */ (function (_super) {\n        __extends(EditorSimpleWorkerImpl, _super);\n        function EditorSimpleWorkerImpl(foreignModuleFactory) {\n            var _this = _super.call(this, foreignModuleFactory) || this;\n            _this._models = Object.create(null);\n            return _this;\n        }\n        EditorSimpleWorkerImpl.prototype.dispose = function () {\n            this._models = Object.create(null);\n        };\n        EditorSimpleWorkerImpl.prototype._getModel = function (uri) {\n            return this._models[uri];\n        };\n        EditorSimpleWorkerImpl.prototype._getModels = function () {\n            var _this = this;\n            var all = [];\n            Object.keys(this._models).forEach(function (key) { return all.push(_this._models[key]); });\n            return all;\n        };\n        EditorSimpleWorkerImpl.prototype.acceptNewModel = function (data) {\n            this._models[data.url] = new MirrorModel(uri_1.URI.parse(data.url), data.lines, data.EOL, data.versionId);\n        };\n        EditorSimpleWorkerImpl.prototype.acceptModelChanged = function (strURL, e) {\n            if (!this._models[strURL]) {\n                return;\n            }\n            var model = this._models[strURL];\n            model.onEvents(e);\n        };\n        EditorSimpleWorkerImpl.prototype.acceptRemovedModel = function (strURL) {\n            if (!this._models[strURL]) {\n                return;\n            }\n            delete this._models[strURL];\n        };\n        return EditorSimpleWorkerImpl;\n    }(BaseEditorSimpleWorker));\n    exports.EditorSimpleWorkerImpl = EditorSimpleWorkerImpl;\n    /**\n     * Called on the worker side\n     * @internal\n     */\n    function create() {\n        return new EditorSimpleWorkerImpl(null);\n    }\n    exports.create = create;\n    if (typeof importScripts === 'function') {\n        // Running in a web worker\n        platform_1.globals.monaco = standaloneBase_1.createMonacoBaseAPI();\n    }\n});\n","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n(function () {\n    var MonacoEnvironment = self.MonacoEnvironment;\n    var monacoBaseUrl = MonacoEnvironment && MonacoEnvironment.baseUrl ? MonacoEnvironment.baseUrl : '../../../';\n    if (typeof self.define !== 'function' || !self.define.amd) {\n        importScripts(monacoBaseUrl + 'vs/loader.js');\n    }\n    require.config({\n        baseUrl: monacoBaseUrl,\n        catchError: true\n    });\n    var loadCode = function (moduleId) {\n        require([moduleId], function (ws) {\n            setTimeout(function () {\n                var messageHandler = ws.create(function (msg) {\n                    self.postMessage(msg);\n                }, null);\n                self.onmessage = function (e) { return messageHandler.onmessage(e.data); };\n                while (beforeReadyMessages.length > 0) {\n                    self.onmessage(beforeReadyMessages.shift());\n                }\n            }, 0);\n        });\n    };\n    var isFirstMessage = true;\n    var beforeReadyMessages = [];\n    self.onmessage = function (message) {\n        if (!isFirstMessage) {\n            beforeReadyMessages.push(message);\n            return;\n        }\n        isFirstMessage = false;\n        loadCode(message.data);\n    };\n})();\n"]}